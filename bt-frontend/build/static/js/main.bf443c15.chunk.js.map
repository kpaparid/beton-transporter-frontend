{"version":3,"sources":["components/Filters/CustomDropdown.js","pages/myComponents/util/utilities.js","components/DatePicker.js","components/TimePicker.js","assets/img/technologies/react-logo-transparent.svg","firebase.js","contexts/AuthContext.js","contexts/globalState.js","pages/myComponents/util/services.js","components/ScrollToTop.js","components/Preloader.js","routes.js","components/Sidebar.js","assets/img/favicon/android-chrome-192x192.png","components/Sidebar2.js","assets/img/illustrations/signin.svg","components/ContactAvatar.js","components/RolesBadges.js","components/StatusBadges.js","components/VerifiedButton.js","pages/myComponents/util/types.js","pages/myComponents/util/labels.js","api/apiMappers.js","pages/reducers/redux.js","pages/authentication/AddUser.js","assets/img/illustrations/404.svg","pages/authentication/NotFound.js","assets/img/illustrations/500.svg","pages/authentication/ServerError.js","pages/authentication/Signin.js","pages/messages/Chat.js","pages/messages/UserChat.js","pages/messages/UserMessenger.js","components/Table/TableCore.js","components/AccordionComponent.js","components/Filters/NestedDropdown.js","components/Table/TableButtons.js","components/Table/TableHeader.js","components/MyRangeSlider.js","components/MyCheckbox.js","components/Filters/FilterComponent.js","components/MonthPicker.js","components/YearPicker.js","components/Table/TableTitle.js","pages/reducers/selectors.js","components/Table/GridComponent.js","components/Charts.js","components/Widgets.js","assets/img/team/profile-picture-1.jpg","assets/img/profile-cover.jpg","pages/overview/DashboardOverview.js","pages/overview/UserOverview.js","pages/settings/Settings.js","pages/settings/Users.js","pages/settings/UserSettings.js","pages/vacations/UserVacations.js","components/MuiSelect.js","pages/workHours/DashboardWorkHours.js","pages/workHours/UserWorkHours.js","pages/tours/AddTours.js","pages/tours/DashboardTours.js","pages/tours/UserTours.js","pages/workHours/AddWorkHours.js","pages/home/Home.js","pages/home/UserHome.js","pages/home/HomePage.js","index.js","components/ComponentPreLoader.js"],"names":["CustomDropdown","forwardRef","initialRef","variant","value","as","className","menuClassName","toggleClassName","disabled","children","toggleAs","toggleStyle","portal","drop","align","flip","onToggle","width","show","controlledShow","toggle","controlled","refList","inputRef","toggleRef","useRef","toggleAsComponent","DropdownToggle","CustomToggle","useState","backupShow","setBackupShow","setShow","handleToggle","useCallback","_t","_e","metadata","focusWithinInput","current","contains","document","activeElement","focusWithin","map","ref","reduce","a","b","source","onClose","Toggle","id","style","Menu","props","onClick","bg","e","preventDefault","fillWhites","arr","index","numRows","arr1","fillTopWhites","newArr","n","fillBottomWhites","length","calcIndexedCalendarDays","date","labels","startofMonth","moment","startOf","format","endOfMonth","parseInt","endOf","findIndex","day","calcCalendarRows","days","Array","daysInMonth","keys","d","da","toString","prev","curr","newCurr","newLine","key","Object","fill","_","colIndex","row","transpose","label","DateSelectorDropdown","memo","onChange","inputStyle","withButton","onBlur","inputProps","Input","singleDate","disableMonthSwap","dropdownClassName","handleSelectorChange","handleInputChange","v","target","isValid","domInput","rest","type","autoFocus","toggleComponent","IconButton","padding","left","bottom","height","icon","faCalendar","ButtonGroup","DateSelector","from","to","isEqual","DatePickerModal","size","initialValue","buttonText","buttonVariant","closeVariant","saveVariant","timeVariant","timeActiveVariant","buttonClassName","modalClassName","modalContentClassName","setValue","handleDateChange","handleClose","handleSave","useEffect","Button","Modal","onHide","centered","contentClassName","Body","Footer","carousel","initialClassName","useMemo","filter","values","setValues","handleChange","handleClick","name","newValues","sort","DateSelectorComponent","year","initialYear","month","initialMonth","onMonthChange","setMonth","setYear","handleIncreaseMonth","calc","newMonth","slice","old","newYear","handleDecreaseMonth","decr","DateSelectorPureComponent","DateCarousel","subtract","slides","el","add","spaceBetween","modules","Virtual","slidesPerView","centeredSlides","initialSlide","virtual","onSlideChange","activeIndex","slideContent","virtualIndex","renderHeader","title","hoveredDay","setHoveredDay","handleMouseOver","handleMouseLeave","weekdays","k","concat","headers","substr","tableDays","header","Card","Header","onMouseDown","faArrowLeft","faArrowRight","Table","data","onMouseOver","clickedId","onMouseLeave","TableRow","highlightedDays","disabledDays","min","max","i","substring","includes","isAfter","isBefore","DayButton","borderRadius","border","HeaderRow","checked","handleAllClick","checkbox","Form","Check","htmlFor","TimePickerModal","defaultValue","splitted","split","hour","minute","scrollable","Title","TimeSelectorBody","TimePickerDropdown","TimeSelector","isequal","TimeSelectorRange","gte","lte","faLongArrowAltLeft","position","faLongArrowAltRight","right","close","buttonSize","ref1","ref2","hours","minutes","h1","h2","scrollTop","autoHeight","autoHide","marginBottom","autoHeightMin","autoHeightMax","renderTrackHorizontal","display","auth","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","AuthContext","createContext","useAuth","useContext","AuthProvider","currentUser","setCurrentUser","currentRole","getIdTokenResult","then","claims","claim","loading","setLoading","getHeader","getIdToken","idToken","Authorization","authenticatedFetch","options","defaults","assign","fetch","url","response","json","res","status","Promise","reject","catch","onAuthStateChanged","user","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","findChatMessages","senderId","recipientId","page","method","countNewMessages","findNewMessages","senderIds","join","findConnection","findUnreadMessages","findChatMessage","findUnreadCount","updateUser","updateProfile","r","reload","updatePW","newPassword","updatePhone","PhoneAuthCredential","updatePhoneNumber","Provider","useUserNavbar","displayName","image","photoURL","Image","src","lineHeight","textAlign","dropdown","Dropdown","Nav","Item","Link","minWidth","faSignOutAlt","persistAtom","recoilPersist","storage","sessionStorage","chatActiveContact","atom","default","effects_UNSTABLE","chatMessages","chatContacts","chatUsers","useServices","fetchAddToursSettings","postSettings","body","JSON","stringify","registerUsers","fetchTodaysTours","driver","fetchWorkHours","fetchUserWorkHours","uid","fetchTours","fetchUserTours","fetchTodaysWorkHours","fetchUpComingVacations","fetchUserConfirmedVacations","postTour","postWorkHour","postVacations","deleteTour","deleteWorkHour","deleteVacation","fetchUsers","fetchSettings","stompClient","useChatServices","initialActiveContact","onNewMessage","initializeContactOnLoad","setPage","totalPages","setTotalPages","useRecoilState","activeContact","setActiveContact","contacts","setContacts","setUsers","messages","setMessages","removeItem","updateContacts","users","contactsIds","c","newContacts","u","message","unreadCount","timestamp","localeCompare","loadContacts","parse","getItem","handleOnConnected","setActiveContactUid","contact","find","onMessageReceived","msg","notification","active","newMessages","msgs","content","activeUid","setActive","useConnectChat","onConnected","sendMessage","disconnect","handleDisconnect","console","log","handleSendMessage","success","loadNextPage","finalMessages","Set","m","handleMessageReceived","handleConnected","subscribe","onError","err","connect","Stomp","require","socket","over","frame","senderName","recipientName","trim","toISOString","send","useGeoAddresses","timeout","places","setPlaces","result","newPlaces","results","formatted","replace","error","debouncedChange","debounce","pathname","useLocation","window","scrollTo","top","behavior","ReactLogo","MyRoutes","path","MyButton","boxShadow","Sidebar","showClass","onCollapse","NavItem","link","external","badgeText","badgeBg","badgeColor","classNames","navItemClassName","linkProps","href","pill","text","Navbar","expand","collapseOnSelect","transform","CSSTransition","in","faTimes","faChartPie","faHandHoldingUsd","faUser","faCog","Sidebar2","Android","ContactAvatar","photoUrl","isEditable","resize","RolesBadges","maxWidth","isUser","isDriver","isAdmin","isSuper","toUpperCase","enabled","RoleBadge","fontSize","StatusBadges","Badge","VerifiedButton","active1","active2","active3","className1","className2","className3","faCheck","faMinus","PAGINATION","API","durationFormat","duration","isNaN","calcDurationAndFormat","t1","t2","diff","toDateFormat","defaultPostMapper","entityId","state","tablesSelector","labelsSelector","changesSelector","metaSelector","selectById","changes","addRow","postInitialValues","rows","selectAll","bodyE","startingValue","idx","drivers","getGridUrl","settingsPostMapper","changesIds","newRows","settingsDeleteMapper","selectedRows","defaultDeleteMapper","getGridTableConnections","gridLabels","connections","getGridRowClassName","rowClassName","getGridDateFilter","dateFilter","getGridWidgets","widgets","getGridPrimaryLabels","primaryLabels","getGridLabelFormat","labelIdx","getGridLabels","getGridLabelFn","fn","getGridLabelDefaultValue","getGridLabelLinks","connection","dependencies","getGridLabelProps","nanoid","settingsVehicle","remove","delete","massEdit","download","pagination","counter","edit","secondaryLabels","postMapper","deleteMapper","vehicle","settingsDischargeType","dischargeType","settingsWorkPlant","workPlant","publicHolidays","meta","filterType","pageSize","vacationDays","tertiaryLabels","roles","String","toLowerCase","hidden","tours","userType","deliveryNr","buildingSite","cbm","measurement","arrival","departure","kmArrival","kmDeparture","distance","dischargeBegin","dischargeEnd","waitTime","other","notRequired","workHours","onUpdate","onDateChange","eq","dateType","ignoreSort","begin","end","pause","workHoursBank","editable","absent","dateFrom","dateTo","reason","vacationsOverview","taken","vacations","footer","verified","workHoursByDate","pendingVacations","upcomingAbsent","now","useLoadData","tableName","actions","stateAPIStatus","setAPIStatus","dispatch","useDispatch","loadMessagesPage","fetchMeta","fetchAndInitEntityGrid","addMeta","clearTables","fetchDrivers","payload","driverName","formattedDate","driverFilter","workHoursFilter","absentDaysFilter","neq","vacationsFilter","workHoursBankFilter","vacationsOverviewFilter","postInitialValueWorkHours","postInitialValueAbsentDays","postInitialValueVacations","limit","initialFilters","initialSort","order","loadWorkHoursPage","loadToursPage","requestOptions","cbmFetchers","pendingVacationsFilter","upcomingAbsentFilter","dispatchers","names","promiseFetchers","fetchers","all","responses","jsonObjects","o","loadOverviewPage","countryCode","loadSettingsPage","loadUsersPage","loadSettings","normalizeInitApi","mObject","getConnections","tableIds","nanoidLabelsTable","getNanoidLabelsTable","tableId","labelsByTableId","nanoidsByLabelIdByTableId","links","connectionIdx","getLabelsByTableId","rowsByTableId","mapRowsToNanoidLabels","tables","tableRowsIds","l","selectedLabels","permaHiddenLabels","nanoids","sortedRowsIds","memory","getTable","modes","normalizeApi","updateTableRows","getValue","allLabels","s","getGridTertiaryLabels","primaryCells","secondaryCells","calcValue","dependantValues","tertiaryCells","mapPromiseData","calcSort","oldSort","sortToUrl","calcFilters","oldFilters","action","filtersToUrl","filters","entries","parsePagination","rowsCount","totalElements","pagesCount","gridTableSlice","sliceName","metaAdapter","createEntityAdapter","usersAdapter","tablesAdapter","datesAdapter","labelsAdapter","changesAdapter","modesAdapter","filtersAdapter","getSelectors","usersSelector","datesSelector","dates","modesSelector","filtersSelector","modesSelectById","tablesSelectById","fetchUpdatedEntity","createAsyncThunk","thunkAPI","addInitialFilters","addInitialSort","getState","newFilters","newInitialFilters","newInitialSort","filterLink","sortLink","finalUrl","urlSuffix","undefined","Error","postRows","deleteRows","fetchPage","fetchFiltered","fetchSortedEntityGrid","labelId","calculatedSort","pageSuffix","createSlice","initialState","getInitialState","extraReducers","fulfilled","g","upsertOne","setMany","pending","arg","mapped","upsertMany","removeMany","table","reducers","addInitialFilter","oldInitialFilters","changeCurrentUser","toggleColumn","columnId","oldValues","newValue","changeMode","mode","oldValue","toggleAllChecked","oldSelectedRows","allRows","newSelectedRows","updateOne","closeAllChecked","setSelectedRows","onSelectRow","rowId","newV","addChange","oldChangesIds","newChanges","oldChanges","changesSelectById","oldRow","newRow","labelsSelectById","changesById","resetChanges","addTableDate","removeAll","selectors","reducer","createGenericSlice","AddUser","availableValues","setAvailableValues","selectSettings","settings","useSelector","useSettings","emailRef","setError","useNavigate","useForm","register","handleSubmit","watch","getValues","formState","errors","required","Container","Row","backgroundImage","BgImage","Col","xs","Alert","onSubmit","Group","Label","InputGroup","Text","Control","placeholder","faUnlockAlt","faEnvelope","replaceAll","faPlus","faPhone","NotFoundImage","faChevronLeft","ServerError","lg","ErrorImage","Signin","passwordRef","navigate","ContactsList","Contact","ContactContent","fname","time","formattedTime","unreadExists","ContactPhoto","CardHeader","CardBody","onScroll","handleScroll","currentTarget","scrollHeight","clientHeight","Spinner","animation","Fragment","Message","toDateBarFormat","sent","timeTextVariant","divClassName","CardFooter","textAreaRef","setText","parseEmojis","handleTextChange","handleSend","handleEnterKey","spellCheck","onKeyDown","maxRows","faPaperPlane","toArray","previous","Chat","setTimeout","handleContactClick","renderTrackVertical","lastSignIn","Notification","toast","update","render","bodyClassName","toastId","act","autoClose","hideProgressBar","newestOnTop","rtl","pauseOnFocusLoss","draggablePercent","pauseOnHover","onDisconnect","lastMessage","handleLeaveClick","overflow","outline","UserChat","MessengerList","role","hourMinute","UserMessenger","LazyInput","React","lazy","TableCore","selectData","selectShownColumns","onCellChange","footerProps","columns","setColumns","updateMyData","debouncedUpdate","RTables","TableFooter","currentPageSize","headerProps","bodyProps","responsive","TableBody","selectHiddenColumns","selectSelectedRows","selectAddRow","modeselector","hiddenColumns","AddRow","isSelected","IndeterminateCheckbox","RenderRow","TableCell","cellProps","EditableCell","measurementEnabled","formattedValue","handleUpdateData","fallback","ComponentPreLoader","logo","TableHead","onSelectAllRows","selectPaginationData","selectSortedColumn","sortProps","sortedColumn","sorted","column","TableColumn","onToggleSort","sortEnabled","sortedComponent","faCaretDown","faCaretUp","resolvedRef","indeterminate","PaginationItem","gotoPage","Pagination","paginationProps","counterProps","pageIndex","PaginationComponent","onPageChange","currentPage","pageOffset","pages","Prev","faAngleDoubleLeft","faAngleLeft","itemProps","p","Next","faAngleRight","faAngleDoubleRight","AccordionComponent","AccordionItem","item","eventKey","description","Accordion","stopPropagation","nativeEvent","stopImmediatePropagation","decoratedOnClick","useAccordionButton","CheckboxRow","NestedDropdown","component","onToggleItem","resetAll","disableCheckBox","items","displayArrow","TableButtons","selectSelectedRowsExist","selectChangesExist","selectMode","onDelete","onAdd","onDownload","onSave","onChangeMode","filterProps","forceClose","modalProps","editMode","addMode","selectedRowsExist","changesExist","clearChanges","handleAddRow","handleEditEnable","handleDelete","Filter","faEdit","faTrash","faSave","faWindowClose","keyboard","MyBtn","TableLabel","titleProps","buttonGroupProps","selectItemsFilter","onToggleLabel","nestedFilterComponent","selectItemsNestedFilter","onResetAllFilters","transition","faSlidersH","RangeInput","styled","theme","borderColor","MozAppearance","WebkitAppearance","margin","MySlider","Slider","color","backgroundColor","marginLeft","marginRight","palette","opacity","ThumbComponent","MyRangeSlider","event","paddingLeft","paddingRight","components","Thumb","getAriaLabel","step","MyCheckboxFilter","onToggleAll","onToggleOne","checkedAll","MyCheckboxContainer","handler","checkboxVariant","List","hover","createItemData","memoize","toggleItemActive","itemData","outerElementType","CustomScrollbarsVirtualList","itemCount","itemSize","areEqual","CustomScrollbars","forwardedRef","refSetter","scrollbarsRef","view","FilterComponent","selector","CheckboxWrapper","TimeWrapper","RangeWrapper","DateWrapper","onToggleCheckbox","onToggleAllCheckbox","toggleOne","toggleAll","onChangeRange","handleChangeRangeSlider","debouncedChangeRangeSlider","handleChangeTimePicker","onReset","dateChange","MonthSelectorDropdown","MonthButton","MonthSelector","handlerMonthChange","change","handlerYearChange","y","MonthSelectorComponent","activeMonth","setActiveMonth","colorize","monthsShort","YearSelectorDropdown","YearSelector","YearSelectorComponent","TitleComponent","selectTableDate","getGridTitle","tableDate","ISO_8601","useGridTableProps","selectAllRowsById","selectAllLabelsById","selectEntities","selectLoading","selectSelectedLabels","selectShownLabels","selectShownRows","selectDrivers","selectChanges","selectChangesOverRows","createSelector","shownRows","allRowsById","selectAdd","labelsIds","allLabelsById","shownLabels","selectShownHeadersReactTable","componentId","selectReactTableData","shownValues","selectHiddenHeadersReactTable","selectLabelsModal","labelsById","allLabelsId","grid","priority","selectCheckedFilters","selectSortedHeadersReactTable","paramsSelector","params","selectFilter","selectDate","selectConstantId","constants","selectLabelId","selectFilterId","filterById","constantEntity","checkedFilters","selectNestedCheckboxFilter","useGridSelectors","setSelectedRowsCallback","onSelectRowCallback","onSelectAllRowsCallback","promises","onChangeCurrentYearMonth","onChangeCurrentDate","onChangeCurrentUser","onToggleCheckboxFilter","onToggleAllCheckboxFilter","onChangeRangeFilter","onResetFilter","useGridCallbacks","onChangeCurrentTableDate","outsideProps","tableProps","paginationEnabled","GridTableComponent","SalesValueChart","datasets","series","plugins","legend","tooltip","displayColors","aspectRatio","scales","x","tickColor","beginAtZero","BarChart","autoSkip","ticks","callback","CounterWidget","iconColor","category","percentage","period","previousPeriod","faAngleDown","faAngleUp","BarChartWidget","SalesValueWidget","DashBoardComponent","handleCbm","currentMonth","cbmCurrentMonth","lastMonth","cbmLastMonth","cbmByWorkPlant","byWorkPlant","cbmYear","dateCurrentMonth","dateLastMonth","cbmLabels","cbmSeries","months","workPlantLabels","workPlantSeries","renderComponent","faChartLine","DashBoardOverview","useLoader","activeKey","isActive","VacationsTab","setVacations","flexGrow","ToursTab","setTours","loadEnabled","spinner","TourList","setModalProps","handleShow","tour","t","offsetHeight","handleEndScroll","form","Tour","TourModal","today","WorkHoursTab","setWorkHours","setDay","workDays","workHour","WorkHour","defaultActiveKey","UserOverview","setActiveKey","Tab","faClock","faTruck","faPlane","Content","Pane","SettingsComponent","addToursSettings","setAddToursSettings","SettingsCard","primarylabels","tabs","newTabLabels","setNewTabLabels","newTabTitle","setTabTitle","handleResetClick","body2","UserField","alreadyExists","UserDisplay","fontWeight","TitleButton","setEditable","handleBlur","focus","BCard","titleWidth","contentWidth","Settings","UsersComponent","Users","EditableField","setEditMode","paddingBottom","borderBottom","faPen","onCancel","EditModal","fullscreen","dialogClassName","UserSettings","customClaims","setCustomClaims","hiddenFileInput","click","faCamera","file","files","formData","FormData","append","secure_url","newUrl","rk","faAt","faLocationArrow","CCard","minHeight","AccordionCard","itemClassName","UserVacations","currentId","setCurrentId","handleCloseModal","handleShowModal","DatePicker","middle","closeButton","OutlinedSelect","selectedValue","setSelectedValue","classNamePrefix","colors","primary25","DashboardWorkHours","setDriver","DriverPicker","selectCurrentDriver","currentDriver","currentSelectLabel","inputSelectLabels","leftTitle","rightTitle","UserWorkHours","InputComponent","textarea","NormaModal","Navi","handlePlaceChange","handlePlaceInputChange","input","minRows","blur","Disabled","TimePicker","DropdownCard","setEnabled","InputCard","SubmitList","AddTours","setTabs","tabNumber","match","er","isFilled","tab","tab1Filled","tab2Filled","tab3Filled","nextEnabled","parseFloat","DashboardTours","UserTours","AddWorkHours","saveEnabled","Home","setRole","Preloader","UserHome","unreadMessages","setUnreadMessages","handleUnreadMessagesChange","justifyContent","faFacebookMessenger","faUserClock","RouteWithSidebar","loaded","setLoaded","timer","clearTimeout","localStorage","flexDirection","RouteWithSidebarPhone","flex","RouteWithLogoPhone","PrivateOutlet","backendConnection","setBackendConnection","HomePage","exact","element","NotFound","DashboardOverview","ReactDOM","store","configureStore","gridTable","devTools","__REDUX_DEVTOOLS_EXTENSION__","createReduxStore","LocalizationProvider","dateAdapter","AdapterDateFns","ScrollToTop","getElementById","faSpinner"],"mappings":"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","file":"static/js/main.bf443c15.chunk.js","sourcesContent":["import DropdownToggle from \"@themesberg/react-bootstrap/lib/esm/DropdownToggle\";\r\nimport React, { forwardRef, useCallback, useRef, useState } from \"react\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { Portal } from \"react-portal\";\r\nexport const CustomDropdown = forwardRef(\r\n  (\r\n    {\r\n      variant = \"primary\",\r\n      value = \"Dropdown Button\",\r\n      as,\r\n      className = \"\",\r\n      menuClassName = \"\",\r\n      toggleClassName = \"py-1\",\r\n      disabled = false,\r\n      children,\r\n      toggleAs = \"default\",\r\n      toggleStyle = {},\r\n      portal = true,\r\n      drop = \"up\",\r\n      align = \"start\",\r\n      flip = \"true\",\r\n      onToggle,\r\n      width = \"fit-content\",\r\n      show: controlledShow = false,\r\n      toggle,\r\n      controlled = false,\r\n    },\r\n    initialRef\r\n  ) => {\r\n    const refList = initialRef?.refList || [];\r\n    const inputRef = initialRef;\r\n    const toggleRef = useRef(null);\r\n    // const domRef = ref || backupRef;\r\n    const toggleAsComponent =\r\n      toggleAs === \"default\" ? DropdownToggle : CustomToggle;\r\n    const [backupShow, setBackupShow] = useState(false);\r\n\r\n    const show = controlled ? controlledShow : backupShow;\r\n    const setShow = controlled ? toggle : setBackupShow;\r\n\r\n    const handleToggle = useCallback((_t, _e, metadata) => {\r\n      const focusWithinInput = inputRef?.current?.contains(\r\n        document.activeElement\r\n      );\r\n      const focusWithin = refList\r\n        .map((ref) => ref.current?.contains(document.activeElement))\r\n        .reduce((a, b) => a || b, false);\r\n      if (\r\n        focusWithinInput ||\r\n        (_e && _e.source !== \"rootClose\" && _e.source !== \"select\") ||\r\n        (typeof focusWithin != \"undefined\" &&\r\n          focusWithin != null &&\r\n          focusWithin)\r\n      ) {\r\n        setShow(true);\r\n        onToggle && onToggle(true);\r\n      } else {\r\n        setShow(false);\r\n        onToggle && onToggle(false);\r\n      }\r\n    }, []);\r\n\r\n    const onClose = useCallback(() => {\r\n      setShow(false);\r\n    }, []);\r\n\r\n    return (\r\n      <Dropdown\r\n        as={as}\r\n        flip={flip}\r\n        className={className}\r\n        show={!disabled && show}\r\n        onToggle={handleToggle}\r\n        disabled={disabled}\r\n        align={align}\r\n        drop={drop}\r\n        // autoClose={false}\r\n      >\r\n        <Dropdown.Toggle\r\n          as={toggleAsComponent}\r\n          variant={variant}\r\n          id=\"dropdown-basic\"\r\n          style={toggleStyle}\r\n          className={\"shadow-none \" + toggleClassName}\r\n        >\r\n          {value}\r\n        </Dropdown.Toggle>\r\n        {portal ? (\r\n          <Portal>\r\n            <Dropdown.Menu\r\n              flip={flip}\r\n              ref={toggleRef}\r\n              className={\"m-0 p-0 border border-0 \" + menuClassName}\r\n              // popperConfig={{\r\n              //   modifiers: [{ name: \"offset\", options: { offset: [-250, 0] } }],\r\n              // }}\r\n            >\r\n              {children}\r\n            </Dropdown.Menu>\r\n          </Portal>\r\n        ) : (\r\n          <Dropdown.Menu\r\n            // popperConfig={{\r\n            //   modifiers: [{ name: \"offset\", options: { offset: [-250, 0] } }],\r\n            // }}\r\n            ref={toggleRef}\r\n            className={\"p-0 border border-0 \" + menuClassName}\r\n            style={{ width }}\r\n          >\r\n            {{ ...children, props: { ...children.props, onClose } }}\r\n          </Dropdown.Menu>\r\n        )}\r\n      </Dropdown>\r\n    );\r\n  }\r\n);\r\nconst CustomToggle = forwardRef(\r\n  ({ children, onClick, variant, className, ...rest }, ref) => {\r\n    const bg = \"btn btn-\" + variant;\r\n    return (\r\n      <div\r\n        // {...rest}\r\n        className={\"w-100 \" + className + \" \" + bg}\r\n        ref={ref}\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          onClick(e);\r\n        }}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import BigNumber from \"bignumber.js\";\r\nimport moment from \"moment\";\r\nimport { useLayoutEffect, useState } from \"react\";\r\n\r\nexport function useWindowSize() {\r\n  const [size, setSize] = useState(0);\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      setSize(window.innerWidth);\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  });\r\n  return size;\r\n}\r\nexport function formatInput(value, type) {\r\n  switch (type) {\r\n    case \"number\":\r\n    case \"distance\": {\r\n      return formatNumberInput(value);\r\n    }\r\n    // case \"date\": {\r\n    //   return formatDateInput(value);\r\n    // }\r\n    case \"time\": {\r\n      return formatTimeInput(value);\r\n    }\r\n    default:\r\n      return value;\r\n  }\r\n}\r\nexport const calcColor = (color, percent = \"100%\") =>\r\n  `rgb(${color}, ${percent})`;\r\nexport const calcInvalidation = (\r\n  text,\r\n  type,\r\n  invalidation,\r\n  isUnlimited = false\r\n) => {\r\n  const delimiter = \":\";\r\n  if (!invalidation || text === \"\" || type === \"text\") return false;\r\n  switch (type) {\r\n    case \"number\":\r\n      return validateNumber(text) &&\r\n        validateNumberSeparator(text) &&\r\n        (text.match(new RegExp(\",\", \"g\")) || []).length <= 1\r\n        ? false\r\n        : true;\r\n    case \"date\":\r\n      return !moment(text, \"DD/MM/YYYY\", true).isValid();\r\n    case \"time\":\r\n      return isUnlimited\r\n        ? isNaN(text.replace(delimiter, \"\"))\r\n        : !moment(text, \"H\" + delimiter + \"m\", true).isValid();\r\n    case \"hour\":\r\n      return isUnlimited\r\n        ? isNaN(text)\r\n        : !moment(\r\n            text + delimiter + \"00\",\r\n            \"H\" + delimiter + \"mm\",\r\n            true\r\n          ).isValid()\r\n        ? false\r\n        : true;\r\n    case \"minute\":\r\n      return isUnlimited\r\n        ? isNaN(text)\r\n        : !moment(\r\n            \"00\" + delimiter + text,\r\n            \"HH\" + delimiter + \"m\",\r\n            true\r\n          ).isValid()\r\n        ? false\r\n        : true;\r\n    default:\r\n      break;\r\n  }\r\n};\r\nexport const calcValidation = (\r\n  text,\r\n  type,\r\n  validation = true,\r\n  isUnlimited = false\r\n) => {\r\n  const delimiter = \":\";\r\n  if (!validation) return false;\r\n  if (text === \"\" || type === \"text\") return true;\r\n  switch (type) {\r\n    case \"number\":\r\n      return validateNumber(text) &&\r\n        validateNumberSeparator(text) &&\r\n        (text.match(new RegExp(\",\", \"g\")) || []).length <= 1\r\n        ? true\r\n        : false;\r\n    case \"date\":\r\n      return moment(text, \"DD/MM/YYYY\", true).isValid();\r\n    case \"time\":\r\n      return isUnlimited\r\n        ? !isNaN(text.replace(delimiter, \"\"))\r\n        : moment(text, \"H\" + delimiter + \"m\", true).isValid();\r\n    case \"hour\":\r\n      return isUnlimited\r\n        ? isNaN(text)\r\n        : !moment(\r\n            text + delimiter + \"00\",\r\n            \"H\" + delimiter + \"mm\",\r\n            true\r\n          ).isValid()\r\n        ? true\r\n        : false;\r\n    case \"minute\":\r\n      return isUnlimited\r\n        ? !isNaN(text)\r\n        : !moment(\r\n            \"00\" + delimiter + text,\r\n            \"HH\" + delimiter + \"m\",\r\n            true\r\n          ).isValid()\r\n        ? true\r\n        : false;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n// export function parseBigInt(value) {\r\n//   if (!value || value === \"\") return \"0\";\r\n//   const negative = value[0] === \"-\" ? true : false;\r\n//   const clearedValue = negative\r\n//     ? removeLeadingZeroes(value.replace(/[^\\d-]/g, \"\").slice(-1))\r\n//     : removeLeadingZeroes(value.replace(/[^\\d]/g, \"\"));\r\n//   const number = clearedValue.replace(/[^\\d]/g, \"\");\r\n\r\n//   return negative ? \"-\" + number : number;\r\n// }\r\nexport function convertToThousands(number, decimal = 0) {\r\n  if (!validateNumber(number)) {\r\n    return number;\r\n  }\r\n  const n = BigNumber((number + \"\").replace(/\\./g, \"\").replace(/,/g, \".\"));\r\n  const value = decimal === 0 ? n.toFormat() : n.toFormat(decimal);\r\n  const i = value.indexOf(\".\");\r\n  const v = value.replace(/,/g, \".\");\r\n  if (i !== -1) {\r\n    return v.substring(0, i) + \",\" + v.substring(i + 1);\r\n  } else return v;\r\n}\r\nexport const countNumberSeparators = (number) =>\r\n  (number.match(/\\./g) || []).length;\r\nexport function getDifferenceOfStrings(str1, str2) {\r\n  const longString = str1.length > str2.length ? str1 : str2;\r\n  const shortString = str1.length > str2.length ? str2 : str1;\r\n  var l = 0;\r\n  var s = 0;\r\n  const outliers = [];\r\n  while (l < longString.length && s < longString.length) {\r\n    if (longString[l] === shortString[s]) {\r\n      l++;\r\n      s++;\r\n    } else {\r\n      outliers.push(l);\r\n      l++;\r\n    }\r\n  }\r\n  return { value: outliers.map((i) => longString[i]), index: outliers };\r\n}\r\n\r\nexport function convertToLocalNumber(number) {\r\n  return (number + \"\").replace(/\\./g, \"\").replace(/,/g, \".\");\r\n}\r\nexport function validateNumberSeparator(number) {\r\n  const value = number + \"\";\r\n  const indexOfComma =\r\n    value.indexOf(\",\") === -1 ? value.length : value.indexOf(\",\");\r\n  const dotIndexes =\r\n    [...value]\r\n      .map((v, i) => ({ value: v, index: i }))\r\n      .filter((c) => c.value === \".\")\r\n      .map((_) =>\r\n        (value.substr(0, indexOfComma).length - _.index) % 4 === 0\r\n          ? true\r\n          : false\r\n      )\r\n      .indexOf(false) === -1\r\n      ? true\r\n      : false;\r\n  return dotIndexes;\r\n}\r\n\r\nexport function validateNumber(number) {\r\n  const num = convertToLocalNumber(number);\r\n  return !BigNumber(num).isNaN() && !(number + \"\").includes(\" \");\r\n}\r\n\r\nconst fillTopWhites = (arr, index) => {\r\n  if (arr[0] - (index + 1) > 0) return [null, ...arr];\r\n  return [...arr];\r\n};\r\nconst fillBottomWhites = (n, arr) => {\r\n  if (n === 0) return [...arr];\r\n  if (n === 1) return [...arr, null];\r\n  if (n === 2) return [...arr, null, null];\r\n  return [...arr];\r\n};\r\nexport const fillWhites = (arr, index, numRows) => {\r\n  const arr1 = fillTopWhites(arr, index);\r\n  const whites = numRows - arr1.length;\r\n  const newArr = fillBottomWhites(whites, arr1);\r\n  return newArr;\r\n};\r\nexport const rotateArray = (arr, k) => arr.slice(k).concat(arr.slice(0, k));\r\n\r\nexport const calcCalendarRows = (date, labels) => {\r\n  const startofMonth = moment(date, \"MM/YYYY\").startOf(\"month\").format(\"dddd\");\r\n  const endOfMonth = parseInt(\r\n    moment(date, \"MM/YYYY\").endOf(\"month\").format(\"DD\")\r\n  );\r\n  const rows =\r\n    (endOfMonth === 31 &&\r\n      labels.findIndex((day) => day === startofMonth) === 5) ||\r\n    (endOfMonth >= 30 && labels.findIndex((day) => day === startofMonth) === 6)\r\n      ? 6\r\n      : 5;\r\n  return rows;\r\n};\r\nexport const transpose = (arr, numRows = arr.length) =>\r\n  new Array(numRows)\r\n    .fill()\r\n    .map((_, colIndex) => arr.map((row) => row[colIndex]));\r\nexport const calcIndexedCalendarDays = (date, labels) => {\r\n  const numRows = calcCalendarRows(date, labels);\r\n  const days = [...Array(moment(date, \"MM/YYYY\").daysInMonth()).keys()]\r\n    .map((d) => {\r\n      const day = d + 1;\r\n      const da = moment(day.toString() + `/` + date.toString(), \"DD/MM/YYYY\");\r\n      return { [da.format(\"dddd\")]: [parseInt(da.format(\"DD\"))] };\r\n    })\r\n    .reduce((prev, curr) => {\r\n      const newLine = { ...curr };\r\n      const key = Object.keys(newLine)[0];\r\n      var newCurr;\r\n      if (prev[key]) {\r\n        newCurr = { [key]: [...prev[key], ...newLine[key]] };\r\n      } else {\r\n        newCurr = { [key]: [...newLine[key]] };\r\n      }\r\n      return { ...prev, ...newCurr };\r\n    });\r\n\r\n  const filledIndexWithEmptyDays = labels.map((label, index) =>\r\n    fillWhites(days[label], index, numRows)\r\n  );\r\n  return transpose(filledIndexWithEmptyDays, numRows);\r\n};\r\nexport const convertArrayToObject = (array = []) =>\r\n  array.length !== 0\r\n    ? array.reduce((prev, curr) => ({ ...prev, ...curr }))\r\n    : [];\r\n// export function colorizeBorder(\r\n//   ref,\r\n//   isValid = false,\r\n//   isInvalid = false,\r\n//   focused = false\r\n// ) {\r\n//   const borderColor = isInvalid\r\n//     ? red\r\n//     : isValid\r\n//     ? green\r\n//     : focused\r\n//     ? darkblue\r\n//     : lightblue;\r\n//   const color = isInvalid ? red : isValid ? green : grey;\r\n//   console.log(\"colorize\");\r\n//   if (focused) {\r\n//     ref.current.style.boxShadow = \"0 0 0 0.2rem rgb(\" + color + \", 25%)\";\r\n//     ref.current.style.border = \"1.5px solid rgb(\" + borderColor + \")\";\r\n//   } else {\r\n//     ref.current.style.boxShadow = \"none\";\r\n//     ref.current.style.border = \"1.5px solid rgb(\" + borderColor + \")\";\r\n//   }\r\n// }\r\n// export function addValueToTimeUnit(value, number) {\r\n//   return removeLeadingZeroes(addValueToString(value, number), 2);\r\n// }\r\nexport function clearThousandsSeparators(number) {\r\n  return number.replace(/,/g, \"\").replace(/\\./g, \"\");\r\n}\r\n// export function addValueToString(value, number) {\r\n//   const newValue = BigInt(BigInt(value) + BigInt(number)).toLocaleString();\r\n//   return clearThousandsSeparators(newValue);\r\n// }\r\n// export function removeLeadingZeroes(text, number = 0) {\r\n//   if (!text) return \"\";\r\n//   const symbol = text[0] === \"-\" ? \"-\" : \"\";\r\n//   const newText = clearThousandsSeparators(\r\n//     BigInt(text).toLocaleString().replace(\"-\", \"\")\r\n//   );\r\n//   const size = number < newText.length ? 0 : number - newText.length;\r\n//   const arrayOfZeroes =\r\n//     size === 0\r\n//       ? \"\"\r\n//       : symbol === \"-\"\r\n//       ? new Array(size - 1).fill(\"0\").join(\"\")\r\n//       : new Array(size).fill(\"0\").join(\"\");\r\n//   return symbol + arrayOfZeroes + newText;\r\n// }\r\n// export function addToTime(\r\n//   time,\r\n//   amount,\r\n//   disabledHours,\r\n//   disabledMinutes,\r\n//   type,\r\n//   delimiter,\r\n//   disableReset = false,\r\n//   isUnlimited = false,\r\n//   availableMinutes = [...Array(60).keys()],\r\n//   availableHours = [...Array(24).keys()]\r\n// ) {\r\n//   const splitValue = time.split(delimiter);\r\n//   if (splitValue.length > 1) {\r\n//     const hour =\r\n//       type === \"hour\"\r\n//         ? addValueToTimeUnit(splitValue[0], amount)\r\n//         : splitValue[0];\r\n//     const minute =\r\n//       type === \"minute\"\r\n//         ? addValueToTimeUnit(splitValue[1], amount)\r\n//         : splitValue[1];\r\n//     const newTime = hour + delimiter + minute;\r\n//     return formatTime({\r\n//       time: newTime,\r\n//       disabledHours,\r\n//       disabledMinutes,\r\n//       delimiter,\r\n//       disableReset,\r\n//       isUnlimited,\r\n//       availableHours,\r\n//       availableMinutes,\r\n//     });\r\n//   }\r\n// }\r\n\r\n// export function formatTime(props) {\r\n//   const {\r\n//     time,\r\n//     disabledHours = false,\r\n//     disabledMinutes = false,\r\n//     delimiter = \":\",\r\n//     disableReset = false,\r\n//     disableInitialization = false,\r\n//     isUnlimited = false,\r\n//     leadingZeros = true,\r\n//     availableMinutes = [...Array(60).keys()],\r\n//     availableHours = [...Array(24).keys()],\r\n//   } = props;\r\n//   function formUnit(value, availableValues) {\r\n//     const hour =\r\n//       value !== \"\" &&\r\n//       value.trim() !== \"\" &&\r\n//       !isNaN(value.replace(delimiter, \"\").replace(\"-\", \"\"))\r\n//         ? value\r\n//         : disableReset\r\n//         ? \"00\"\r\n//         : availableValues[0];\r\n//     return isUnlimited\r\n//       ? parseInt(hour) <= 0\r\n//         ? \"00\"\r\n//         : leadingZeros && hour.length === 1\r\n//         ? \"0\" + hour\r\n//         : hour\r\n//       : !isUnlimited &&\r\n//         (!availableValues.find((h) => h === parseInt(hour)) || hour === 0)\r\n//       ? !disableReset && hour === \"-1\"\r\n//         ? availableValues[availableValues.length - 1] + \"\"\r\n//         : leadingZeros\r\n//         ? \"00\"\r\n//         : \"0\"\r\n//       : leadingZeros && hour.length === 1\r\n//       ? \"0\" + hour\r\n//       : hour;\r\n//   }\r\n//   const domTime = time.includes(delimiter)\r\n//     ? time\r\n//     : disabledHours\r\n//     ? \"00\" + delimiter + time\r\n//     : disabledMinutes\r\n//     ? time + delimiter + \"00\"\r\n//     : time;\r\n\r\n//   const formattedHour = disabledHours\r\n//     ? \"00\"\r\n//     : disableInitialization\r\n//     ? domTime.split(delimiter)[0]\r\n//     : formUnit(parseBigInt(domTime.split(delimiter)[0]) + \"\", availableHours);\r\n//   const formattedMinute = disabledMinutes\r\n//     ? \"00\"\r\n//     : disableInitialization\r\n//     ? domTime.split(delimiter)[1]\r\n//     : formUnit(parseBigInt(domTime.split(delimiter)[1]) + \"\", availableMinutes);\r\n\r\n//   return formattedMinute\r\n//     ? formattedHour + delimiter + formattedMinute\r\n//     : formattedHour;\r\n// }\r\nexport function formatTimeInput(value, digitsSeparator) {\r\n  return value;\r\n}\r\nexport function formatDateInput(value, digitsSeparator) {\r\n  // console.log(value);\r\n  var count = (value.match(new RegExp(digitsSeparator, \"g\")) || []).length;\r\n  var newValue = value;\r\n  if (count === 1 && value.indexOf(digitsSeparator) === 2) newValue = value;\r\n  else if (count === 1 && value.indexOf(digitsSeparator) === 1)\r\n    newValue = \"0\" + value;\r\n  else if (\r\n    count === 2 &&\r\n    value.indexOf(digitsSeparator, 3) === 5 &&\r\n    value.indexOf(digitsSeparator) === 2\r\n  )\r\n    newValue = value;\r\n  else if (\r\n    count === 2 &&\r\n    value.indexOf(digitsSeparator) === 2 &&\r\n    value.indexOf(digitsSeparator, 3) === 4\r\n  ) {\r\n    const splitValue = value.split(digitsSeparator);\r\n    newValue =\r\n      splitValue[0] +\r\n      digitsSeparator +\r\n      \"0\" +\r\n      splitValue[1] +\r\n      digitsSeparator +\r\n      splitValue[2];\r\n  }\r\n  return newValue;\r\n\r\n  //  + \"\";\r\n  // seperatorAt.forEach((s, index) => {\r\n  //     const seperatorIndex = s + index\r\n  //     value = value.length > seperatorIndex && value[seperatorIndex] !== digitsSeperator ?\r\n  //         value.slice(0, seperatorIndex) + digitsSeperator + value.slice(seperatorIndex) : value\r\n  // })\r\n  // setChange(text);\r\n}\r\nexport function formatNumberInput(value, oldValue, key) {\r\n  const difference = oldValue\r\n    ? getDifferenceOfStrings(oldValue + \"\", value)\r\n    : { value: [], number: [] };\r\n  const valid = validateNumber(value);\r\n  const validOldValue = oldValue ? validateNumber(oldValue) : false;\r\n  if (value === \"\" || value === \" \") return \"0\";\r\n  else if (key === \".\" || key === \",\") {\r\n    return value;\r\n  } else if (\r\n    oldValue &&\r\n    difference.value.length === 1 &&\r\n    difference.value[0] === \".\"\r\n  ) {\r\n    if (key === \"Backspace\") {\r\n      if (\r\n        !validOldValue ||\r\n        (validOldValue && difference.index[0] === oldValue.length - 1)\r\n      ) {\r\n        const formattedValue =\r\n          oldValue.substr(0, difference.index[0]) +\r\n          oldValue.substr(difference.index[0] + 1);\r\n        return formattedValue;\r\n      } else {\r\n        const formattedValue =\r\n          oldValue.substr(0, difference.index[0] - 1) +\r\n          oldValue.substr(difference.index[0] + 1);\r\n        return convertToThousands(formattedValue);\r\n      }\r\n    } else if (\r\n      key === \"Delete\" ||\r\n      key === \"Ctrl Delete\" ||\r\n      key === \"Cut\" ||\r\n      key === \"Ctrl Cut\"\r\n    ) {\r\n      if (validOldValue) {\r\n        const formattedValue =\r\n          oldValue.substr(0, difference.index[0]) +\r\n          oldValue.substr(difference.index[0] + 2);\r\n        return convertToThousands(formattedValue);\r\n      } else {\r\n        const formattedValue =\r\n          oldValue.substr(0, difference.index[0]) +\r\n          oldValue.substr(difference.index[0] + 1);\r\n        return formattedValue;\r\n      }\r\n    } else {\r\n      return value;\r\n    }\r\n  } else if (valid) {\r\n    if ((value + \"\").slice(-2) === \",0\") return value;\r\n    else if ((value + \"\").slice(-1) === \",\") return value;\r\n    else return convertToThousands(value);\r\n  } else {\r\n    if (value === \",\") return \"0,\";\r\n    else return value;\r\n  }\r\n}\r\nexport function formatValueAndSetCursor(\r\n  value,\r\n  oldValue,\r\n  cursor,\r\n  key,\r\n  type,\r\n  digitsSeparator\r\n) {\r\n  if (type === \"number\") {\r\n    const formattedValue = formatNumberInput(value, oldValue, key);\r\n    const dotDifference = oldValue\r\n      ? countNumberSeparators(formattedValue.substr(0, cursor)) -\r\n        countNumberSeparators(oldValue.substr(0, cursor))\r\n      : 0;\r\n    const newCursor =\r\n      formattedValue.trim().length === 0 || formattedValue === \"0\"\r\n        ? 1\r\n        : cursor + dotDifference;\r\n    return { value: formattedValue, cursor: newCursor };\r\n  } else if (type === \"date\") {\r\n    const formattedValue = formatDateInput(value, digitsSeparator);\r\n    return { value: formattedValue, cursor: cursor };\r\n  } else if (type === \"time\") {\r\n    const formattedValue = formatTimeInput(value, digitsSeparator);\r\n    return { value: formattedValue, cursor: cursor };\r\n  } else {\r\n    return { value: value, cursor: cursor };\r\n  }\r\n}\r\nexport function keyDownController(event) {\r\n  const value = event.target.value;\r\n  const cursorStart = event.target.selectionStart;\r\n  const cursorEnd = event.target.selectionEnd;\r\n  const key = event.key;\r\n  var cursor = cursorStart;\r\n  var newValue = value;\r\n  if (event.ctrlKey) {\r\n    if ((key === \"x\" || key === \"X\") && cursorStart !== cursorEnd) {\r\n      newValue = value.substr(0, cursorStart) + value.substr(cursorEnd);\r\n    } else if (key === \"Delete\") {\r\n      const indexOfSpace = value.substr(cursorStart).indexOf(\" \");\r\n      newValue =\r\n        indexOfSpace === -1\r\n          ? value.substr(0, cursorStart)\r\n          : value.substr(0, cursorStart) +\r\n            value.substr(indexOfSpace + cursorStart + 1);\r\n      cursor = indexOfSpace === -1 ? newValue.length : cursorStart;\r\n    } else if (key === \"Backspace\") {\r\n      const indexOfSpace = value.substr(0, cursorStart).lastIndexOf(\" \");\r\n      newValue =\r\n        indexOfSpace === -1\r\n          ? value.substr(cursorStart)\r\n          : value.substr(0, indexOfSpace) + value.substr(cursorStart + 1);\r\n      cursor = indexOfSpace === -1 ? 0 : cursorStart;\r\n    }\r\n  } else if (key === \" \") {\r\n    newValue =\r\n      value.substr(0, cursorStart) + \" \" + value.substr(cursorEnd) === \" \"\r\n        ? \"\"\r\n        : value.substr(0, cursorStart) + \" \" + value.substr(cursorEnd);\r\n    cursor = cursorStart + 1;\r\n  } else if (key === \"Backspace\") {\r\n    newValue =\r\n      cursorStart === cursorEnd\r\n        ? value.substr(0, cursorStart - 1) + value.substr(cursorEnd)\r\n        : value.substr(0, cursorStart) + value.substr(cursorEnd);\r\n    cursor = cursorStart === cursorEnd ? cursorStart - 1 : cursorStart;\r\n  } else if (key === \"Delete\") {\r\n    newValue =\r\n      cursorStart === cursorEnd\r\n        ? value.substr(0, cursorStart) + value.substr(cursorEnd + 1)\r\n        : value.substr(0, cursorStart) + value.substr(cursorEnd);\r\n    cursor = cursorStart <= 0 ? 0 : cursorStart;\r\n  } else if (key.length === 1) {\r\n    newValue = value.substr(0, cursorStart) + key + value.substr(cursorEnd);\r\n    cursor = cursorStart + 1;\r\n  }\r\n\r\n  if (\r\n    key === \"Delete\" ||\r\n    key === \"Backspace\" ||\r\n    key === \"Space\" ||\r\n    (!event.ctrlKey && key.length === 1)\r\n  ) {\r\n    return { value: newValue, cursor: cursor };\r\n  }\r\n}\r\nexport function keyPasteController(event) {\r\n  const value = event.target.value;\r\n  const cursorStart = event.target.selectionStart;\r\n  const cursorEnd = event.target.selectionEnd;\r\n  const text = event.clipboardData ? event.clipboardData.getData(\"Text\") : \"\";\r\n  const newValue =\r\n    value.substr(0, cursorStart) + text + value.substr(cursorEnd);\r\n  return { value: newValue, cursor: cursorStart };\r\n}\r\nexport function keyPreventDefault(event) {\r\n  if (!event.ctrlKey && event.key.length === 1) {\r\n    event.preventDefault();\r\n  }\r\n}\r\n","import {\r\n  faArrowLeft,\r\n  faArrowRight,\r\n  faCalendar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { Button, Card, Form } from \"@themesberg/react-bootstrap\";\r\nimport { isEqual } from \"lodash\";\r\nimport moment from \"moment\";\r\nimport { memo, useCallback, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { ButtonGroup, Modal, Table } from \"react-bootstrap\";\r\nimport { Virtual } from \"swiper\";\r\nimport \"swiper/modules/navigation/navigation.scss\";\r\nimport \"swiper/modules/pagination/pagination.scss\";\r\nimport \"swiper/modules/virtual/virtual.scss\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react.js\";\r\nimport \"swiper/swiper.scss\";\r\nimport {\r\n  rotateArray,\r\n  calcIndexedCalendarDays,\r\n} from \"../pages/myComponents/util/utilities\";\r\nimport { CustomDropdown } from \"./Filters/CustomDropdown\";\r\n\r\nconst DateSelectorDropdown = memo(\r\n  ({\r\n    value,\r\n    onChange,\r\n    inputStyle,\r\n    disabled = false,\r\n    portal = true,\r\n    withButton = false,\r\n    onBlur,\r\n    inputProps,\r\n    Input,\r\n    format = \"YYYY.MM.DD\",\r\n    singleDate = false,\r\n    disableMonthSwap = false,\r\n    className = \"\",\r\n    dropdownClassName = \"\",\r\n  }) => {\r\n    const ref = useRef(null);\r\n    const handleSelectorChange = useCallback(\r\n      (value) => {\r\n        onChange && onChange(value);\r\n      },\r\n      [onChange]\r\n    );\r\n    const handleInputChange = useCallback(\r\n      (e) => {\r\n        const v = moment(e.target.value, format, true).isValid()\r\n          ? moment(e.target.value, format).format(\"YYYY.MM.DD\")\r\n          : e.target.value;\r\n        onChange && onChange(v);\r\n      },\r\n      [onChange, format]\r\n    );\r\n    const domInput = useCallback(\r\n      ({ value, ...rest }) => {\r\n        const v = moment(value, \"YYYY.MM.DD\", true).isValid()\r\n          ? moment(value, \"YYYY.MM.DD\").format(format)\r\n          : value;\r\n        return Input ? (\r\n          <Input {...rest} value={v}></Input>\r\n        ) : (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"text-center\"\r\n              {...rest}\r\n              value={v}\r\n              style={inputStyle}\r\n              autoFocus={false}\r\n            />\r\n          </div>\r\n        );\r\n      },\r\n      [Input, inputStyle, format]\r\n    );\r\n\r\n    const toggleComponent = useCallback(\r\n      ({ withButton, ...props }) =>\r\n        withButton ? (\r\n          <div style={{ width: \"0px\" }}>\r\n            <IconButton\r\n              aria-label=\"datepicker\"\r\n              style={{ padding: 8, left: \"-30px\", bottom: \"-10px\" }}\r\n            >\r\n              <FontAwesomeIcon\r\n                style={{ width: \"24px\", height: \"24px\" }}\r\n                icon={faCalendar}\r\n              />\r\n            </IconButton>\r\n          </div>\r\n        ) : (\r\n          domInput({ ...props, autoFocus: false })\r\n        ),\r\n      [domInput]\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <div className={`d-block w-100 date-picker-dropdown ${className}`}>\r\n          <div className=\"d-flex flex-nowrap w-100 align-items-center justify-content-center\">\r\n            {withButton && (\r\n              <div className=\"d-block w-100\">\r\n                {domInput({\r\n                  value: value,\r\n                  onChange: handleInputChange,\r\n                  // onBlur: onBlur,\r\n                })}\r\n              </div>\r\n            )}\r\n\r\n            <CustomDropdown\r\n              id={\"TourFilter\"}\r\n              as={ButtonGroup}\r\n              disabled={disabled}\r\n              ref={{ ref: ref }}\r\n              toggleAs=\"custom\"\r\n              // className={!withButton ? \"d-flex\" : null}\r\n              portal={portal}\r\n              value={toggleComponent({\r\n                value: value,\r\n                onChange: handleInputChange,\r\n                onBlur: onBlur,\r\n                withButton: withButton,\r\n                ...inputProps,\r\n              })}\r\n            >\r\n              <DateSelector\r\n                singleDate={singleDate}\r\n                onChange={handleSelectorChange}\r\n                from={singleDate ? value : value[0]}\r\n                to={!singleDate && value[1]}\r\n                disableMonthSwap={disableMonthSwap}\r\n                className={dropdownClassName}\r\n              />\r\n            </CustomDropdown>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  },\r\n  isEqual\r\n);\r\nexport const DatePickerModal = memo(\r\n  ({\r\n    size,\r\n    value: initialValue,\r\n    buttonText,\r\n    buttonVariant = \"primary\",\r\n    closeVariant = \"nonary\",\r\n    saveVariant = \"senary\",\r\n    timeVariant = \"primary\",\r\n    timeActiveVariant = \"primary\",\r\n    buttonClassName = \"\",\r\n    modalClassName = \"\",\r\n    modalContentClassName = \"\",\r\n    onChange,\r\n    disableMonthSwap = true,\r\n    ...rest\r\n  }) => {\r\n    const [show, setShow] = useState(false);\r\n    const [value, setValue] = useState(initialValue);\r\n    const handleDateChange = useCallback((v) => {\r\n      setValue(v);\r\n    }, []);\r\n\r\n    const handleClose = useCallback(() => {\r\n      setShow(false);\r\n      setValue(initialValue);\r\n    }, [initialValue]);\r\n    const handleShow = () => setShow(true);\r\n    const handleSave = useCallback(() => {\r\n      onChange(value);\r\n      handleClose();\r\n    }, [value, handleClose, onChange]);\r\n\r\n    useEffect(() => {\r\n      !isEqual(value, initialValue) && setValue(initialValue);\r\n    }, [initialValue]);\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          size={size}\r\n          variant={buttonVariant}\r\n          onClick={handleShow}\r\n          className={\"date-picker-modal-btn w-100\" + buttonClassName}\r\n        >\r\n          {buttonText}\r\n        </Button>\r\n\r\n        <Modal\r\n          show={show}\r\n          onHide={handleClose}\r\n          centered\r\n          className={modalClassName + \" date-picker-modal\"}\r\n          contentClassName={\r\n            \"date-picker-modal-content dark-modal \" + modalContentClassName\r\n          }\r\n          // scrollable\r\n        >\r\n          <Modal.Body>\r\n            <DateSelector\r\n              onChange={handleDateChange}\r\n              disableMonthSwap={disableMonthSwap}\r\n              {...rest}\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer className=\"\">\r\n            <div className=\"w-100 btn-group-wrapper d-flex justify-content-around\">\r\n              <Button\r\n                variant={closeVariant}\r\n                className=\"col-5\"\r\n                onClick={handleClose}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                variant={saveVariant}\r\n                className=\"col-5 fw-bolder\"\r\n                onClick={handleSave}\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  },\r\n  isEqual\r\n);\r\nexport const DateSelector = memo(\r\n  ({\r\n    singleDate,\r\n    carousel,\r\n    from,\r\n    to,\r\n    onChange,\r\n    variant = \"light\",\r\n    className: initialClassName = \"\",\r\n    ...rest\r\n  }) => {\r\n    const className = `date-picker date-picker-${variant} ${initialClassName}`;\r\n    const initialValue = useMemo(() => [from, to].filter((e) => e), [from, to]);\r\n    const [values, setValues] = useState(initialValue);\r\n    const handleChange = useCallback(\r\n      (value) => {\r\n        singleDate\r\n          ? onChange && onChange(value[0])\r\n          : value.length !== 1 && onChange && onChange(value);\r\n      },\r\n      [singleDate, onChange]\r\n    );\r\n    const handleClick = useCallback(\r\n      (e) => {\r\n        const name = e.target.name;\r\n        const newValues = singleDate\r\n          ? [name]\r\n          : values.length === 0\r\n          ? [name]\r\n          : values.length === 1\r\n          ? [...values, name].sort()\r\n          : [];\r\n        setValues(newValues);\r\n        handleChange(newValues);\r\n      },\r\n      [values, handleChange, singleDate]\r\n    );\r\n\r\n    useEffect(() => {\r\n      setValues(initialValue);\r\n    }, [initialValue]);\r\n\r\n    return (\r\n      <div className={className}>\r\n        {carousel ? (\r\n          <DateCarousel\r\n            values={values}\r\n            onClick={handleClick}\r\n            singleDate={singleDate}\r\n            {...rest}\r\n          />\r\n        ) : (\r\n          <DateSelectorComponent\r\n            values={values}\r\n            onClick={handleClick}\r\n            singleDate={singleDate}\r\n            {...rest}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  },\r\n  isEqual\r\n);\r\n\r\nconst DateSelectorComponent = memo(\r\n  ({\r\n    values,\r\n    year: initialYear = moment(values[0], \"YYYY.MM.DD\", true).isValid()\r\n      ? moment(values[0], \"YYYY.MM.DD\").format(\"YYYY\")\r\n      : moment().format(\"YYYY\"),\r\n    month: initialMonth = moment(values[0], \"YYYY.MM.DD\", true).isValid()\r\n      ? moment(values[0], \"YYYY.MM.DD\").format(\"MM\")\r\n      : moment().format(\"MM\"),\r\n    onMonthChange,\r\n    ...rest\r\n  }) => {\r\n    const [month, setMonth] = useState(initialMonth);\r\n    const [year, setYear] = useState(initialYear);\r\n    const handleIncreaseMonth = useCallback(\r\n      (e) => {\r\n        const calc = parseInt(month) + 1;\r\n        const newMonth = calc === 13 ? \"01\" : (\"0\" + calc).slice(-2);\r\n        setMonth(newMonth);\r\n        calc === 13\r\n          ? setYear((old) => {\r\n              const newYear = parseInt(old) - 1;\r\n              onMonthChange && onMonthChange(newYear + \".\" + newMonth);\r\n              return parseInt(old) + 1;\r\n            })\r\n          : onMonthChange && onMonthChange(year + \".\" + newMonth);\r\n      },\r\n      [month, year, onMonthChange]\r\n    );\r\n    const handleDecreaseMonth = useCallback(\r\n      (e) => {\r\n        const decr = parseInt(month) - 1;\r\n        const newMonth = decr === 0 ? \"12\" : (\"0\" + decr).slice(-2);\r\n        setMonth(newMonth);\r\n        decr === 0\r\n          ? setYear((old) => {\r\n              const newYear = parseInt(old) - 1;\r\n              onMonthChange && onMonthChange(newYear + \".\" + newMonth);\r\n              return newYear;\r\n            })\r\n          : onMonthChange && onMonthChange(year + \".\" + newMonth);\r\n      },\r\n      [month, year, onMonthChange]\r\n    );\r\n    useEffect(() => {\r\n      setMonth(initialMonth);\r\n      setYear(initialYear);\r\n    }, [initialMonth, initialYear]);\r\n    return (\r\n      <>\r\n        <DateSelectorPureComponent\r\n          month={month}\r\n          year={year}\r\n          values={values}\r\n          handleIncreaseMonth={handleIncreaseMonth}\r\n          handleDecreaseMonth={handleDecreaseMonth}\r\n          {...rest}\r\n        />\r\n      </>\r\n    );\r\n  },\r\n  isEqual\r\n);\r\nexport const DateCarousel = ({ length = 100, onMonthChange, ...rest }) => {\r\n  const date = moment().subtract(length / 2, \"M\");\r\n  const slides = useMemo(\r\n    () =>\r\n      Array.from({ length }).map((el, index) => {\r\n        const d = moment(date).add(index, \"M\");\r\n        const month = d.format(\"MM\");\r\n        const year = d.format(\"YYYY\");\r\n\r\n        return (\r\n          <DateSelectorPureComponent\r\n            key={month + \".\" + year}\r\n            month={month}\r\n            year={year}\r\n            {...rest}\r\n          />\r\n        );\r\n      }),\r\n    [length, date, rest]\r\n  );\r\n  return (\r\n    <div className=\"bg-transparent\" style={{ width: \"320px\" }}>\r\n      <Swiper\r\n        spaceBetween={50}\r\n        modules={[Virtual]}\r\n        slidesPerView={1}\r\n        centeredSlides\r\n        initialSlide={length / 2}\r\n        virtual\r\n        onSlideChange={({ activeIndex }) =>\r\n          onMonthChange &&\r\n          onMonthChange(date.add(activeIndex, \"M\").format(\"YYYY.MM\"))\r\n        }\r\n      >\r\n        {slides.map((slideContent, index) => (\r\n          <SwiperSlide key={slideContent.key} virtualIndex={index}>\r\n            {slideContent}\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n    </div>\r\n  );\r\n};\r\nconst DateSelectorPureComponent = memo(\r\n  ({\r\n    renderHeader = ({ month, year }) => {\r\n      const title = moment(month, \"MM\").format(\"MMMM\") + \" \" + year;\r\n      return <h5 className=\"text-center m-0\">{title}</h5>;\r\n    },\r\n    month,\r\n    year,\r\n    style,\r\n    values,\r\n    disableMonthSwap = false,\r\n    handleDecreaseMonth,\r\n    handleIncreaseMonth,\r\n    id,\r\n    ...rest\r\n  }) => {\r\n    const [hoveredDay, setHoveredDay] = useState();\r\n    const handleMouseOver = useCallback((e) => {\r\n      const name = e.target.name;\r\n      setHoveredDay(name);\r\n    }, []);\r\n    const handleMouseLeave = useCallback((e) => {\r\n      setHoveredDay(null);\r\n    }, []);\r\n    const labels = useMemo(() => rotateArray(moment.weekdays(), 1), []);\r\n    const headers = useMemo(\r\n      () => labels.map((day) => day.substr(0, 2) + \".\"),\r\n      [labels]\r\n    );\r\n    // const title = moment(month, \"MM\").format(\"MMMM\") + \" \" + year;\r\n    const tableDays = useMemo(\r\n      () => calcIndexedCalendarDays(month + \".\" + year, labels),\r\n      [month, year, labels]\r\n    );\r\n    const header = {\r\n      month,\r\n      year,\r\n      from: values[0],\r\n      to: values[1],\r\n    };\r\n    return (\r\n      <Card\r\n        className=\"shadow-sm flex-fill date-picker-card my-card\"\r\n        // style={{\r\n        //   cursor: \"default\",\r\n        //   maxWidth: \"320px\",\r\n        //   height: \"360px\",\r\n        //   ...style,\r\n        // }}\r\n      >\r\n        <Card.Header>\r\n          <div\r\n            className={\r\n              disableMonthSwap\r\n                ? \"w-100 d-flex  justify-content-center\"\r\n                : \"w-100 d-flex  justify-content-between\"\r\n            }\r\n          >\r\n            {!disableMonthSwap && (\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={handleDecreaseMonth}\r\n                onMouseDown={(e) => e.preventDefault()}\r\n                size=\"sm\"\r\n              >\r\n                <FontAwesomeIcon icon={faArrowLeft}></FontAwesomeIcon>\r\n              </Button>\r\n            )}\r\n            {renderHeader(header)}\r\n            {!disableMonthSwap && (\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={handleIncreaseMonth}\r\n                onMouseDown={(e) => e.preventDefault()}\r\n                size=\"sm\"\r\n              >\r\n                <FontAwesomeIcon icon={faArrowRight}></FontAwesomeIcon>\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card.Header>\r\n        <Card.Body className=\"px-3\">\r\n          <Table className=\"user-table align-items-center\">\r\n            <thead className=\"rounded-bottom\">\r\n              <HeaderRow headers={headers} />\r\n            </thead>\r\n            <tbody className=\"border-0\">\r\n              {tableDays.map((row, index) => {\r\n                return (\r\n                  <tr\r\n                    className=\"p-0 align-items-center date-rows\"\r\n                    key={row + index}\r\n                  >\r\n                    <TableRow\r\n                      data={row}\r\n                      index={index}\r\n                      name={year + \".\" + month}\r\n                      onMouseOver={handleMouseOver}\r\n                      clickedId={values}\r\n                      hoveredDay={hoveredDay}\r\n                      onMouseLeave={handleMouseLeave}\r\n                      {...rest}\r\n                    ></TableRow>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  },\r\n  isEqual\r\n);\r\nconst TableRow = ({\r\n  data,\r\n  clickedId = [],\r\n  hoveredDay,\r\n  index,\r\n  name = \"\",\r\n  singleDate,\r\n  highlightedDays,\r\n  disabledDays,\r\n  min,\r\n  max,\r\n  ...rest\r\n}) => {\r\n  return data.map((value, i) => {\r\n    if (value === null)\r\n      return <td className=\"border-0 p-1\" key={\"empty\" + index * 7 + i}></td>;\r\n    else {\r\n      const day =\r\n        name + \".\" + (\"0\" + value).substring((\"0\" + value).length - 2);\r\n      const key = \"Btn\" + value;\r\n      const from = clickedId[0];\r\n      const to = clickedId[1];\r\n\r\n      const disabled =\r\n        value === null ||\r\n        disabledDays?.includes(day) ||\r\n        (min && moment(min, \"YYYY.MM.DD\").isAfter(moment(day, \"YYYY.MM.DD\"))) ||\r\n        (max && moment(max, \"YYYY.MM.DD\").isBefore(moment(day, \"YYYY.MM.DD\")));\r\n      const variant =\r\n        day === from\r\n          ? \"primary\"\r\n          : day === to\r\n          ? \"secondary\"\r\n          : to && from && day < to && day > from\r\n          ? \"light-blue\"\r\n          : hoveredDay === day\r\n          ? \"quinary\"\r\n          : highlightedDays?.includes(day)\r\n          ? \"tertiary\"\r\n          : !singleDate && !to && from && day < hoveredDay && day > from\r\n          ? \"septenary\"\r\n          : !singleDate && !to && from && day > hoveredDay && day < from\r\n          ? \"octonary\"\r\n          : \"light\";\r\n      return (\r\n        <td className=\"border-0 p-1 text-center\" key={\"empty\" + index * 7 + i}>\r\n          <DayButton\r\n            disabled={disabled}\r\n            variant={variant}\r\n            value={value}\r\n            name={name + \".\" + (\"0\" + value).substr(-2)}\r\n            {...rest}\r\n          />\r\n        </td>\r\n      );\r\n    }\r\n  });\r\n};\r\nexport const DayButton = (props) => {\r\n  const { disabled, value, name, variant, onClick, onMouseOver, onMouseLeave } =\r\n    props;\r\n  return (\r\n    <>\r\n      <Button\r\n        style={{\r\n          width: \"30px\",\r\n          height: \"30px\",\r\n          borderRadius: 0,\r\n          border: 0,\r\n        }}\r\n        disabled={disabled}\r\n        name={name}\r\n        size=\"sm\"\r\n        variant={variant}\r\n        onClick={onClick}\r\n        onMouseDown={(e) => e.preventDefault()}\r\n        onMouseOver={onMouseOver}\r\n        onMouseLeave={onMouseLeave}\r\n        className=\"text-center p-0 day-btn\"\r\n      >\r\n        {value}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst HeaderRow = (props) => {\r\n  const { headers, checked, handleAllClick, checkbox = false } = props;\r\n  return (\r\n    <tr className=\"align-middle days-label\">\r\n      {checkbox && (\r\n        <th\r\n          className=\"border-bottom px-2 text-left table-days\"\r\n          style={{ width: \"30px\" }}\r\n        >\r\n          <Form.Check\r\n            id=\"checkboxAll\"\r\n            htmlFor=\"checkboxAll\"\r\n            checked={checked}\r\n            onChange={handleAllClick}\r\n          />\r\n        </th>\r\n      )}\r\n\r\n      {headers.map((header) => (\r\n        <th\r\n          key={`$s-${header}`}\r\n          className=\"border-bottom  px-2 text-nowrap text-center \"\r\n        >\r\n          {header}\r\n        </th>\r\n      ))}\r\n    </tr>\r\n  );\r\n};\r\nexport const CalendarButton = (props) => {\r\n  const { value } = props;\r\n\r\n  return (\r\n    <Button variant=\"white\" style={{ padding: \"0.25rem\" }}>\r\n      <h6 className=\"m-0\">{value}</h6>\r\n    </Button>\r\n  );\r\n};\r\nexport default DateSelectorDropdown;\r\n","import {\r\n  faLongArrowAltLeft,\r\n  faLongArrowAltRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, Card } from \"@themesberg/react-bootstrap\";\r\nimport isequal from \"lodash.isequal\";\r\nimport React, { memo, useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { ButtonGroup, CloseButton, Modal } from \"react-bootstrap\";\r\nimport Scrollbars from \"react-custom-scrollbars-2\";\r\nimport { CustomDropdown } from \"./Filters/CustomDropdown\";\r\n\r\nexport const TimePickerModal = ({\r\n  defaultValue = \"00:00\",\r\n  value: initialValue = defaultValue,\r\n  buttonText,\r\n  buttonVariant = \"primary\",\r\n  closeVariant = \"nonary\",\r\n  saveVariant = \"senary\",\r\n  timeVariant = \"primary\",\r\n  timeActiveVariant = \"primary\",\r\n  buttonClassName = \"\",\r\n  modalClassName = \"\",\r\n  modalContentClassName = \"\",\r\n  onChange,\r\n}) => {\r\n  const [show, setShow] = useState(false);\r\n  const [value, setValue] = useState(initialValue);\r\n  const splitted = value.split(\":\");\r\n  const hour = (splitted.length >= 2 && splitted[0]) || \"00\";\r\n  const minute = (splitted.length >= 2 && splitted[1]) || \"00\";\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setValue(defaultValue);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  const handleSave = () => {\r\n    onChange(value);\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => setValue(initialValue), [initialValue]);\r\n  return (\r\n    <>\r\n      <Button\r\n        variant={buttonVariant}\r\n        onClick={handleShow}\r\n        className={\"time-picker-modal-btn \" + buttonClassName}\r\n      >\r\n        {buttonText}\r\n      </Button>\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        centered\r\n        className={modalClassName + \" time-picker-modal\"}\r\n        contentClassName={\r\n          \"time-picker-modal-content  bg-transparent \" + modalContentClassName\r\n        }\r\n        scrollable\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title className=\"d-flex flex-nowrap justify-content-center align-items-center w-100\">\r\n            <div className=\"title-wrapper d-flex flex-nowrap\">\r\n              <div>{hour}</div>\r\n              <div className=\"px-2\">:</div>\r\n              <div>{minute}</div>\r\n            </div>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <TimeSelectorBody\r\n            variant={timeVariant}\r\n            timeActiveVariant={timeActiveVariant}\r\n            value={value || defaultValue}\r\n            onChange={setValue}\r\n          ></TimeSelectorBody>\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"border-senary\">\r\n          <div className=\"w-100 btn-group-wrapper d-flex justify-content-around\">\r\n            <Button\r\n              variant={closeVariant}\r\n              className=\"col-5\"\r\n              onClick={handleClose}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant={saveVariant}\r\n              className=\"col-5 fw-bolder\"\r\n              onClick={handleSave}\r\n            >\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const TimePickerDropdown = memo(\r\n  ({\r\n    value = \"00:00\",\r\n    onChange,\r\n    disabled = false,\r\n    portal = true,\r\n    withButton = false,\r\n    inputStyle,\r\n    className = \"\",\r\n    dropdownClassName = \"\",\r\n  }) => {\r\n    const handleInputChange = useCallback(\r\n      (e) => {\r\n        const v = e.target.value;\r\n        onChange && onChange(v);\r\n      },\r\n      [onChange]\r\n    );\r\n    return (\r\n      <>\r\n        <div className={`d-block w-100  date-picker-dropdown ${className}`}>\r\n          <div className=\"d-flex flex-nowrap w-100 align-items-center justify-content-center\">\r\n            <CustomDropdown\r\n              id={\"TourFilter\"}\r\n              as={ButtonGroup}\r\n              disabled={disabled}\r\n              toggleAs=\"custom\"\r\n              // className={!withButton ? \"w-100\" : null}\r\n              portal={portal}\r\n              value={\r\n                <div className=\"w-100 justify-content-center d-flex\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={handleInputChange}\r\n                    style={inputStyle}\r\n                  />\r\n                </div>\r\n              }\r\n            >\r\n              <TimeSelector\r\n                value={value}\r\n                onChange={onChange}\r\n                className={dropdownClassName}\r\n              ></TimeSelector>\r\n            </CustomDropdown>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  },\r\n  isequal\r\n);\r\n\r\nexport const TimeSelectorRange = memo(\r\n  ({ gte = \"00:00\", lte = \"23:59\", onChange }) => {\r\n    const handleClick = useCallback(\r\n      (v) => {\r\n        onChange && onChange(v);\r\n      },\r\n      [onChange]\r\n    );\r\n    return (\r\n      <Card className=\"my-card\">\r\n        <Card.Header>\r\n          <div className=\"d-flex flex-nowrap w-100 justify-content-around fw-bolder\">\r\n            <div className=\"col-5   text-center\">{gte}</div>\r\n\r\n            <div className=\"d-flex col-2 justify-content-center align-items-center\">\r\n              <FontAwesomeIcon\r\n                icon={faLongArrowAltLeft}\r\n                style={{ left: \"0.2px\", position: \"relative\" }}\r\n              ></FontAwesomeIcon>\r\n              <FontAwesomeIcon\r\n                icon={faLongArrowAltRight}\r\n                style={{ right: \"0.2px\", position: \"relative\" }}\r\n              ></FontAwesomeIcon>\r\n            </div>\r\n            <div className=\"col-5  text-center\">{lte}</div>\r\n          </div>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <div className=\"d-flex\">\r\n            <div className=\"col-5  justify-content-center\">\r\n              <TimeSelectorBody\r\n                value={gte}\r\n                onChange={(v) => handleClick({ gte: v, lte })}\r\n                // buttonSize=\"100%\"\r\n              />\r\n            </div>\r\n            <div className=\"col-2\" />\r\n\r\n            <div className=\"col-5  justify-content-center\">\r\n              <TimeSelectorBody\r\n                value={lte}\r\n                onChange={(v) => handleClick({ gte, lte: v })}\r\n                // buttonSize=\"50%\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  },\r\n  isequal\r\n);\r\n\r\nexport const TimeSelector = memo(\r\n  ({\r\n    value,\r\n    onChange,\r\n    defaultValue = \"00:00\",\r\n    close = false,\r\n    className = \"\",\r\n  }) => {\r\n    const splitted = (value || defaultValue).split(\":\");\r\n    const hour = (splitted.length >= 2 && splitted[0]) || \"00\";\r\n    const minute = (splitted.length >= 2 && splitted[1]) || \"00\";\r\n\r\n    return (\r\n      <div className={className}>\r\n        <Card className={`my-card time-picker-card`} style={{ width: \"250px\" }}>\r\n          <Card.Header>\r\n            <div className=\"d-flex flex-nowrap w-100 justify-content-between fw-bolder\">\r\n              <div className=\"col-1\"></div>\r\n              <div className=\" className='col-10' d-flex flex-wrap\">\r\n                <div>{hour}</div>\r\n                <div className=\"px-2\">:</div>\r\n                <div>{minute}</div>\r\n              </div>\r\n              <div className=\"d-flex justify-content-center align-items-center col-1\">\r\n                {close && <CloseButton className=\"p-0\" variant=\"white\" />}\r\n              </div>\r\n            </div>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <TimeSelectorBody\r\n              value={value || defaultValue}\r\n              onChange={onChange}\r\n            ></TimeSelectorBody>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n);\r\nconst TimeSelectorBody = memo(\r\n  ({\r\n    value = \"00:00\",\r\n    onChange,\r\n    buttonSize = \"50px\",\r\n    variant = \"light\",\r\n    timeActiveVariant = \"primary\",\r\n  }) => {\r\n    const splitted = value.split(\":\");\r\n    const hour = (splitted.length >= 2 && splitted[0]) || \"00\";\r\n    const minute = (splitted.length >= 2 && splitted[1]) || \"00\";\r\n\r\n    const ref1 = useRef(null);\r\n    const ref2 = useRef(null);\r\n\r\n    const hours = Array(24).fill();\r\n    const minutes = Array(60).fill();\r\n    const handleClick = useCallback(\r\n      (e) => {\r\n        e.target.id === \"hour\"\r\n          ? onChange && onChange((\"0\" + e.target.name).slice(-2) + \":\" + minute)\r\n          : onChange && onChange(hour + \":\" + (\"0\" + e.target.name).slice(-2));\r\n      },\r\n      [hour, minute, onChange]\r\n    );\r\n\r\n    useEffect(() => {\r\n      const h1 = (parseInt(hour) - 1) * 50;\r\n      const h2 = (parseInt(minute) - 1) * 50;\r\n      ref1.current.scrollTop(h1);\r\n      ref2.current.scrollTop(h2);\r\n    }, [hour, minute]);\r\n    return (\r\n      <div className=\"d-flex flex-nowrap w-100 justify-content-around\">\r\n        <div\r\n          id=\"col-hours\"\r\n          className=\"col-hours d-flex flex-fill justify-content-center\"\r\n        >\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHide\r\n            style={{\r\n              marginBottom: \"0px\",\r\n              width: buttonSize,\r\n            }}\r\n            autoHeightMin={50}\r\n            autoHeightMax={200}\r\n            ref={ref1}\r\n            renderTrackHorizontal={(props) => (\r\n              <div\r\n                {...props}\r\n                style={{ display: \"none\" }}\r\n                className=\"track-horizontal\"\r\n              />\r\n            )}\r\n          >\r\n            {hours.map((e, index) => (\r\n              <div\r\n                className=\"d-flex justify-content-center hours btn-wrapper\"\r\n                key={\"h\" + index}\r\n              >\r\n                <Button\r\n                  id=\"hour\"\r\n                  variant={\r\n                    index === parseInt(hour) ? timeActiveVariant : variant\r\n                  }\r\n                  name={index}\r\n                  onClick={handleClick}\r\n                  className={`text-center rounded-0 ${\r\n                    index === parseInt(hour) ? \"b-active \" : \"\"\r\n                  }`}\r\n                  style={{ width: \"100%\", height: \"50px\" }}\r\n                >\r\n                  {(\"0\" + index).slice(-2)}\r\n                </Button>\r\n              </div>\r\n            ))}\r\n          </Scrollbars>\r\n        </div>\r\n        <div\r\n          id=\"col-minutes\"\r\n          className=\"col-minutes d-flex flex-fill minutes justify-content-center\"\r\n        >\r\n          <Scrollbars\r\n            autoHeight\r\n            autoHide\r\n            style={{ marginBottom: \"0px\", width: \"auto\" }}\r\n            ref={ref2}\r\n            autoHeightMin={50}\r\n            autoHeightMax={200}\r\n            renderTrackHorizontal={(props) => (\r\n              <div\r\n                {...props}\r\n                style={{ display: \"none\" }}\r\n                className=\"track-horizontal\"\r\n              />\r\n            )}\r\n          >\r\n            {minutes.map((e, index) => (\r\n              <div\r\n                className=\"d-flex justify-content-center btn-wrapper\"\r\n                key={\"h\" + index}\r\n              >\r\n                <Button\r\n                  id=\"minute\"\r\n                  variant={\r\n                    index === parseInt(minute) ? timeActiveVariant : variant\r\n                  }\r\n                  name={index}\r\n                  onClick={handleClick}\r\n                  className={`text-center rounded-0 ${\r\n                    index === parseInt(minute) ? \"b-active \" : \"\"\r\n                  }`}\r\n                  style={{ width: buttonSize, height: \"50px\" }}\r\n                >\r\n                  {(\"0\" + index).slice(-2)}\r\n                </Button>\r\n              </div>\r\n            ))}\r\n          </Scrollbars>\r\n        </div>\r\n      </div>\r\n    );\r\n  },\r\n  isequal\r\n);\r\nexport default TimePickerDropdown;\r\n","export default __webpack_public_path__ + \"static/media/react-logo-transparent.c39e9569.svg\";","import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport \"firebase/auth\";\r\nconst app = initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n});\r\nexport const auth = getAuth();\r\nexport default app;\r\n","import { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Dropdown, Image, Nav } from \"@themesberg/react-bootstrap\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  PhoneAuthCredential,\r\n  sendPasswordResetEmail,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  updateEmail,\r\n  updatePassword,\r\n  updatePhoneNumber,\r\n  updateProfile,\r\n} from \"firebase/auth\";\r\nimport React, {\r\n  createContext,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { Portal } from \"react-portal\";\r\nimport { auth } from \"../firebase\";\r\n\r\n// const BACKEND = \"http://localhost:8090/public\";\r\n// const CHAT_SERVICE = \"http://localhost:8090/messenger\";\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n\r\n  // const getUpdatedUser = useCallback(() => {\r\n  //   return onAuthStateChanged(auth, (user) => {\r\n  //     return user;\r\n  //   });\r\n  // }, []);\r\n  const currentRole = currentUser?.getIdTokenResult(true).then(({ claims }) => {\r\n    return (\r\n      claims && Object.keys(claims).filter((claim) => claim.includes(\"ROLE_\"))\r\n    );\r\n  });\r\n\r\n  const claims = useCallback(\r\n    () => currentUser?.getIdTokenResult(true),\r\n    [currentUser]\r\n  );\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function updateUser(data) {\r\n    return updateProfile(currentUser, data).then((r) => currentUser.reload());\r\n  }\r\n  function updatePhone(data) {\r\n    const c = PhoneAuthCredential();\r\n    return updatePhoneNumber(currentUser, data).then((r) =>\r\n      currentUser.reload()\r\n    );\r\n  }\r\n\r\n  function signup(email, password) {\r\n    return createUserWithEmailAndPassword(auth, email, password);\r\n  }\r\n\r\n  function login(email, password) {\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return signOut(auth);\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return sendPasswordResetEmail(auth, email);\r\n  }\r\n\r\n  function handleUpdateEmail(email) {\r\n    return updateEmail(currentUser, email);\r\n  }\r\n\r\n  function findConnection() {\r\n    return fetch(process.env.REACT_APP_BACKEND);\r\n  }\r\n  function updatePW(newPassword) {\r\n    return updatePassword(currentUser, newPassword);\r\n  }\r\n  function countNewMessages(senderId, recipientId) {\r\n    return authenticatedFetch({\r\n      url:\r\n        process.env.REACT_APP_CHAT_SERVICE +\r\n        \"/messages/\" +\r\n        senderId +\r\n        \"/\" +\r\n        recipientId +\r\n        \"/count\",\r\n      method: \"GET\",\r\n    });\r\n  }\r\n  function findUnreadMessages(recipientId, senderId) {\r\n    return authenticatedFetch({\r\n      url:\r\n        process.env.REACT_APP_CHAT_SERVICE +\r\n        \"/unread-messages/\" +\r\n        recipientId +\r\n        \"/\" +\r\n        senderId,\r\n      method: \"GET\",\r\n    });\r\n  }\r\n  function findUnreadCount(recipientId, senderIds) {\r\n    return (\r\n      recipientId &&\r\n      senderIds &&\r\n      authenticatedFetch({\r\n        url:\r\n          process.env.REACT_APP_CHAT_SERVICE +\r\n          \"/unread-count/\" +\r\n          recipientId +\r\n          \"/\" +\r\n          senderIds.join(\",\"),\r\n        method: \"GET\",\r\n      })\r\n    );\r\n  }\r\n\r\n  function findNewMessages(recipientId, senderIds = []) {\r\n    return authenticatedFetch({\r\n      url:\r\n        process.env.REACT_APP_CHAT_SERVICE +\r\n        \"/last-messages/\" +\r\n        recipientId +\r\n        \"/\" +\r\n        senderIds.join(\",\"),\r\n      method: \"GET\",\r\n    });\r\n  }\r\n  function findChatMessages(senderId, recipientId, page = 0) {\r\n    return authenticatedFetch({\r\n      url:\r\n        process.env.REACT_APP_CHAT_SERVICE +\r\n        \"/messages/\" +\r\n        senderId +\r\n        \"/\" +\r\n        recipientId +\r\n        \"?page=\" +\r\n        page +\r\n        \"&size=20\",\r\n      method: \"GET\",\r\n    });\r\n  }\r\n  function findChatMessage(id) {\r\n    return authenticatedFetch({\r\n      url: process.env.REACT_APP_CHAT_SERVICE + \"/messages/\" + id,\r\n      method: \"GET\",\r\n    });\r\n  }\r\n  function getToken() {\r\n    return currentUser.getIdToken(true);\r\n  }\r\n  function getHeader() {\r\n    return getToken().then((idToken) => {\r\n      return {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${idToken}`,\r\n      };\r\n    });\r\n  }\r\n\r\n  const authenticatedFetch = (options) => {\r\n    return getHeader().then((header) => {\r\n      const defaults = { headers: header };\r\n      options = Object.assign({}, defaults, options);\r\n\r\n      return fetch(options.url, options)\r\n        .then((response) => {\r\n          return response.json().then((res) => {\r\n            if (res.status !== 200) {\r\n              return Promise.reject(res);\r\n            }\r\n            return res;\r\n          });\r\n        })\r\n        .catch(() => {\r\n          return Promise.reject();\r\n        });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    claims,\r\n    currentUser,\r\n    currentRole,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail: handleUpdateEmail,\r\n    updatePassword,\r\n    findChatMessages,\r\n    countNewMessages,\r\n    findNewMessages,\r\n    findConnection,\r\n    findUnreadMessages,\r\n    findChatMessage,\r\n    findUnreadCount,\r\n    authenticatedFetch,\r\n    updateUser,\r\n    updatePW,\r\n    updatePhone,\r\n    getHeader,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\nexport const useUserNavbar = (size = \"30px\") => {\r\n  const { currentUser, logout } = useAuth();\r\n  const name = currentUser?.displayName || currentUser?.email;\r\n  const image = !currentUser.photoURL ? (\r\n    <div\r\n      className=\"bg-senary text-nonary rounded-circle fw-bolder\"\r\n      style={{\r\n        height: size,\r\n        width: size,\r\n        lineHeight: size,\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n      {name.substring(0, 2)}\r\n    </div>\r\n  ) : (\r\n    <Image\r\n      src={currentUser.photoURL}\r\n      className=\"rounded-circle me-2\"\r\n      style={{ height: size, width: size }}\r\n    />\r\n  );\r\n\r\n  const dropdown = (\r\n    <Dropdown as={Nav.Item} className=\"\" drop=\"up\" flip=\"true\">\r\n      <Dropdown.Toggle as={Nav.Link} className=\"p-0\">\r\n        <div className=\"media d-flex align-items-center w-100 p-2\">\r\n          {image}\r\n          <div className=\"media-body text-light align-items-center d-none d-sm-block\">\r\n            <span className=\"mb-0 font-small fw-bold\">{name}</span>\r\n          </div>\r\n        </div>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu className=\"\" style={{ right: \"0%\", minWidth: \"8rem\" }}>\r\n        <Dropdown.Item className=\"fw-bold px-3 text-primary\" onClick={logout}>\r\n          <FontAwesomeIcon icon={faSignOutAlt} className=\"text-danger me-2\" />\r\n          Logout\r\n        </Dropdown.Item>\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n\r\n  return { name, image, dropdown };\r\n};\r\n","import { atom } from \"recoil\";\r\n\r\nimport { recoilPersist } from \"recoil-persist\";\r\nconst { persistAtom } = recoilPersist({ storage: sessionStorage });\r\n\r\nexport const loggedInUser = atom({\r\n  key: \"loggedInUser\",\r\n  default: {},\r\n  effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const chatActiveContact = atom({\r\n  key: \"chatActiveContact\",\r\n  default: false,\r\n  effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const chatMessages = atom({\r\n  key: \"chatMessages\",\r\n  default: [],\r\n  effects_UNSTABLE: [persistAtom],\r\n});\r\n\r\nexport const chatContacts = atom({\r\n  key: \"chatContacts\",\r\n  default: false,\r\n  effects_UNSTABLE: [persistAtom],\r\n});\r\nexport const chatUsers = atom({\r\n  key: \"chatUsers\",\r\n  default: false,\r\n  effects_UNSTABLE: [persistAtom],\r\n});\r\n","import { debounce } from \"lodash\";\r\nimport moment from \"moment\";\r\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { useAuth } from \"../../../contexts/AuthContext\";\r\nimport {\r\n  chatActiveContact,\r\n  chatContacts,\r\n  chatMessages,\r\n  chatUsers,\r\n} from \"../../../contexts/globalState\";\r\n\r\nexport function useServices() {\r\n  const { authenticatedFetch, currentUser } = useAuth();\r\n  const fetchAddToursSettings = useCallback(() => {\r\n    const options = {\r\n      url: \"http://localhost:8090/settings?id=add-tours\",\r\n    };\r\n    return authenticatedFetch(options);\r\n  }, [authenticatedFetch]);\r\n  const postSettings = useCallback(\r\n    (data) => {\r\n      const options = {\r\n        url: \"http://localhost:8090/settings\",\r\n        body: JSON.stringify(data),\r\n        method: \"PUT\",\r\n      };\r\n      return authenticatedFetch(options);\r\n    },\r\n    [authenticatedFetch]\r\n  );\r\n  const registerUsers = useCallback(\r\n    (data) => {\r\n      const options = {\r\n        url: \"http://localhost:8090/users\",\r\n        body: JSON.stringify(data),\r\n        method: \"POST\",\r\n      };\r\n      return authenticatedFetch(options);\r\n    },\r\n    [authenticatedFetch]\r\n  );\r\n  const fetchTodaysTours = useCallback(\r\n    (driver) => {\r\n      const options = {\r\n        url:\r\n          \"http://localhost:8090/tours?driver=\" +\r\n          driver +\r\n          \"&date=\" +\r\n          moment().format(\"YYYY.MM.DD\"),\r\n      };\r\n      return authenticatedFetch(options);\r\n    },\r\n    [authenticatedFetch]\r\n  );\r\n  const fetchWorkHours = useCallback(\r\n    (driver, from, to) => {\r\n      const options = {\r\n        url:\r\n          \"http://localhost:8090/work-hours?size=500&driver=\" +\r\n          driver +\r\n          \"&date_gte=\" +\r\n          from +\r\n          \"&date_lte=\" +\r\n          to,\r\n      };\r\n      return authenticatedFetch(options);\r\n    },\r\n    [authenticatedFetch]\r\n  );\r\n  const fetchUserWorkHours = useCallback(\r\n    (from, to) => {\r\n      return fetchWorkHours(currentUser.uid, from, to);\r\n    },\r\n    [fetchWorkHours, currentUser.uid]\r\n  );\r\n  const fetchTours = useCallback(\r\n    (driver, page = 0) => {\r\n      const options = {\r\n        url:\r\n          \"http://localhost:8090/tours?sort=date,desc&size=20&page=\" +\r\n          page +\r\n          \"&driver=\" +\r\n          driver,\r\n      };\r\n      return authenticatedFetch(options);\r\n    },\r\n    [authenticatedFetch]\r\n  );\r\n  const fetchUserTours = useCallback(\r\n    (page = 0) => {\r\n      return fetchTours(currentUser.uid, page);\r\n    },\r\n    [fetchTours, currentUser.uid]\r\n  );\r\n  const fetchTodaysWorkHours = useCallback(\r\n    (driver) => {\r\n      const options = {\r\n        url:\r\n          \"http://localhost:8090/work-hours?driver=\" +\r\n          driver +\r\n          \"&date=\" +\r\n          moment().format(\"YYYY.MM.DD\"),\r\n      };\r\n      return authenticatedFetch(options);\r\n    },\r\n    [authenticatedFetch]\r\n  );\r\n  const fetchUpComingVacations = useCallback(\r\n    (driver) => {\r\n      const date = moment().format(\"YYYY.MM.DD\");\r\n      const options = {\r\n        url:\r\n          \"http://localhost:8090/absent-days?sort=dateFrom,desc&size=500&page=0&reason=vacations&driver=\" +\r\n          driver +\r\n          \"&dateFrom_gte=\" +\r\n          date,\r\n      };\r\n      return authenticatedFetch(options);\r\n    },\r\n    [authenticatedFetch]\r\n  );\r\n  const fetchUserConfirmedVacations = useCallback(() => {\r\n    const options = {\r\n      url:\r\n        \"http://localhost:8090/absent-days?driver=\" +\r\n        currentUser?.uid +\r\n        \"&size=500&verified=1&reason=vacations&sort=dateFrom,desc\",\r\n    };\r\n    return authenticatedFetch(options);\r\n  }, [authenticatedFetch, currentUser?.uid]);\r\n  const postTour = useCallback(\r\n    (data) => {\r\n      const options = {\r\n        url: \"http://localhost:8090/tours\",\r\n        method: \"PUT\",\r\n        body: JSON.stringify(data),\r\n      };\r\n      return authenticatedFetch(options);\r\n    },\r\n    [authenticatedFetch]\r\n  );\r\n  const postWorkHour = useCallback(\r\n    (data) => {\r\n      const options = {\r\n        url: \"http://localhost:8090/work-hours\",\r\n        method: \"PUT\",\r\n        body: JSON.stringify(data),\r\n      };\r\n      return authenticatedFetch(options);\r\n    },\r\n    [authenticatedFetch]\r\n  );\r\n  const postVacations = useCallback(\r\n    (data) => {\r\n      const options = {\r\n        url: \"http://localhost:8090/absent-days\",\r\n        method: \"PUT\",\r\n        body: JSON.stringify(data),\r\n      };\r\n      return authenticatedFetch(options);\r\n    },\r\n    [authenticatedFetch]\r\n  );\r\n  const deleteTour = useCallback(\r\n    (id) => {\r\n      const options = {\r\n        method: \"DELETE\",\r\n        url: \"http://localhost:8090/tours/\" + id,\r\n      };\r\n      return authenticatedFetch(options);\r\n    },\r\n    [authenticatedFetch]\r\n  );\r\n  const deleteWorkHour = useCallback(\r\n    (id) => {\r\n      const options = {\r\n        method: \"DELETE\",\r\n        url: \"http://localhost:8090/work-hours/\" + id,\r\n      };\r\n      return authenticatedFetch(options);\r\n    },\r\n    [authenticatedFetch]\r\n  );\r\n  const deleteVacation = useCallback(\r\n    (id) => {\r\n      const options = {\r\n        method: \"DELETE\",\r\n        url: \"http://localhost:8090/absent-days/\" + id,\r\n      };\r\n      return authenticatedFetch(options);\r\n    },\r\n    [authenticatedFetch]\r\n  );\r\n  const fetchUsers = useCallback(() => {\r\n    const options = { url: \"http://localhost:8090/users/all\" };\r\n    return authenticatedFetch(options);\r\n  }, [authenticatedFetch]);\r\n\r\n  const fetchSettings = useCallback(() => {\r\n    const options = {\r\n      url: \"http://localhost:8090/settings\",\r\n    };\r\n    return authenticatedFetch(options);\r\n  }, [authenticatedFetch]);\r\n\r\n  return {\r\n    fetchSettings,\r\n    currentUser,\r\n    registerUsers,\r\n    postTour,\r\n    fetchTodaysTours,\r\n    deleteTour,\r\n    fetchTodaysWorkHours,\r\n    postWorkHour,\r\n    deleteWorkHour,\r\n    fetchUpComingVacations,\r\n    postVacations,\r\n    deleteVacation,\r\n    fetchUsers,\r\n    fetchWorkHours,\r\n    fetchUserWorkHours,\r\n    fetchUserTours,\r\n    fetchUserConfirmedVacations,\r\n    fetchAddToursSettings,\r\n    postSettings,\r\n  };\r\n}\r\n\r\nvar stompClient = null;\r\nexport function useChatServices(\r\n  initialActiveContact,\r\n  onNewMessage,\r\n  initializeContactOnLoad\r\n) {\r\n  const [page, setPage] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const { fetchUsers } = useServices();\r\n  const { currentUser, findChatMessage, findChatMessages, findNewMessages } =\r\n    useAuth();\r\n  // const [contacts, setContacts] = useState();\r\n  const [activeContact, setActiveContact] = useRecoilState(chatActiveContact);\r\n  const [contacts, setContacts] = useRecoilState(chatContacts);\r\n  const [users, setUsers] = useRecoilState(chatUsers);\r\n  const [messages, setMessages] = useRecoilState(chatMessages);\r\n  useEffect(() => {\r\n    sessionStorage.removeItem(\"recoil-persist\");\r\n    initialActiveContact && setActiveContact(initialActiveContact);\r\n    return () => {\r\n      sessionStorage.removeItem(\"recoil-persist\");\r\n    };\r\n  }, []);\r\n\r\n  const updateContacts = useCallback(\r\n    (users) => {\r\n      const contactsIds = users\r\n        ?.filter((c) => c.uid !== currentUser.uid)\r\n        .map((c) => c.uid);\r\n      return findNewMessages(currentUser.uid, contactsIds).then(({ data }) => {\r\n        const newContacts = [...users]\r\n          .filter((u) => u.uid !== currentUser.uid)\r\n          .map((c) => {\r\n            return {\r\n              ...c,\r\n              message: data[c.uid]?.message,\r\n              unreadCount: data[c.uid]?.unreadCount,\r\n            };\r\n          })\r\n          .sort((a, b) => {\r\n            return a.message && !b.message\r\n              ? -1\r\n              : !a.message && b.message\r\n              ? 1\r\n              : a.message && b.message\r\n              ? b.message.timestamp.localeCompare(a.message.timestamp)\r\n              : 0;\r\n          });\r\n        setContacts(newContacts);\r\n        return newContacts;\r\n      });\r\n    },\r\n    [currentUser.uid, findNewMessages]\r\n  );\r\n  const loadContacts = useCallback(() => {\r\n    const users = JSON.parse(\r\n      sessionStorage.getItem(\"recoil-persist\")\r\n    )?.chatUsers;\r\n    return users\r\n      ? updateContacts(users)\r\n      : fetchUsers().then(({ data }) => {\r\n          setUsers(data);\r\n          return updateContacts(data);\r\n        });\r\n  }, [currentUser.uid, fetchUsers, findNewMessages, updateContacts]);\r\n  const handleOnConnected = useCallback(() => {\r\n    loadContacts().then((contacts) => {\r\n      if (initializeContactOnLoad) {\r\n        const c = [...contacts]\r\n          .filter((c) => c.uid !== currentUser.uid)\r\n          .sort((a, b) =>\r\n            moment(a?.message?.timestamp).isBefore(b?.message?.timestamp)\r\n              ? 1\r\n              : 0\r\n          );\r\n        setActiveContact(c[0]);\r\n      }\r\n    });\r\n  }, [loadContacts, initializeContactOnLoad]);\r\n  const setActiveContactUid = useCallback(\r\n    (uid) => {\r\n      const contact = contacts?.find((v) => v.uid === uid);\r\n      contact && setActiveContact(contact);\r\n    },\r\n    [contacts]\r\n  );\r\n  const onMessageReceived = useCallback(\r\n    (msg) => {\r\n      const notification = JSON.parse(msg.body);\r\n      const active =\r\n        JSON.parse(sessionStorage.getItem(\"recoil-persist\"))\r\n          ?.chatActiveContact || initialActiveContact;\r\n\r\n      if (active?.uid === notification.senderId) {\r\n        const newMessages = JSON.parse(\r\n          sessionStorage.getItem(\"recoil-persist\")\r\n        )?.chatMessages;\r\n        if (newMessages) {\r\n          findChatMessage(notification.id).then(({ data }) => {\r\n            setMessages([data, ...newMessages]);\r\n          });\r\n        } else {\r\n          findChatMessages(active.uid, currentUser.uid, 0)\r\n            .then((msgs) => {\r\n              setTotalPages(msgs.data.totalPages);\r\n              setPage(0);\r\n              setMessages(msgs.data.content);\r\n            })\r\n            .catch((e) => {\r\n              return;\r\n            });\r\n        }\r\n        loadContacts();\r\n      } else {\r\n        loadContacts().then((contacts) => {\r\n          findNewMessages(currentUser.uid, [notification.senderId]).then(\r\n            ({ data }) => {\r\n              const message = Object.values(data)[0].message;\r\n              const contact = contacts?.find(\r\n                (c) => c.uid === notification.senderId\r\n              );\r\n              onNewMessage &&\r\n                onNewMessage({\r\n                  notification,\r\n                  activeUid: active?.uid,\r\n                  message,\r\n                  contact,\r\n                  setActive: () => {\r\n                    sessionStorage.removeItem(\"recoil-persist\");\r\n                    setMessages();\r\n                    setActiveContact(contact);\r\n                  },\r\n                });\r\n            }\r\n          );\r\n        });\r\n      }\r\n    },\r\n    [\r\n      currentUser,\r\n      loadContacts,\r\n      onNewMessage,\r\n      findChatMessage,\r\n      findChatMessages,\r\n      findNewMessages,\r\n    ]\r\n  );\r\n  const { sendMessage, disconnect } = useConnectChat({\r\n    onConnected: handleOnConnected,\r\n    onMessageReceived,\r\n    uid: currentUser.uid,\r\n  });\r\n  const handleDisconnect = useCallback(() => {\r\n    disconnect();\r\n    sessionStorage.removeItem(\"recoil-persist\");\r\n  }, [disconnect]);\r\n\r\n  useEffect(() => {\r\n    if (!activeContact?.uid) return;\r\n    findChatMessages(activeContact.uid, currentUser.uid)\r\n      .then((msgs) => {\r\n        setTotalPages(msgs.data.totalPages);\r\n        setMessages(msgs.data.content);\r\n        loadContacts();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }, [activeContact, currentUser?.uid, findChatMessages, loadContacts]);\r\n  const handleSendMessage = useCallback(\r\n    (message) => {\r\n      const success = sendMessage(\r\n        message,\r\n        currentUser.uid,\r\n        currentUser.name,\r\n        activeContact.uid,\r\n        activeContact.name\r\n      );\r\n      if (success) {\r\n        const msg = { ...success };\r\n        setMessages((old) => [msg, ...old]);\r\n      }\r\n    },\r\n    [messages, activeContact, currentUser, loadContacts]\r\n  );\r\n\r\n  const loadNextPage = useCallback(() => {\r\n    if (page + 1 <= totalPages) {\r\n      findChatMessages(currentUser.uid, activeContact.uid, page + 1).then(\r\n        (msgs) => {\r\n          setTotalPages(msgs.data.totalPages);\r\n          const newMessages = [...messages, ...msgs.data.content];\r\n          const ids = [...new Set(newMessages.map((m) => m.id))];\r\n          const finalMessages = ids.map((id) =>\r\n            newMessages.find((m) => m.id === id)\r\n          );\r\n\r\n          return setMessages(finalMessages);\r\n        }\r\n      );\r\n      setPage((old) => old + 1);\r\n      return true;\r\n    }\r\n    return false;\r\n  }, [\r\n    currentUser,\r\n    page,\r\n    totalPages,\r\n    activeContact,\r\n    messages,\r\n    setMessages,\r\n    findChatMessages,\r\n  ]);\r\n\r\n  return {\r\n    contacts,\r\n    messages,\r\n    setActiveContactUid,\r\n    activeContact,\r\n    sendMessage: handleSendMessage,\r\n    disconnect: handleDisconnect,\r\n    loadNextPage,\r\n    onMessageReceived,\r\n  };\r\n}\r\n\r\nexport function useConnectChat({ onMessageReceived, uid, onConnected }) {\r\n  const handleMessageReceived = useCallback(\r\n    (msg) => {\r\n      onMessageReceived && onMessageReceived(msg);\r\n    },\r\n    [onMessageReceived]\r\n  );\r\n  const handleConnected = useCallback(() => {\r\n    stompClient.subscribe(\r\n      \"/user/\" + uid + \"/queue/messages\",\r\n      handleMessageReceived\r\n    );\r\n    onConnected && onConnected();\r\n  }, [uid, handleMessageReceived, onConnected]);\r\n\r\n  const onError = useCallback((err) => {\r\n    console.log(err);\r\n    return null;\r\n  }, []);\r\n\r\n  const connect = useCallback(() => {\r\n    const Stomp = require(\"stompjs\");\r\n    var SockJS = require(\"sockjs-client\");\r\n    var socket = new SockJS(\"http://localhost:8090/ws\");\r\n    stompClient = Stomp.over(socket);\r\n    stompClient.connect(\r\n      {},\r\n      function (frame) {\r\n        console.log(\"Connected: \" + frame);\r\n        handleConnected();\r\n      },\r\n      function (frame) {\r\n        console.log(\"error: \" + frame);\r\n        onError();\r\n      }\r\n    );\r\n  }, [handleConnected, onError]);\r\n\r\n  const sendMessage = useCallback(\r\n    (content, senderId, senderName, recipientId, recipientName) => {\r\n      if (content.trim() !== \"\") {\r\n        const message = {\r\n          senderId,\r\n          recipientId,\r\n          senderName,\r\n          recipientName,\r\n          content,\r\n          timestamp: moment().toISOString(),\r\n        };\r\n        stompClient.send(\"/app/chat\", {}, JSON.stringify(message));\r\n        return message;\r\n      }\r\n      return false;\r\n    },\r\n    []\r\n  );\r\n  const disconnect = useCallback(() => {\r\n    stompClient?.disconnect();\r\n  }, []);\r\n  useEffect(() => {\r\n    uid && connect();\r\n    return () => {\r\n      disconnect();\r\n    };\r\n  }, [uid, connect, disconnect]);\r\n  return {\r\n    sendMessage,\r\n    disconnect,\r\n  };\r\n}\r\n\r\nexport function useGeoAddresses(initialValue, timeout = 800) {\r\n  const [value, setValue] = useState(initialValue);\r\n  const [places, setPlaces] = useState();\r\n\r\n  useEffect(() => {\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n    };\r\n    value &&\r\n      fetch(\r\n        \"https://api.geoapify.com/v1/geocode/autocomplete?text=\" +\r\n          value +\r\n          \"&bias=proximity:7.695437406095948,51.37591047394929&filter=countrycode:de&format=json&apiKey=\" +\r\n          process.env.REACT_APP_GEOAPIFY_API_KEY,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n          const newPlaces = result?.results?.map((r) =>\r\n            r?.formatted.replace(\", Germany\", \"\")\r\n          );\r\n          newPlaces ? setPlaces(newPlaces) : setPlaces();\r\n        })\r\n        .catch((error) => console.log(\"error\", error));\r\n  }, [value]);\r\n\r\n  const handleChange = useCallback((value) => {\r\n    setValue(value);\r\n  }, []);\r\n  const debouncedChange = useMemo(\r\n    () => debounce(handleChange, timeout),\r\n    [handleChange, timeout]\r\n  );\r\n  return { places, onChange: debouncedChange };\r\n}\r\n","// Here are more informations about the scroll restoration of React Router\n// https://reactrouter.com/web/guides/scroll-restoration\n\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, left: 0, behavior: \"auto\" });\n  }, [pathname]);\n\n  return null;\n};\n","import React from \"react\";\nimport { Image } from \"@themesberg/react-bootstrap\";\n\nimport ReactLogo from \"../assets/img/technologies/react-logo-transparent.svg\";\n\nexport default (props) => {\n  const { show } = props;\n\n  return (\n    <div\n      className={`preloader bg-soft flex-column justify-content-center align-items-center ${\n        show ? \"\" : \"show\"\n      }`}\n    >\n      <Image\n        className=\"loader-element animate__animated animate__jackInTheBox\"\n        src={ReactLogo}\n        height={40}\n      />\n    </div>\n  );\n};\n","export const MyRoutes = {\n  // pages\n  Presentation: { path: \"/presentation\" },\n\n  Home: { path: \"/\" },\n  DashboardOverview: { path: \"/dashboard\" },\n  UserHome: { path: \"/app\" },\n\n  UserOverview: { path: \"/user-overview\" },\n\n  AddTour: { path: \"/tours/add\" },\n  UserTours: { path: \"/tours\" },\n  DashboardTours: { path: \"/tours/dashboard\" },\n\n  AddWorkHours: { path: \"/work-hours/add\" },\n  UserWorkHours: { path: \"/work-hours\" },\n  DashboardWorkHours: { path: \"/work-hours/dashboard\" },\n\n  AddVacations: { path: \"/vacations/add\" },\n  UserVacations: { path: \"/vacations\" },\n  DashboardVacations: { path: \"/vacations/dashboard\" },\n\n  Users: { path: \"/users\" },\n\n  Settings: { path: \"/settings\" },\n  UserSettings: { path: \"/user-settings\" },\n\n  Chat: { path: \"/chat\" },\n  UserChat: { path: \"/user-chat\" },\n  UserMessenger: { path: \"/user-messenger\" },\n\n  Upgrade: { path: \"/upgrade\" },\n  BootstrapTables: { path: \"/tables/bootstrap-tables\" },\n  Billing: { path: \"/examples/billing\" },\n  Invoice: { path: \"/examples/invoice\" },\n  Signin: { path: \"/examples/sign-in\" },\n  Signup: { path: \"/examples/sign-up\" },\n  AddUser: { path: \"/examples/add-user\" },\n  ForgotPassword: { path: \"/examples/forgot-password\" },\n  ResetPassword: { path: \"/examples/reset-password\" },\n  Lock: { path: \"/examples/lock\" },\n  NotFound: { path: \"/examples/404\" },\n  ServerError: { path: \"/500\" },\n\n  // docs\n  DocsOverview: { path: \"/documentation/overview\" },\n  DocsDownload: { path: \"/documentation/download\" },\n  DocsQuickStart: { path: \"/documentation/quick-start\" },\n  DocsLicense: { path: \"/documentation/license\" },\n  DocsFolderStructure: { path: \"/documentation/folder-structure\" },\n  DocsBuild: { path: \"/documentation/build-tools\" },\n  DocsChangelog: { path: \"/documentation/changelog\" },\n\n  // components\n  Accordions: { path: \"/components/accordions\" },\n  Alerts: { path: \"/components/alerts\" },\n  Badges: { path: \"/components/badges\" },\n  Widgets: { path: \"/widgets\" },\n  Breadcrumbs: { path: \"/components/breadcrumbs\" },\n  Buttons: { path: \"/components/buttons\" },\n  Forms: { path: \"/components/forms\" },\n  Modals: { path: \"/components/modals\" },\n  Navs: { path: \"/components/navs\" },\n  Navbars: { path: \"/components/navbars\" },\n  Pagination: { path: \"/components/pagination\" },\n  Popovers: { path: \"/components/popovers\" },\n  Progress: { path: \"/components/progress\" },\n  Tables: { path: \"/components/tables\" },\n  Tabs: { path: \"/components/tabs\" },\n  Tooltips: { path: \"/components/tooltips\" },\n  Toasts: { path: \"/components/toasts\" },\n  WidgetsComponent: { path: \"/components/widgets\" },\n};\n","import {\n  faChartPie,\n  faCog,\n  faHandHoldingUsd,\n  faTimes,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Badge, Button, Image, Nav, Navbar } from \"@themesberg/react-bootstrap\";\nimport React, { useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport SimpleBar from \"simplebar-react\";\nimport { useUserNavbar } from \"../contexts/AuthContext\";\nimport { MyRoutes } from \"../routes\";\n\nconst MyButton = ({ children, variant = \"nonary\", ...rest }) => {\n  return (\n    <Button\n      variant={variant}\n      style={{\n        boxShadow:\n          \"inset 0px 0px 1px 1px rgb(255 255 255 / 15%), 1px 1px 1px rgb(46 54 80 / 8%)\",\n      }}\n      {...rest}\n    >\n      {children}\n    </Button>\n  );\n};\nconst Sidebar = () => {\n  const location = useLocation();\n  const { pathname } = location;\n  const [show, setShow] = useState(false);\n  const showClass = show ? \"show\" : \"\";\n\n  const onCollapse = () => setShow(!show);\n\n  const { dropdown } = useUserNavbar();\n  const NavItem = (props) => {\n    const {\n      title,\n      link,\n      external,\n      target,\n      icon,\n      image,\n      badgeText,\n      badgeBg = \"tertiary\",\n      badgeColor = \"primary\",\n    } = props;\n    const classNames = badgeText\n      ? \"d-flex justify-content-start align-items-center justify-content-between\"\n      : \"\";\n    const navItemClassName = link === pathname ? \"active\" : \"\";\n    const linkProps = external ? { href: link } : { as: Link, to: link };\n\n    return (\n      <Nav.Item className={navItemClassName} onClick={() => setShow(false)}>\n        <Nav.Link {...linkProps} target={target} className={classNames}>\n          <span>\n            {icon ? (\n              <span className=\"sidebar-icon\">\n                <FontAwesomeIcon icon={icon} />{\" \"}\n              </span>\n            ) : null}\n            {image ? (\n              <Image\n                src={image}\n                width={20}\n                height={20}\n                className=\"sidebar-icon svg-icon\"\n              />\n            ) : null}\n\n            <span className=\"sidebar-text\">{title}</span>\n          </span>\n          {badgeText ? (\n            <Badge\n              pill\n              bg={badgeBg}\n              text={badgeColor}\n              className=\"badge-md notification-count ms-2\"\n            >\n              {badgeText}\n            </Badge>\n          ) : null}\n        </Nav.Link>\n      </Nav.Item>\n    );\n  };\n\n  return (\n    <>\n      <Navbar\n        expand={false}\n        collapseOnSelect\n        variant=\"dark\"\n        bg=\"primary\"\n        className=\"navbar-theme-primary px-3 py-0 d-md-none\"\n        style={{ height: \"55px\" }}\n      >\n        <div className=\"w-100 d-flex flex-nowrap justify-content-end align-items-center\">\n          <div className=\"d-flex\">\n            <div className=\"ps-2\">\n              <Navbar.Toggle\n                as={(props) => (\n                  <MyButton {...props} variant=\"primary\"></MyButton>\n                )}\n                aria-controls=\"main-navbar bg-primary\"\n                onClick={onCollapse}\n                style={{ transform: \"scale(75%)\" }}\n              >\n                <span className=\"navbar-toggler-icon bg-primary\" />\n              </Navbar.Toggle>\n            </div>\n          </div>\n        </div>\n      </Navbar>\n      <CSSTransition timeout={300} in={show} classNames=\"sidebar-transition\">\n        <SimpleBar\n          className={`collapse ${showClass} sidebar d-md-block text-white bg-primary h-100`}\n        >\n          <div className=\"sidebar-inner px-4 p-3 h-100\">\n            <div className=\"user-card d-flex d-md-none align-items-center justify-content-between justify-content-md-center pb-4\">\n              <div className=\"d-flex align-items-center\">\n                <div>{dropdown}</div>\n              </div>\n              <Nav.Link\n                className=\"collapse-close d-md-none\"\n                onClick={onCollapse}\n              >\n                <FontAwesomeIcon icon={faTimes} />\n              </Nav.Link>\n            </div>\n            <Nav className=\"flex-column pt-3 pt-md-0 h-100 d-flex flex-column justify-content-between\">\n              <div>\n                <NavItem\n                  title=\"Overview\"\n                  link={MyRoutes.DashboardOverview.path}\n                  icon={faChartPie}\n                />\n                <NavItem\n                  title=\"Tours\"\n                  icon={faHandHoldingUsd}\n                  link={MyRoutes.DashboardTours.path}\n                />\n                <NavItem\n                  title=\"Workhours\"\n                  icon={faHandHoldingUsd}\n                  link={MyRoutes.DashboardWorkHours.path}\n                />\n                <NavItem\n                  title=\"Messages\"\n                  icon={faHandHoldingUsd}\n                  link={MyRoutes.Chat.path}\n                />\n                <NavItem\n                  title=\"Users\"\n                  icon={faUser}\n                  link={MyRoutes.Users.path}\n                />\n                <NavItem\n                  title=\"Settings\"\n                  icon={faCog}\n                  link={MyRoutes.Settings.path}\n                />\n\n                <NavItem\n                  title=\"App\"\n                  icon={faCog}\n                  link={MyRoutes.UserHome.path}\n                />\n              </div>\n              {dropdown}\n            </Nav>\n          </div>\n        </SimpleBar>\n      </CSSTransition>\n    </>\n  );\n};\nexport default Sidebar;\n","export default __webpack_public_path__ + \"static/media/android-chrome-192x192.c1fb2234.png\";","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Nav, Image, Navbar, Container } from \"@themesberg/react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport { MyRoutes } from \"../routes\";\nimport Android from \"../assets/img/favicon/android-chrome-192x192.png\";\n// import UserNavbar from \"./UserNavbar\";\nimport { useUserNavbar } from \"../contexts/AuthContext\";\n\nconst Sidebar2 = () => {\n  const { dropdown } = useUserNavbar();\n  return (\n    <>\n      <Navbar\n        expand={false}\n        collapseOnSelect\n        variant=\"dark\"\n        className=\"navbar-theme-nonary px-3 py-0\"\n        style={{ height: \"55px\" }}\n      >\n        <div className=\"w-100 d-flex flex-nowrap justify-content-between align-items-center\">\n          <div className=\"text-light d-flex align-items-end\">\n            <Nav.Link as={Link} to={MyRoutes.UserHome.path}>\n              <Image src={Android} style={{ height: \"30px\" }}></Image>\n              <span className=\"ps-2\">Beton</span>\n            </Nav.Link>\n          </div>\n          {dropdown}\n          {/* <UserNavbar /> */}\n        </div>\n      </Navbar>\n    </>\n  );\n};\nexport default Sidebar2;\n\nexport const UserNavbar = () => {\n  const { dropdown } = useUserNavbar();\n  return (\n    // <Navbar variant=\"dark\" expanded className=\"p-0\">\n    <Container fluid className=\"px-0\">\n      <div className={`d-flex justify-content-end w-100`}>\n        <Nav className=\"align-items-center\">{dropdown}</Nav>\n      </div>\n    </Container>\n    // </Navbar>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/signin.454f944b.svg\";","import { Image } from \"@themesberg/react-bootstrap\";\r\n\r\nconst ContactAvatar = ({ value, isEditable }) => {\r\n  const photoUrl = value[0];\r\n  const name = value[1] || value[2];\r\n  return (\r\n    <div className=\"contact-avatar\">\r\n      {value === \"\" ? (\r\n        <></>\r\n      ) : photoUrl ? (\r\n        <Image\r\n          src={photoUrl}\r\n          className=\"user-avatar rounded-circle border-0\"\r\n          resize=\"contain\"\r\n        />\r\n      ) : (\r\n        <div className=\"bg-primary text-white rounded-circle fw-bolder user-avatar rounded-circle\">\r\n          {name?.substring(0, 2)}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ContactAvatar;\r\n","import { Button } from \"@themesberg/react-bootstrap\";\r\nimport { memo, useCallback } from \"react\";\r\n\r\nconst RolesBadges = memo(({ value, isEditable, onChange, maxWidth }) => {\r\n  const isUser = value.includes(\"ROLE_USER\");\r\n  const isDriver = value.includes(\"ROLE_DRIVER\");\r\n  const isAdmin = value.includes(\"ROLE_ADMIN\");\r\n  const isSuper = value.includes(\"ROLE_SUPER\");\r\n\r\n  const handleClick = useCallback(\r\n    (name) => {\r\n      const v = \"ROLE_\" + name.toUpperCase();\r\n      const add = !value.includes(v);\r\n      const arr = add ? [...value, v] : value.filter((r) => r !== v);\r\n      onChange(arr);\r\n    },\r\n    [onChange, value]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={`d-flex flex-wrap justify-content-center ${\r\n        isEditable ? \"editable\" : \"\"\r\n      }`}\r\n      style={{ maxWidth, minWidth: maxWidth }}\r\n    >\r\n      <RoleBadge\r\n        onClick={handleClick}\r\n        enabled={isUser}\r\n        variant=\"light-tertiary\"\r\n        isEditable={isEditable}\r\n      >\r\n        User\r\n      </RoleBadge>\r\n      <RoleBadge\r\n        onClick={handleClick}\r\n        enabled={isDriver}\r\n        variant=\"very-light-blue\"\r\n        isEditable={isEditable}\r\n      >\r\n        Driver\r\n      </RoleBadge>\r\n      <RoleBadge\r\n        onClick={handleClick}\r\n        enabled={isAdmin}\r\n        variant=\"quinary\"\r\n        isEditable={isEditable}\r\n      >\r\n        Admin\r\n      </RoleBadge>\r\n\r\n      <RoleBadge enabled={isSuper} variant=\"senary\">\r\n        Super\r\n      </RoleBadge>\r\n    </div>\r\n  );\r\n});\r\nconst RoleBadge = ({ children, enabled, variant, isEditable, onClick }) => {\r\n  const bg = isEditable && enabled ? variant : isEditable ? \"light\" : variant;\r\n  return (\r\n    <>\r\n      {(enabled || isEditable) && (\r\n        <div className=\"badge-wrapper p-1\">\r\n          <Button\r\n            active={enabled}\r\n            className=\"px-2 py-1\"\r\n            variant={bg}\r\n            style={{ fontSize: \"14px\", height: \"31px\" }}\r\n            onClick={() => isEditable && onClick(children)}\r\n          >\r\n            {children}\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default RolesBadges;\r\n","import { Button } from \"@themesberg/react-bootstrap\";\r\nimport { memo, useCallback } from \"react\";\r\n\r\nconst StatusBadges = memo(({ value, isEditable, onChange, maxWidth }) => {\r\n  const enabled = value !== \"0\";\r\n\r\n  const handleClick = useCallback(() => {\r\n    const v = enabled ? \"0\" : \"1\";\r\n    onChange(v);\r\n  }, [onChange, enabled]);\r\n\r\n  return (\r\n    <div\r\n      className={`d-flex flex-nowrap justify-content-center `}\r\n      style={{ maxWidth, minWidth: maxWidth }}\r\n    >\r\n      <Badge\r\n        onClick={handleClick}\r\n        enabled={true}\r\n        variant={enabled ? \"duodenary\" : \"denary\"}\r\n        isEditable={isEditable}\r\n      >\r\n        {enabled ? \"Enabled\" : \"Disabled\"}\r\n      </Badge>\r\n    </div>\r\n  );\r\n});\r\nconst Badge = ({ children, enabled, variant, isEditable, onClick }) => {\r\n  const bg = isEditable && enabled ? variant : isEditable ? \"light\" : variant;\r\n  return (\r\n    (enabled || isEditable) && (\r\n      <div className=\"badge-wrapper px-2\">\r\n        <Button\r\n          active={enabled}\r\n          className=\"px-2 py-1\"\r\n          variant={bg}\r\n          style={{ fontSize: \"14px\" }}\r\n          onClick={() => isEditable && onClick(children)}\r\n        >\r\n          {children}\r\n        </Button>\r\n      </div>\r\n    )\r\n  );\r\n};\r\nexport default StatusBadges;\r\n","import { faCheck, faMinus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, ButtonGroup } from \"@themesberg/react-bootstrap\";\r\nimport { memo } from \"react\";\r\n\r\nconst VerifiedButton = memo(({ value, isEditable, onChange }) => {\r\n  const active1 = parseInt(value) === 1;\r\n  const active2 = parseInt(value) === 0;\r\n  const active3 = parseInt(value) === -1;\r\n  const className1 =\r\n    active1 || isEditable ? \"text-confirmed\" : \"text-confirmed opacity-0\";\r\n  const className2 =\r\n    active2 || isEditable ? \"text-pending\" : \"text-pending opacity-0\";\r\n  const className3 =\r\n    active3 || isEditable ? \"text-declined\" : \"text-declined opacity-0\";\r\n  const disabled = !isEditable;\r\n  return (\r\n    <div className={`verified-wrapper ${isEditable ? \"editable\" : \"\"}`}>\r\n      <Button\r\n        active={active1}\r\n        disabled={disabled}\r\n        variant=\"transparent\"\r\n        className={`left ${className1}`}\r\n        onClick={() => onChange(1)}\r\n      >\r\n        <FontAwesomeIcon icon={faCheck} />\r\n      </Button>\r\n      <Button\r\n        active={active2}\r\n        disabled={disabled}\r\n        variant=\"transparent\"\r\n        className={`center ${className2}`}\r\n        onClick={() => onChange(0)}\r\n      >\r\n        <FontAwesomeIcon icon={faMinus} />\r\n      </Button>\r\n      <Button\r\n        active={active3}\r\n        disabled={disabled}\r\n        variant=\"transparent\"\r\n        className={`right ${className3}`}\r\n        onClick={() => onChange(-1)}\r\n      >\r\n        <FontAwesomeIcon icon={faTimes} />\r\n      </Button>\r\n    </div>\r\n  );\r\n});\r\nexport default VerifiedButton;\r\n","export const PAGINATION = {\r\n  INTERNAL: \"INTERNAL\",\r\n  SERVER: \"SERVER\",\r\n  NONE: false,\r\n};\r\n","import { nanoid } from \"@reduxjs/toolkit\";\r\nimport moment from \"moment\";\r\nimport ContactAvatar from \"../../../components/ContactAvatar\";\r\nimport RolesBadges from \"../../../components/RolesBadges\";\r\nimport StatusBadges from \"../../../components/StatusBadges\";\r\nimport VerifiedButton from \"../../../components/VerifiedButton\";\r\nimport { PAGINATION } from \"./types\";\r\nconst API = process.env.REACT_APP_API_URL;\r\n\r\nexport const durationFormat = (duration = \"0:0\") => {\r\n  const split = duration.split(\":\");\r\n  const hours = parseInt(split[0]);\r\n  const minutes = parseInt(split[1]);\r\n  return (\r\n    (hours !== 0 && !isNaN(hours) ? hours + \"h\" : \"\") +\r\n    (!isNaN(hours) && !isNaN(minutes) && hours !== 0 && minutes !== 0\r\n      ? \" \"\r\n      : \"\") +\r\n    (!isNaN(minutes) && minutes !== 0 ? minutes + \"min\" : \"\")\r\n  );\r\n};\r\nexport const calcDurationAndFormat = (arr) => {\r\n  try {\r\n    const t1 = moment(arr[1], \"HH:mm\", true);\r\n    const t2 = moment(arr[2], \"HH:mm\", true);\r\n    const diff = t1.isValid() && t2.isValid() && t2.diff(t1, \"minutes\");\r\n    const hours = (diff && parseInt(diff / 60)) || 0;\r\n    const minutes = (diff && diff % 60) || 0;\r\n    return hours + \":\" + minutes;\r\n  } catch (error) {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nconst dateApproved = ({ dateFrom, dateTo, verified }) => {\r\n  const from = moment(dateFrom, \"YYYY.MM.DD\");\r\n  const to = moment(dateTo, \"YYYY.MM.DD\");\r\n  const now = moment();\r\n  return from.isBefore(now) && to.isAfter(now) ? \"bg-quinary\" : \"\";\r\n};\r\nconst toDateFormat = (date) =>\r\n  moment(date, \"YYYY.MM.DD\", true).isValid()\r\n    ? moment(date, \"YYYY.MM.DD\").format(\"DD.MM.YYYY\")\r\n    : date;\r\nconst dateToMonth = (date) =>\r\n  moment(date, \"YYYY.MM\", true).isValid()\r\n    ? moment(date, \"YYYY.MM\").format(\"MMMM\")\r\n    : date;\r\n\r\nconst dateToDay = (arr) => {\r\n  return moment(arr[1], \"YYYY.MM.DD\", true).isValid()\r\n    ? moment(arr[1], \"YYYY.MM.DD\").format(\"dddd\")\r\n    : arr[1];\r\n};\r\nconst calcDistance = (arr) => {\r\n  return arr[2] - arr[1];\r\n};\r\nconst userPostMapper = ({ entityId, ...rest }) => {\r\n  const { url, options } = defaultPostMapper({ entityId, ...rest });\r\n  const data = JSON.parse(options.body);\r\n  const body = data.map((user) => ({\r\n    ...user,\r\n    uid: user?.id,\r\n    disabled: user.disabled === \"0\",\r\n    photoUrl: user.photoUrl[0],\r\n    claims: {\r\n      vehicle: user?.vehicle,\r\n      workPlant: user?.workPlant,\r\n      vacationDays: user?.vacationDays,\r\n    },\r\n  }));\r\n  return { url, options: { ...options, body: JSON.stringify(body) } };\r\n};\r\n\r\nconst defaultPostMapper = ({\r\n  entityId,\r\n  state,\r\n  tablesSelector,\r\n  labelsSelector,\r\n  changesSelector,\r\n  metaSelector,\r\n}) => {\r\n  const { changes, addRow, postInitialValues, rows } =\r\n    tablesSelector.selectById(state, entityId);\r\n  const c = changesSelector\r\n    .selectAll(state)\r\n    .reduce((a, b) => ({ ...a, [b.id]: { ...rows[b.id], ...b } }), {});\r\n\r\n  const body = changes.map((bodyE) => {\r\n    const rest = Object.keys(c[bodyE]);\r\n    const startingValue =\r\n      bodyE === Object.keys(addRow)[0]\r\n        ? postInitialValues\r\n        : { id: bodyE, ...postInitialValues };\r\n    const r = rest\r\n      .filter((e) => e !== \"id\")\r\n      .reduce(\r\n        (a, b) => {\r\n          const label = labelsSelector.selectById(state, b).idx;\r\n\r\n          const value = (c[bodyE][b] + \"\").trim() === \"\" ? null : c[bodyE][b];\r\n          if (label === \"driver\") {\r\n            const { drivers } = metaSelector.selectById(state, \"drivers\");\r\n            const v = drivers.find(\r\n              (a) => a.name === value || a.email === value\r\n            );\r\n            return { ...a, [label]: v.uid };\r\n          }\r\n          return { ...a, [label]: value };\r\n        },\r\n        { ...startingValue }\r\n      );\r\n    return r;\r\n  });\r\n  return {\r\n    url: getGridUrl(entityId),\r\n    options: { method: \"PUT\", body: JSON.stringify(body) },\r\n  };\r\n};\r\n\r\nconst settingsPostMapper = ({\r\n  entityId,\r\n  state,\r\n  tablesSelector,\r\n  labelsSelector,\r\n  changesSelector,\r\n}) => {\r\n  const {\r\n    rows,\r\n    changes: changesIds,\r\n    labels,\r\n    addRow,\r\n  } = tablesSelector.selectById(state, entityId);\r\n  const label = labels[0];\r\n  const { idx } = labelsSelector.selectById(state, label);\r\n  const rowsIds = Object.keys({ ...rows, ...addRow });\r\n  const newRows = rowsIds\r\n    .map((id) => {\r\n      const c = changesIds.includes(id)\r\n        ? changesSelector.selectById(state, id)\r\n        : {};\r\n      return { ...(rows[id] || addRow[id]), ...c };\r\n    })\r\n    .filter((r) => r[label].trim() !== \"\");\r\n  const body = {\r\n    id: idx,\r\n    value: JSON.stringify([\r\n      ...new Set(\r\n        newRows.map((a) => a[label]).sort((a, b) => a.localeCompare(b))\r\n      ),\r\n    ]),\r\n  };\r\n  const url = getGridUrl(entityId);\r\n\r\n  return { url, options: { method: \"PUT\", body: JSON.stringify(body) } };\r\n};\r\nconst settingsDeleteMapper = ({\r\n  entityId,\r\n  state,\r\n  tablesSelector,\r\n  labelsSelector,\r\n}) => {\r\n  const { selectedRows, rows, labels } = tablesSelector.selectById(\r\n    state,\r\n    entityId\r\n  );\r\n  const label = labels[0];\r\n  const { idx } = labelsSelector.selectById(state, label);\r\n  const rowsIds = Object.keys(rows).filter((id) => !selectedRows.includes(id));\r\n  const newRows = rowsIds.map((id) => {\r\n    return { ...rows[id] };\r\n  });\r\n  const body = {\r\n    id: idx,\r\n    value: JSON.stringify([...new Set(newRows.map((a) => a[label]))]),\r\n  };\r\n  const url = getGridUrl(entityId);\r\n\r\n  return {\r\n    url: url,\r\n    options: { method: \"PUT\", body: JSON.stringify(body) },\r\n  };\r\n};\r\nconst defaultDeleteMapper = ({ entityId, state, tablesSelector }) => {\r\n  const { selectedRows } = tablesSelector.selectById(state, entityId);\r\n  const url = getGridUrl(entityId);\r\n  const finalUrl = url + \"/\" + selectedRows.join(\",\");\r\n  return {\r\n    url: finalUrl,\r\n    options: { method: \"DELETE\" },\r\n  };\r\n};\r\nexport const getGridPostMapper = (props) => {\r\n  const fn = gridLabels[props.entityId].postMapper || defaultPostMapper;\r\n  return fn(props);\r\n};\r\nexport const getGridDeleteMapper = (props) => {\r\n  const fn = gridLabels[props.entityId].deleteMapper || defaultDeleteMapper;\r\n  return fn(props);\r\n};\r\nexport const getGridTableConnections = (entityId) =>\r\n  gridLabels[entityId].connections;\r\nexport const getGridRowClassName = (entityId, row) =>\r\n  (gridLabels[entityId].rowClassName &&\r\n    gridLabels[entityId].rowClassName(row)) ||\r\n  \"active\";\r\nexport const getGridTitle = (entityId) => gridLabels[entityId].title;\r\n\r\nexport const getGridDateFilter = (entityId, date) =>\r\n  gridLabels[entityId].dateFilter(date);\r\nexport const getGridUrl = (entityId) => gridLabels[entityId].url;\r\nexport const getGridMeta = (entityId) => gridLabels[entityId].meta || {};\r\nexport const getGridWidgets = (entityId) => gridLabels[entityId].widgets;\r\nexport const getGridPrimaryLabels = (entityId) =>\r\n  gridLabels[entityId].primaryLabels || [];\r\nexport const getGridSecondaryLabels = (entityId) =>\r\n  gridLabels[entityId].secondaryLabels || [];\r\nexport const getGridTertiaryLabels = (entityId) =>\r\n  gridLabels[entityId].tertiaryLabels || [];\r\nexport const getGridLabelFormat = (entityId, labelIdx) =>\r\n  getGridLabels(entityId)[labelIdx].format;\r\nexport const getGridLabelFn = (entityId, labelIdx) =>\r\n  getGridLabels(entityId)[labelIdx].fn;\r\nexport const getGridLabelType = (entityId, labelIdx) =>\r\n  getGridLabels(entityId)[labelIdx].type;\r\nexport const getGridLabelUserType = (entityId, labelIdx) =>\r\n  getGridLabels(entityId)[labelIdx].userType;\r\nexport const getGridLabelDefaultValue = (entityId, labelIdx) =>\r\n  getGridLabels(entityId)[labelIdx].defaultValue;\r\nexport const getGridLabelIsNotRequired = (entityId, labelIdx) =>\r\n  getGridLabels(entityId)[labelIdx].notRequired;\r\nexport const getGridLabelLinks = (entityId, labelIdx) =>\r\n  getGridLabels(entityId)[labelIdx].connections?.map((c) => ({\r\n    connection: c,\r\n    dependencies: getGridLabels(entityId)[c].dependencies,\r\n  }));\r\nexport const getGridLabelProps = (entityId, labelIdx) => {\r\n  const { format, fn, id, connections, nanoid, ...rest } =\r\n    getGridLabels(entityId)[labelIdx];\r\n  return { idx: id, ...rest };\r\n};\r\nexport const getGridLabels = (entityId) => gridLabels[entityId].labels || [];\r\nexport const getLabel = (id) => gridLabels[id];\r\nexport const getCustomComponent = (props) => {\r\n  return props.Header === \"verified\" ? (\r\n    <VerifiedButton {...props} />\r\n  ) : props.Header === \"Roles\" ? (\r\n    <RolesBadges {...props} />\r\n  ) : props.Header === \"Status\" ? (\r\n    <StatusBadges {...props} />\r\n  ) : props.Header === \"photoUrl\" ? (\r\n    <ContactAvatar {...props} />\r\n  ) : (\r\n    <div>error</div>\r\n  );\r\n};\r\n\r\nconst gridLabels = {\r\n  settingsVehicle: {\r\n    url: API + \"settings\",\r\n    widgets: {\r\n      filter: false,\r\n      add: true,\r\n      remove: true,\r\n      delete: true,\r\n      massEdit: false,\r\n      download: false,\r\n      sort: false,\r\n      pagination: PAGINATION.NONE,\r\n      counter: false,\r\n      // pageSize: 25,\r\n      edit: true,\r\n    },\r\n    title: \"Vehicle\",\r\n    primaryLabels: [\"vehicle\"],\r\n    secondaryLabels: [],\r\n    postMapper: settingsPostMapper,\r\n    deleteMapper: settingsDeleteMapper,\r\n    labels: {\r\n      vehicle: {\r\n        nanoid: nanoid(),\r\n        id: \"vehicle\",\r\n        text: \"Vehicles\",\r\n        type: \"text\",\r\n        minWidth: \"50px\",\r\n        maxWidth: \"80px\",\r\n      },\r\n    },\r\n  },\r\n  settingsDischargeType: {\r\n    url: API + \"settings\",\r\n    widgets: {\r\n      filter: false,\r\n      add: true,\r\n      remove: true,\r\n      delete: true,\r\n      massEdit: false,\r\n      download: false,\r\n      sort: false,\r\n      pagination: PAGINATION.NONE,\r\n      counter: false,\r\n      edit: true,\r\n    },\r\n    title: \"Discharge Type\",\r\n    primaryLabels: [\"dischargeType\"],\r\n    secondaryLabels: [],\r\n    postMapper: settingsPostMapper,\r\n    deleteMapper: settingsDeleteMapper,\r\n    labels: {\r\n      dischargeType: {\r\n        nanoid: nanoid(),\r\n        id: \"dischargeType\",\r\n        text: \"Discharge Types\",\r\n        type: \"dischargeType\",\r\n        maxWidth: \"150px\",\r\n        minWidth: \"50px\",\r\n      },\r\n    },\r\n  },\r\n  settingsWorkPlant: {\r\n    url: API + \"settings\",\r\n    widgets: {\r\n      filter: false,\r\n      add: true,\r\n      remove: true,\r\n      delete: true,\r\n      massEdit: false,\r\n      download: false,\r\n      sort: false,\r\n      pagination: PAGINATION.NONE,\r\n      counter: false,\r\n      edit: true,\r\n    },\r\n    postMapper: settingsPostMapper,\r\n    deleteMapper: settingsDeleteMapper,\r\n    title: \"Work Plants\",\r\n    primaryLabels: [\"workPlant\"],\r\n    secondaryLabels: [],\r\n    labels: {\r\n      workPlant: {\r\n        nanoid: nanoid(),\r\n        id: \"workPlant\",\r\n        text: \"Work Plant\",\r\n        type: \"text\",\r\n        minWidth: \"50px\",\r\n        maxWidth: \"200px\",\r\n      },\r\n    },\r\n  },\r\n  publicHolidays: {\r\n    url: API + \"public-holidays\",\r\n    meta: [\"date\"],\r\n    widgets: {\r\n      filter: true,\r\n      add: true,\r\n      remove: true,\r\n      delete: true,\r\n      massEdit: false,\r\n      download: true,\r\n      sort: true,\r\n      pagination: PAGINATION.NONE,\r\n      counter: true,\r\n      edit: true,\r\n    },\r\n    title: \"Public Holidays\",\r\n    primaryLabels: [\"date\", \"name\"],\r\n    secondaryLabels: [],\r\n    labels: {\r\n      date: {\r\n        nanoid: nanoid(),\r\n        id: \"date\",\r\n        text: \"Date\",\r\n        type: \"date\",\r\n        filterType: \"date\",\r\n        format: toDateFormat,\r\n        maxWidth: \"100px\",\r\n      },\r\n      name: {\r\n        nanoid: nanoid(),\r\n        id: \"name\",\r\n        text: \"Name\",\r\n        type: \"bigText\",\r\n        maxWidth: \"150px\",\r\n      },\r\n    },\r\n  },\r\n  users: {\r\n    url: API + \"users\",\r\n    widgets: {\r\n      filter: true,\r\n      add: true,\r\n      remove: true,\r\n      delete: true,\r\n      massEdit: false,\r\n      download: true,\r\n      sort: true,\r\n      pagination: PAGINATION.SERVER,\r\n      counter: true,\r\n      pageSize: 10,\r\n      edit: true,\r\n    },\r\n    title: \"Users\",\r\n    postMapper: userPostMapper,\r\n    primaryLabels: [\r\n      \"email\",\r\n      \"name\",\r\n      \"roles\",\r\n      \"workPlant\",\r\n      \"vehicle\",\r\n      \"password\",\r\n      \"disabled\",\r\n      \"vacationDays\",\r\n    ],\r\n    tertiaryLabels: [\"photoUrl\"],\r\n    labels: {\r\n      photoUrl: {\r\n        nanoid: nanoid(),\r\n        id: \"photoUrl\",\r\n        text: \"photoUrl\",\r\n        maxWidth: \"150px\",\r\n        type: \"customComponent\",\r\n        fn: (arr) => {\r\n          return arr;\r\n        },\r\n        dependencies: [\"name\", \"email\"],\r\n      },\r\n      email: {\r\n        nanoid: nanoid(),\r\n        id: \"email\",\r\n        text: \"Email\",\r\n        type: \"email\",\r\n        maxWidth: \"230px\",\r\n        connections: [\"photoUrl\"],\r\n      },\r\n      name: {\r\n        nanoid: nanoid(),\r\n        id: \"name\",\r\n        text: \"Name\",\r\n        type: \"bigText\",\r\n        maxWidth: \"150px\",\r\n        connections: [\"photoUrl\"],\r\n      },\r\n      roles: {\r\n        nanoid: nanoid(),\r\n        id: \"roles\",\r\n        text: \"Roles\",\r\n        maxWidth: \"150px\",\r\n        type: \"customComponent\",\r\n      },\r\n\r\n      disabled: {\r\n        nanoid: nanoid(),\r\n        id: \"disabled\",\r\n        text: \"Status\",\r\n        maxWidth: \"80px\",\r\n        type: \"customComponent\",\r\n        format: (v) => {\r\n          return String(v).toLowerCase() === \"false\" ? \"1\" : \"0\";\r\n        },\r\n      },\r\n\r\n      vehicle: {\r\n        nanoid: nanoid(),\r\n        id: \"vehicle\",\r\n        text: \"Vehicle\",\r\n        type: \"constant\",\r\n        // maxWidth: \"80px\",\r\n        minWidth: \"50px\",\r\n        maxWidth: \"100px\",\r\n      },\r\n      workPlant: {\r\n        nanoid: nanoid(),\r\n        id: \"workPlant\",\r\n        text: \"Work Plant\",\r\n        type: \"constant\",\r\n        maxWidth: \"180px\",\r\n      },\r\n      vacationDays: {\r\n        nanoid: nanoid(),\r\n        id: \"vacationDays\",\r\n        text: \"vacationDays\",\r\n        type: \"number\",\r\n        maxWidth: \"50px\",\r\n      },\r\n      password: {\r\n        nanoid: nanoid(),\r\n        id: \"password\",\r\n        text: \"Password\",\r\n        type: \"bigText\",\r\n        maxWidth: \"150px\",\r\n        hidden: true,\r\n      },\r\n    },\r\n  },\r\n  tours: {\r\n    url: API + \"tours\",\r\n    meta: [\"date\", \"user\"],\r\n    widgets: {\r\n      filter: true,\r\n      add: true,\r\n      remove: true,\r\n      delete: true,\r\n      massEdit: false,\r\n      download: true,\r\n      sort: true,\r\n      pagination: PAGINATION.SERVER,\r\n      counter: true,\r\n      pageSize: 20,\r\n      edit: true,\r\n    },\r\n    title: \"Tours\",\r\n    primaryLabels: [\r\n      \"date\",\r\n      \"driver\",\r\n      \"vehicle\",\r\n      \"workPlant\",\r\n      \"deliveryNr\",\r\n      \"buildingSite\",\r\n      \"cbm\",\r\n      \"arrival\",\r\n      \"departure\",\r\n      \"kmArrival\",\r\n      \"kmDeparture\",\r\n      \"dischargeBegin\",\r\n      \"dischargeEnd\",\r\n      \"dischargeType\",\r\n      \"waitTime\",\r\n      \"other\",\r\n    ],\r\n    secondaryLabels: [\"distance\"],\r\n    labels: {\r\n      date: {\r\n        nanoid: nanoid(),\r\n        id: \"date\",\r\n        text: \"Date\",\r\n        type: \"date\",\r\n        filterType: \"date\",\r\n        format: toDateFormat,\r\n        maxWidth: \"100px\",\r\n        userType: \"disabled\",\r\n      },\r\n\r\n      driver: {\r\n        nanoid: nanoid(),\r\n        id: \"driver\",\r\n        text: \"Driver\",\r\n        type: \"constant\",\r\n        filterType: \"checkbox\",\r\n        maxWidth: \"200px\",\r\n        userType: \"disabled\",\r\n      },\r\n      vehicle: {\r\n        nanoid: nanoid(),\r\n        id: \"vehicle\",\r\n        text: \"Vehicle\",\r\n        type: \"constant\",\r\n        filterType: \"checkbox\",\r\n        minWidth: \"100px\",\r\n        maxWidth: \"150px\",\r\n        userType: \"modal\",\r\n      },\r\n      workPlant: {\r\n        nanoid: nanoid(),\r\n        id: \"workPlant\",\r\n        text: \"Work Plant\",\r\n        type: \"constant\",\r\n        filterType: \"checkbox\",\r\n        maxWidth: \"270px\",\r\n        userType: \"modal\",\r\n      },\r\n      deliveryNr: {\r\n        nanoid: nanoid(),\r\n        id: \"deliveryNr\",\r\n        text: \"Delivery Nr\",\r\n        type: \"bigText\",\r\n        maxWidth: \"150px\",\r\n        userType: \"input-number\",\r\n        defaultValue: \"550\",\r\n      },\r\n      buildingSite: {\r\n        nanoid: nanoid(),\r\n        id: \"buildingSite\",\r\n        text: \"Address\",\r\n        type: \"navi\",\r\n        filterType: \"checkbox\",\r\n        maxWidth: \"250px\",\r\n        userType: \"navi\",\r\n      },\r\n      cbm: {\r\n        nanoid: nanoid(),\r\n        id: \"cbm\",\r\n        text: \"Cbm\",\r\n        type: \"number\",\r\n        filterType: \"range\",\r\n        min: 0,\r\n        max: 30,\r\n        measurement: \"m³\",\r\n        maxWidth: \"60px\",\r\n        userType: \"input-number\",\r\n      },\r\n      arrival: {\r\n        nanoid: nanoid(),\r\n        id: \"arrival\",\r\n        text: \"Arrival\",\r\n        type: \"time\",\r\n        filterType: \"time\",\r\n        maxWidth: \"100px\",\r\n        userType: \"time\",\r\n      },\r\n      departure: {\r\n        nanoid: nanoid(),\r\n        id: \"departure\",\r\n        text: \"Departure\",\r\n        type: \"time\",\r\n        filterType: \"time\",\r\n        maxWidth: \"100px\",\r\n        userType: \"time\",\r\n      },\r\n      kmArrival: {\r\n        nanoid: nanoid(),\r\n        id: \"kmArrival\",\r\n        text: \"Km at Arrival\",\r\n        type: \"bigNumber\",\r\n        maxWidth: \"150px\",\r\n        connections: [\"distance\"],\r\n        userType: \"input-number\",\r\n      },\r\n      kmDeparture: {\r\n        nanoid: nanoid(),\r\n        id: \"kmDeparture\",\r\n        text: \"Km at Departure\",\r\n        type: \"bigNumber\",\r\n        maxWidth: \"150px\",\r\n        connections: [\"distance\"],\r\n        userType: \"input-number\",\r\n      },\r\n      distance: {\r\n        nanoid: nanoid(),\r\n        id: \"distance\",\r\n        text: \"Distance\",\r\n        type: \"nonEditable\",\r\n        maxWidth: \"80px\",\r\n        minWidth: \"50px\",\r\n        dependencies: [\"kmArrival\", \"kmDeparture\"],\r\n        fn: calcDistance,\r\n      },\r\n      dischargeBegin: {\r\n        nanoid: nanoid(),\r\n        id: \"dischargeBegin\",\r\n        text: \"Discharge Begin\",\r\n        type: \"time\",\r\n        filterType: \"time\",\r\n        maxWidth: \"130px\",\r\n        userType: \"time\",\r\n      },\r\n      dischargeEnd: {\r\n        nanoid: nanoid(),\r\n        id: \"dischargeEnd\",\r\n        text: \"Discharge End\",\r\n        type: \"time\",\r\n        filterType: \"time\",\r\n        maxWidth: \"130px\",\r\n        userType: \"time\",\r\n      },\r\n      dischargeType: {\r\n        nanoid: nanoid(),\r\n        id: \"dischargeType\",\r\n        text: \"Discharge Type\",\r\n        type: \"constant\",\r\n        filterType: \"checkbox\",\r\n        maxWidth: \"160px\",\r\n        userType: \"modal\",\r\n      },\r\n      waitTime: {\r\n        nanoid: nanoid(),\r\n        id: \"waitTime\",\r\n        text: \"Wait Time\",\r\n        type: \"number\",\r\n        maxWidth: \"130px\",\r\n        userType: \"input-number\",\r\n      },\r\n      other: {\r\n        nanoid: nanoid(),\r\n        id: \"other\",\r\n        text: \"Other\",\r\n        type: \"bigText\",\r\n        maxWidth: \"250px\",\r\n        userType: \"textarea\",\r\n        notRequired: true,\r\n      },\r\n    },\r\n  },\r\n  workHours: {\r\n    connections: {\r\n      onUpdate: [\"workHoursBank\"],\r\n      onDateChange: [\"workHoursBank\", \"vacationsOverview\"],\r\n    },\r\n    url: API + \"work-hours\",\r\n    dateFilter: (date) => ({ date: { eq: [moment(date).format(\"YYYY.MM\")] } }),\r\n    meta: [\"date\", \"user\"],\r\n    dateType: \"YYYY.MM\",\r\n    widgets: {\r\n      filter: true,\r\n      add: true,\r\n      remove: true,\r\n      delete: true,\r\n      massEdit: false,\r\n      download: true,\r\n      pagination: PAGINATION.SERVER,\r\n      counter: true,\r\n      pageSize: 20,\r\n      sort: true,\r\n      edit: true,\r\n    },\r\n    title: \"Workhours\",\r\n    primaryLabels: [\"date\", \"begin\", \"end\", \"pause\"],\r\n    secondaryLabels: [\"day\", \"duration\"],\r\n    labels: {\r\n      date: {\r\n        nanoid: nanoid(),\r\n        id: \"date\",\r\n        text: \"Date\",\r\n        type: \"date\",\r\n        filterType: \"date\",\r\n        connections: [\"day\"],\r\n        format: toDateFormat,\r\n        maxWidth: \"100px\",\r\n        minWidth: \"100px\",\r\n      },\r\n      day: {\r\n        nanoid: nanoid(),\r\n        id: \"day\",\r\n        text: \"Day\",\r\n        type: \"nonEditable\",\r\n        filterType: \"checkbox\",\r\n        dependencies: [\"date\"],\r\n        fn: dateToDay,\r\n        maxWidth: \"100px\",\r\n        minWidth: \"100px\",\r\n        ignoreSort: true,\r\n      },\r\n\r\n      begin: {\r\n        nanoid: nanoid(),\r\n        id: \"begin\",\r\n        text: \"Begin\",\r\n        type: \"time\",\r\n        connections: [\"duration\"],\r\n        filterType: \"time\",\r\n        maxWidth: \"100px\",\r\n        minWidth: \"100px\",\r\n      },\r\n      end: {\r\n        nanoid: nanoid(),\r\n        id: \"end\",\r\n        text: \"End\",\r\n        type: \"time\",\r\n        connections: [\"duration\"],\r\n        filterType: \"time\",\r\n        maxWidth: \"100px\",\r\n        minWidth: \"100px\",\r\n      },\r\n      duration: {\r\n        nanoid: nanoid(),\r\n        id: \"duration\",\r\n        text: \"Duration\",\r\n        type: \"nonEditable\",\r\n        dependencies: [\"begin\", \"end\"],\r\n        fn: calcDurationAndFormat,\r\n        format: durationFormat,\r\n        maxWidth: \"100px\",\r\n        minWidth: \"100px\",\r\n      },\r\n      pause: {\r\n        nanoid: nanoid(),\r\n        id: \"pause\",\r\n        text: \"Pause\",\r\n        type: \"time\",\r\n        max: \"180\",\r\n        filterType: \"time\",\r\n        maxWidth: \"100px\",\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  },\r\n  workHoursBank: {\r\n    url: API + \"work-hours-bank\",\r\n    dateFilter: (date) => ({ date: { eq: [moment(date).format(\"YYYY\")] } }),\r\n    widgets: {\r\n      filter: false,\r\n      add: false,\r\n      remove: false,\r\n      delete: false,\r\n      massEdit: true,\r\n      download: true,\r\n      pagination: true,\r\n      counter: false,\r\n      pageSize: 6,\r\n      sort: true,\r\n      edit: false,\r\n    },\r\n    title: \"Workhours Bank\",\r\n    primaryLabels: [\"date\", \"hours\"],\r\n    secondaryLabels: [],\r\n    editable: [\"hours\"],\r\n    labels: {\r\n      date: {\r\n        nanoid: nanoid(),\r\n        id: \"date\",\r\n        text: \"Month\",\r\n        type: \"text\",\r\n        format: dateToMonth,\r\n        maxWidth: \"100px\",\r\n        minWidth: \"100px\",\r\n      },\r\n\r\n      hours: {\r\n        nanoid: nanoid(),\r\n        id: \"hours\",\r\n        text: \"Hours\",\r\n        type: \"number\",\r\n        measurement: \"h\",\r\n        maxWidth: \"100px\",\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  },\r\n  absent: {\r\n    connections: {\r\n      onUpdate: [\"vacationsOverview\"],\r\n    },\r\n    url: API + \"absent-days\",\r\n    widgets: {\r\n      filter: false,\r\n      add: true,\r\n      remove: true,\r\n      delete: true,\r\n      massEdit: false,\r\n      download: true,\r\n      pagination: true,\r\n      counter: false,\r\n      pageSize: 5,\r\n      sort: true,\r\n      edit: true,\r\n    },\r\n    title: \"Absent\",\r\n    primaryLabels: [\"dateFrom\", \"dateTo\", \"reason\", \"days\"],\r\n    // secondaryLabels: [\"days\"],\r\n    labels: {\r\n      dateFrom: {\r\n        nanoid: nanoid(),\r\n        id: \"dateFrom\",\r\n        text: \"from\",\r\n        type: \"date\",\r\n        format: toDateFormat,\r\n        // connections: [\"days\"],\r\n        maxWidth: \"100px\",\r\n        minWidth: \"100px\",\r\n      },\r\n      dateTo: {\r\n        nanoid: nanoid(),\r\n        id: \"dateTo\",\r\n        text: \"to\",\r\n        type: \"date\",\r\n        format: toDateFormat,\r\n        // connections: [\"days\"],\r\n        maxWidth: \"100px\",\r\n        minWidth: \"100px\",\r\n      },\r\n      days: {\r\n        nanoid: nanoid(),\r\n        id: \"days\",\r\n        text: \"Days\",\r\n        type: \"nonEditable\",\r\n        maxWidth: \"80px\",\r\n        minWidth: \"80px\",\r\n        // dependencies: [\"dateFrom\", \"dateTo\"],\r\n        // fn: calcDaysDifference,\r\n      },\r\n      reason: {\r\n        nanoid: nanoid(),\r\n        id: \"reason\",\r\n        text: \"Reason\",\r\n        type: \"bigText\",\r\n        maxWidth: \"100px\",\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  },\r\n  vacationsOverview: {\r\n    url: API + \"absent-days/vacations/rest\",\r\n    dateFilter: (date) => ({ date: { eq: [moment(date).format(\"YYYY\")] } }),\r\n    dateType: \"YYYY\",\r\n    widgets: {\r\n      filter: false,\r\n      add: false,\r\n      download: true,\r\n      remove: false,\r\n      massEdit: true,\r\n      pagination: false,\r\n      counter: false,\r\n      pageSize: 5,\r\n      sort: false,\r\n      edit: false,\r\n    },\r\n    title: \"Vacations Overview\",\r\n    primaryLabels: [\"taken\", \"rest\"],\r\n    labels: {\r\n      taken: {\r\n        nanoid: nanoid(),\r\n        id: \"taken\",\r\n        text: \"Taken\",\r\n        type: \"number\",\r\n        maxWidth: \"100px\",\r\n        minWidth: \"100px\",\r\n      },\r\n      rest: {\r\n        nanoid: nanoid(),\r\n        id: \"rest\",\r\n        text: \"Rest\",\r\n        type: \"number\",\r\n        maxWidth: \"100px\",\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  },\r\n  vacations: {\r\n    connections: {\r\n      onUpdate: [\"vacationsOverview\"],\r\n    },\r\n    url: API + \"absent-days\",\r\n    widgets: {\r\n      filter: false,\r\n      add: true,\r\n      download: true,\r\n      remove: true,\r\n      massEdit: false,\r\n      pagination: PAGINATION.INTERNAL,\r\n      counter: true,\r\n      pageSize: 5,\r\n      sort: true,\r\n      edit: true,\r\n    },\r\n    title: \"Vacations\",\r\n    footer: [\"Total\", \"\", \"SUM\"],\r\n    primaryLabels: [\"dateFrom\", \"dateTo\", \"days\", \"verified\"],\r\n    // secondaryLabels: [\"days\"],\r\n    // tertiaryLabels: [\"verified\"],\r\n    labels: {\r\n      dateFrom: {\r\n        nanoid: nanoid(),\r\n        id: \"dateFrom\",\r\n        text: \"from\",\r\n        type: \"date\",\r\n        format: toDateFormat,\r\n        // connections: [\"verified\"],\r\n        maxWidth: \"100px\",\r\n        minWidth: \"100px\",\r\n      },\r\n      dateTo: {\r\n        nanoid: nanoid(),\r\n        id: \"dateTo\",\r\n        text: \"to\",\r\n        type: \"date\",\r\n        format: toDateFormat,\r\n        // connections: [\"verified\"],\r\n        maxWidth: \"100px\",\r\n        minWidth: \"100px\",\r\n      },\r\n      days: {\r\n        nanoid: nanoid(),\r\n        id: \"days\",\r\n        text: \"Days\",\r\n        type: \"nonEditable\",\r\n        maxWidth: \"80px\",\r\n        minWidth: \"80px\",\r\n        // dependencies: [\"dateFrom\", \"dateTo\"],\r\n        // fn: calcDaysDifference,\r\n      },\r\n\r\n      verified: {\r\n        nanoid: nanoid(),\r\n        id: \"verified\",\r\n        text: \"verified\",\r\n        type: \"customComponent\",\r\n        maxWidth: \"100px\",\r\n        minWidth: \"100px\",\r\n        // dependencies: [\"dateFrom\", \"dateTo\"],\r\n        format: (v) => v + \"\",\r\n      },\r\n    },\r\n  },\r\n  workHoursByDate: {\r\n    url: API + \"work-hours-bank/by-date-driver\",\r\n    widgets: {\r\n      filter: false,\r\n      add: false,\r\n      download: true,\r\n      remove: false,\r\n      massEdit: true,\r\n      pagination: true,\r\n      counter: true,\r\n      pageSize: 20,\r\n      sort: true,\r\n      edit: false,\r\n    },\r\n    title: \"Total working time in \",\r\n    primaryLabels: [\"driver\", \"hours\"],\r\n    labels: {\r\n      driver: {\r\n        nanoid: nanoid(),\r\n        id: \"driver\",\r\n        text: \"Driver\",\r\n        type: \"nonEditable\",\r\n        maxWidth: \"200px\",\r\n      },\r\n      hours: {\r\n        nanoid: nanoid(),\r\n        id: \"hours\",\r\n        text: \"Hours\",\r\n        type: \"nonEditable\",\r\n        maxWidth: \"50px\",\r\n        minWidth: \"50px\",\r\n      },\r\n    },\r\n  },\r\n  pendingVacations: {\r\n    url: API + \"absent-days\",\r\n    connections: {\r\n      onUpdate: [\"upcomingAbsent\"],\r\n    },\r\n    widgets: {\r\n      filter: false,\r\n      add: true,\r\n      download: false,\r\n      remove: true,\r\n      massEdit: false,\r\n      pagination: PAGINATION.SERVER,\r\n      counter: true,\r\n      pageSize: 3,\r\n      sort: true,\r\n      edit: true,\r\n    },\r\n    // rowClassName: dateApproved,\r\n    title: \"Pending Vacations\",\r\n    primaryLabels: [\"driver\", \"dateFrom\", \"dateTo\", \"verified\"],\r\n\r\n    labels: {\r\n      driver: {\r\n        nanoid: nanoid(),\r\n        id: \"driver\",\r\n        text: \"Driver\",\r\n        type: \"constant\",\r\n        maxWidth: \"200px\",\r\n      },\r\n      dateFrom: {\r\n        nanoid: nanoid(),\r\n        id: \"dateFrom\",\r\n        text: \"From\",\r\n        type: \"date\",\r\n        maxWidth: \"90px\",\r\n        minWidth: \"90px\",\r\n        format: toDateFormat,\r\n      },\r\n      dateTo: {\r\n        nanoid: nanoid(),\r\n        id: \"dateTo\",\r\n        text: \"To\",\r\n        type: \"date\",\r\n        maxWidth: \"90px\",\r\n        minWidth: \"90px\",\r\n        format: toDateFormat,\r\n      },\r\n      verified: {\r\n        nanoid: nanoid(),\r\n        id: \"verified\",\r\n        text: \"verified\",\r\n        type: \"customComponent\",\r\n        maxWidth: \"100px\",\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  },\r\n  upcomingAbsent: {\r\n    url: API + \"absent-days\",\r\n    widgets: {\r\n      filter: false,\r\n      add: true,\r\n      download: false,\r\n      remove: true,\r\n      massEdit: false,\r\n      pagination: PAGINATION.SERVER,\r\n      counter: true,\r\n      pageSize: 3,\r\n      sort: true,\r\n      edit: true,\r\n    },\r\n    rowClassName: dateApproved,\r\n    title: \"Upcoming Absents\",\r\n    primaryLabels: [\"dateFrom\", \"dateTo\", \"driver\", \"reason\"],\r\n    secondaryLabels: [],\r\n\r\n    labels: {\r\n      driver: {\r\n        nanoid: nanoid(),\r\n        id: \"driver\",\r\n        text: \"Driver\",\r\n        type: \"constant\",\r\n        maxWidth: \"200px\",\r\n      },\r\n      dateFrom: {\r\n        nanoid: nanoid(),\r\n        id: \"dateFrom\",\r\n        text: \"From\",\r\n        type: \"date\",\r\n        maxWidth: \"90px\",\r\n        minWidth: \"90px\",\r\n        format: toDateFormat,\r\n      },\r\n      dateTo: {\r\n        nanoid: nanoid(),\r\n        id: \"dateTo\",\r\n        text: \"To\",\r\n        type: \"date\",\r\n        maxWidth: \"90px\",\r\n        minWidth: \"90px\",\r\n        format: toDateFormat,\r\n      },\r\n      reason: {\r\n        nanoid: nanoid(),\r\n        id: \"reason\",\r\n        text: \"reason\",\r\n        type: \"text\",\r\n        maxWidth: \"90px\",\r\n        minWidth: \"90px\",\r\n      },\r\n    },\r\n  },\r\n};\r\nexport function maxWidthByType(textType) {\r\n  return textType === \"text\"\r\n    ? \"100px\"\r\n    : textType === \"number\"\r\n    ? \"100px\"\r\n    : textType === \"bigText\"\r\n    ? \"200px\"\r\n    : textType === \"bigNumber\"\r\n    ? \"200px\"\r\n    : textType === \"smallText\"\r\n    ? \"75px\"\r\n    : textType === \"smallNumber\"\r\n    ? \"50px\"\r\n    : \"50px\";\r\n}\r\n","import { nanoid } from \"@reduxjs/toolkit\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport {\r\n  getGridLabelLinks,\r\n  getGridLabelProps,\r\n  getGridLabels,\r\n  getGridPrimaryLabels,\r\n  getGridSecondaryLabels,\r\n  getGridTertiaryLabels,\r\n  getGridUrl,\r\n  getGridWidgets,\r\n} from \"../pages/myComponents/util/labels\";\r\n\r\nexport function useLoadData(tableName, actions, meta) {\r\n  const [stateAPIStatus, setAPIStatus] = useState(\"loading\");\r\n  const dispatch = useDispatch();\r\n  const { getHeader } = useAuth();\r\n\r\n  useEffect(() => {\r\n    console.log(\"loading\");\r\n    setAPIStatus(\"loading\");\r\n    getHeader()\r\n      .then((header) => {\r\n        switch (tableName) {\r\n          case \"messages\":\r\n            loadMessagesPage(actions, dispatch, header, meta)\r\n              .then(() => setAPIStatus(\"success\"))\r\n              .catch((e) => {\r\n                setAPIStatus(\"error\");\r\n              });\r\n            break;\r\n          case \"workHoursTable\":\r\n            loadWorkHoursPage(actions, dispatch, header, meta)\r\n              .then(() => setAPIStatus(\"success\"))\r\n              .catch((e) => {\r\n                setAPIStatus(\"error\");\r\n              });\r\n            break;\r\n          case \"toursTable\":\r\n            loadToursPage(actions, dispatch, header)\r\n              .then(() => setAPIStatus(\"success\"))\r\n              .catch((e) => {\r\n                setAPIStatus(\"error\");\r\n              });\r\n            break;\r\n          case \"overviewTable\":\r\n            loadOverviewPage(actions, dispatch, header)\r\n              .then(() => setAPIStatus(\"success\"))\r\n              .catch((e) => {\r\n                setAPIStatus(\"error\");\r\n              });\r\n            break;\r\n          case \"settingsTable\":\r\n            loadSettingsPage(actions, dispatch, header)\r\n              .then(() => setAPIStatus(\"success\"))\r\n              .catch((e) => {\r\n                setAPIStatus(\"error\");\r\n              });\r\n            break;\r\n          case \"usersTable\":\r\n            loadUsersPage(actions, dispatch, header)\r\n              .then(() => setAPIStatus(\"success\"))\r\n              .catch((e) => {\r\n                setAPIStatus(\"error\");\r\n              });\r\n            break;\r\n          case \"settings\":\r\n            loadSettings(actions, dispatch, header)\r\n              .then(() => setAPIStatus(\"success\"))\r\n              .catch((e) => {\r\n                setAPIStatus(\"error\");\r\n              });\r\n            break;\r\n          default:\r\n            setAPIStatus(\"error\");\r\n        }\r\n      })\r\n      .catch((e) => setAPIStatus(\"error\"));\r\n  }, [dispatch, meta, tableName, actions, getHeader]);\r\n\r\n  return stateAPIStatus;\r\n}\r\n\r\nexport function loadMessagesPage({ fetchUsers }, dispatch, header) {\r\n  return dispatch(fetchUsers(header));\r\n}\r\n\r\nexport function loadOverviewPage(\r\n  { fetchAndInitEntityGrid, fetchMeta, addMeta, fetchDrivers },\r\n  dispatch,\r\n  header\r\n) {\r\n  const date = moment().format(\"YYYY.MM\");\r\n  const dateFilter = { date: { eq: [date] } };\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: header,\r\n  };\r\n  const cbmFetchers = [\r\n    fetch(\r\n      \"http://localhost:8090/tours/cbm?date=\" + moment().format(\"YYYY.MM\"),\r\n      requestOptions\r\n    ),\r\n    fetch(\r\n      \"http://localhost:8090/tours/cbm?date=\" +\r\n        moment().subtract(1, \"months\").format(\"YYYY.MM\"),\r\n      requestOptions\r\n    ),\r\n    fetch(\r\n      \"http://localhost:8090/tours/cbm?date=\" +\r\n        moment().subtract(2, \"months\").format(\"YYYY.MM\"),\r\n      requestOptions\r\n    ),\r\n    fetch(\r\n      \"http://localhost:8090/tours/cbm-by-work-plant?date=\" +\r\n        moment().format(\"YYYY\"),\r\n      requestOptions\r\n    ),\r\n    fetch(\r\n      \"http://localhost:8090/tours/cbm-year/?date=\" + moment().format(\"YYYY\"),\r\n      requestOptions\r\n    ),\r\n  ];\r\n  const pendingVacationsFilter = {\r\n    reason: { eq: [\"vacations\"] },\r\n    dateFrom: { gte: [moment().format(\"YYYY.MM.DD\")] },\r\n    // dateTo: { gte: [moment().format(\"YYYY.MM.DD\")] },\r\n    verified: { eq: [0] },\r\n  };\r\n  const upcomingAbsentFilter = {\r\n    dateFrom: { gte: [moment().format(\"YYYY.MM.DD\")] },\r\n    verified: { eq: [1] },\r\n  };\r\n  const dispatchers = (meta) => [\r\n    dispatch(\r\n      fetchMeta({ header, labels: [\"vehicle\", \"workPlant\", \"dischargeType\"] })\r\n    ),\r\n    dispatch(\r\n      fetchAndInitEntityGrid({\r\n        entityId: \"workHoursByDate\",\r\n        url: getGridUrl(\"workHoursByDate\"),\r\n        limit: getGridWidgets(\"workHoursByDate\").pageSize,\r\n        page: 0,\r\n        initialFilters: dateFilter,\r\n        initialSort: { id: \"hours\", order: \"asc\" },\r\n        header,\r\n        date: moment().toISOString(),\r\n        ...meta,\r\n      })\r\n    ),\r\n    dispatch(\r\n      fetchAndInitEntityGrid({\r\n        entityId: \"pendingVacations\",\r\n        url: getGridUrl(\"pendingVacations\"),\r\n        limit: getGridWidgets(\"pendingVacations\").pageSize,\r\n        page: 0,\r\n        initialSort: { id: \"dateFrom\", order: \"asc\" },\r\n        initialFilters: pendingVacationsFilter,\r\n        postInitialValues: { reason: \"vacations\" },\r\n        header,\r\n        ...meta,\r\n      })\r\n    ),\r\n    dispatch(\r\n      fetchAndInitEntityGrid({\r\n        entityId: \"upcomingAbsent\",\r\n        url: getGridUrl(\"upcomingAbsent\"),\r\n        limit: getGridWidgets(\"upcomingAbsent\").pageSize,\r\n        page: 0,\r\n        initialSort: { id: \"dateFrom\", order: \"asc\" },\r\n        initialFilters: upcomingAbsentFilter,\r\n        postInitialValues: { verified: 1 },\r\n        header,\r\n        ...meta,\r\n      })\r\n    ),\r\n  ];\r\n  const names = [\r\n    \"currentMonth\",\r\n    \"lastMonth\",\r\n    \"twoMonthsAgo\",\r\n    \"byWorkPlant\",\r\n    \"year\",\r\n  ];\r\n  function promiseFetchers(fetchers, names, id) {\r\n    return Promise.all(fetchers)\r\n      .then((responses) => Promise.all(responses.map((r) => r.json())))\r\n      .then((jsonObjects) => {\r\n        dispatch(\r\n          addMeta([\r\n            {\r\n              id,\r\n              ...jsonObjects\r\n                .map((o, index) => ({\r\n                  [names[index]]: o.data,\r\n                }))\r\n                .reduce((a, b) => ({ ...a, ...b }), {}),\r\n            },\r\n          ])\r\n        );\r\n      });\r\n  }\r\n\r\n  return dispatch(fetchDrivers(header)).then(({ payload }) => {\r\n    return promiseFetchers(cbmFetchers, names, \"cbm\").then(() =>\r\n      Promise.all(dispatchers({ drivers: payload }))\r\n    );\r\n  });\r\n}\r\n\r\nexport function loadSettings({ fetchMeta, fetchDrivers }, dispatch, header) {\r\n  return dispatch(\r\n    fetchMeta({ header, labels: [\"vehicle\", \"workPlant\", \"dischargeType\"] })\r\n  ).then(() => dispatch(fetchDrivers(header)));\r\n}\r\nexport function loadSettingsPage(\r\n  { fetchAndInitEntityGrid, clearTables, fetchMeta },\r\n  dispatch,\r\n  header\r\n) {\r\n  const date = moment().toISOString();\r\n  const formattedDate = moment().format(\"YYYY.MM\");\r\n  const initialFilters = {\r\n    date: { gte: formattedDate + \".01\", lte: formattedDate + \".31\" },\r\n  };\r\n  const postInitialValues = {\r\n    countryCode: \"DE\",\r\n  };\r\n\r\n  dispatch(clearTables());\r\n  return dispatch(\r\n    fetchAndInitEntityGrid({\r\n      entityId: \"publicHolidays\",\r\n      url: getGridUrl(\"publicHolidays\"),\r\n      limit: getGridWidgets(\"publicHolidays\").pageSize,\r\n      initialFilters,\r\n      initialSort: { id: \"date\", order: \"desc\" },\r\n      header,\r\n      postInitialValues,\r\n      date,\r\n    })\r\n  ).then(() =>\r\n    dispatch(\r\n      fetchAndInitEntityGrid({\r\n        entityId: \"settingsVehicle\",\r\n        url: getGridUrl(\"settingsVehicle\"),\r\n        header,\r\n        initialFilters: { id: { eq: [\"vehicle\"] } },\r\n      })\r\n    )\r\n      .then(() =>\r\n        dispatch(\r\n          fetchAndInitEntityGrid({\r\n            entityId: \"settingsWorkPlant\",\r\n            url: getGridUrl(\"settingsWorkPlant\"),\r\n            header,\r\n            initialFilters: { id: { eq: [\"workPlant\"] } },\r\n          })\r\n        )\r\n      )\r\n      .then(() =>\r\n        dispatch(\r\n          fetchAndInitEntityGrid({\r\n            entityId: \"settingsDischargeType\",\r\n            url: getGridUrl(\"settingsDischargeType\"),\r\n            header,\r\n            initialFilters: { id: { eq: [\"dischargeType\"] } },\r\n          })\r\n        )\r\n      )\r\n  );\r\n}\r\nexport function loadUsersPage(\r\n  { fetchAndInitEntityGrid, clearTables, fetchMeta },\r\n  dispatch,\r\n  header\r\n) {\r\n  const date = moment().toISOString();\r\n  dispatch(clearTables());\r\n  return dispatch(\r\n    fetchMeta({ header, labels: [\"vehicle\", \"workPlant\", \"dischargeType\"] })\r\n  ).then(() =>\r\n    dispatch(\r\n      fetchAndInitEntityGrid({\r\n        entityId: \"users\",\r\n        url: getGridUrl(\"users\"),\r\n        page: 0,\r\n        limit: getGridWidgets(\"users\").pageSize,\r\n        header,\r\n        // hiddenColumns: [\"password\"],\r\n        initialSort: { id: \"name\", order: \"desc\" },\r\n        date,\r\n      })\r\n    )\r\n  );\r\n}\r\nexport function loadToursPage(\r\n  { fetchAndInitEntityGrid, fetchMeta, clearTables, fetchDrivers },\r\n  dispatch,\r\n  header\r\n) {\r\n  const date = moment().toISOString();\r\n  const formattedDate = moment().format(\"YYYY.MM\");\r\n  const initialFilters = {\r\n    date: { gte: formattedDate + \".01\", lte: formattedDate + \".31\" },\r\n  };\r\n  dispatch(clearTables());\r\n  return dispatch(\r\n    fetchMeta({ header, labels: [\"vehicle\", \"workPlant\", \"dischargeType\"] })\r\n  ).then(() =>\r\n    dispatch(fetchDrivers(header)).then(({ payload }) => {\r\n      return dispatch(\r\n        fetchAndInitEntityGrid({\r\n          entityId: \"tours\",\r\n          url: getGridUrl(\"tours\"),\r\n          limit: getGridWidgets(\"tours\").pageSize,\r\n          page: 0,\r\n          initialFilters,\r\n          initialSort: { id: \"date\", order: \"desc\" },\r\n          date,\r\n          header,\r\n          drivers: payload,\r\n        })\r\n      );\r\n    })\r\n  );\r\n}\r\nexport function loadWorkHoursPage(\r\n  { fetchMeta, fetchAndInitEntityGrid, addMeta, clearTables, fetchDrivers },\r\n  dispatch,\r\n  header,\r\n  driver,\r\n  date = moment()\r\n) {\r\n  dispatch(clearTables());\r\n  return dispatch(\r\n    fetchMeta({ header, labels: [\"vehicle\", \"workPlant\", \"dischargeType\"] })\r\n  ).then(() =>\r\n    dispatch(fetchDrivers(header)).then(({ payload }) => {\r\n      payload.sort((a, b) =>\r\n        (a.name || a.email).localeCompare(b.name || b.email)\r\n      );\r\n      const driverName = driver || payload[0]?.uid;\r\n      const formattedDate = date.format(\"YYYY.MM\");\r\n      const driverFilter = { driver: { eq: [driverName] } };\r\n      const workHoursFilter = {\r\n        ...driverFilter,\r\n        date: { gte: formattedDate + \".01\", lte: formattedDate + \".31\" },\r\n      };\r\n      const absentDaysFilter = {\r\n        ...driverFilter,\r\n        reason: { neq: [\"vacations\"] },\r\n      };\r\n      const vacationsFilter = {\r\n        ...driverFilter,\r\n        reason: { eq: [\"vacations\"] },\r\n      };\r\n      const workHoursBankFilter = {\r\n        ...driverFilter,\r\n        date: { eq: [date.format(\"YYYY\")] },\r\n      };\r\n      const vacationsOverviewFilter = {\r\n        ...driverFilter,\r\n        date: { eq: [date.format(\"YYYY\")] },\r\n      };\r\n      const postInitialValueWorkHours = { driver: driverName };\r\n      const postInitialValueAbsentDays = {\r\n        driver: driverName,\r\n        reason: \"vacations\",\r\n        verified: 1,\r\n      };\r\n      const postInitialValueVacations = {\r\n        driver: driverName,\r\n        reason: \"vacations\",\r\n      };\r\n      return dispatch(\r\n        fetchAndInitEntityGrid({\r\n          entityId: \"workHours\",\r\n          url: getGridUrl(\"workHours\"),\r\n          limit: getGridWidgets(\"workHours\").pageSize,\r\n          page: 0,\r\n          initialFilters: workHoursFilter,\r\n          initialSort: { id: \"date\", order: \"desc\" },\r\n          postInitialValues: postInitialValueWorkHours,\r\n          header,\r\n          date: moment().toISOString(),\r\n        })\r\n      )\r\n        .then(() =>\r\n          dispatch(\r\n            fetchAndInitEntityGrid({\r\n              entityId: \"absent\",\r\n              url: getGridUrl(\"absent\"),\r\n              limit: getGridWidgets(\"absent\").pageSize,\r\n              page: 0,\r\n              initialFilters: absentDaysFilter,\r\n              initialSort: { id: \"dateFrom\", order: \"desc\" },\r\n              header,\r\n              postInitialValues: postInitialValueAbsentDays,\r\n            })\r\n          )\r\n        )\r\n        .then(() =>\r\n          dispatch(\r\n            fetchAndInitEntityGrid({\r\n              entityId: \"vacations\",\r\n              url: getGridUrl(\"vacations\"),\r\n              limit: getGridWidgets(\"vacations\").pageSize,\r\n              page: 0,\r\n              initialFilters: vacationsFilter,\r\n              initialSort: { id: \"dateFrom\", order: \"desc\" },\r\n              header,\r\n              postInitialValues: postInitialValueVacations,\r\n            })\r\n          )\r\n        )\r\n        .then(() =>\r\n          dispatch(\r\n            fetchAndInitEntityGrid({\r\n              entityId: \"vacationsOverview\",\r\n              url: getGridUrl(\"vacationsOverview\"),\r\n              limit: getGridWidgets(\"vacationsOverview\").pageSize,\r\n              page: 0,\r\n              initialFilters: vacationsOverviewFilter,\r\n              header,\r\n            })\r\n          )\r\n        )\r\n\r\n        .then(() =>\r\n          dispatch(\r\n            fetchAndInitEntityGrid({\r\n              entityId: \"workHoursBank\",\r\n              url: getGridUrl(\"workHoursBank\"),\r\n              limit: getGridWidgets(\"workHoursBank\").pageSize,\r\n              page: 0,\r\n              initialFilters: workHoursBankFilter,\r\n              initialSort: { id: \"date\", order: \"asc\" },\r\n              header,\r\n            })\r\n          )\r\n        )\r\n        .then(() =>\r\n          dispatch(\r\n            addMeta([\r\n              {\r\n                id: \"driver\",\r\n                value: payload?.find((d) => d.uid === driverName),\r\n              },\r\n            ])\r\n          )\r\n        );\r\n    })\r\n  );\r\n}\r\n\r\nexport function normalizeInitApi({ data, meta, drivers }) {\r\n  const mObject = getConnections(data, drivers);\r\n  const tableIds = Object.keys(mObject);\r\n\r\n  const nanoidLabelsTable = getNanoidLabelsTable(mObject);\r\n  const addRow = tableIds.reduce(\r\n    (a, tableId) => ({\r\n      ...a,\r\n      [tableId]: {\r\n        id: nanoid(),\r\n        ...Object.values(nanoidLabelsTable[tableId]).reduce(\r\n          (a, b) => ({ ...a, [b]: \"\" }),\r\n          {}\r\n        ),\r\n      },\r\n    }),\r\n    {}\r\n  );\r\n  const labelsByTableId = getLabelsByTableId(tableIds, nanoidLabelsTable);\r\n  const labels = tableIds\r\n    .map((r) => labelsByTableId[r])\r\n    .reduce((a, b) => [...a, ...b], []);\r\n\r\n  const rowsByTableId = mapRowsToNanoidLabels(mObject, nanoidLabelsTable);\r\n\r\n  const tables = getTable(\r\n    mObject,\r\n    labelsByTableId,\r\n    meta,\r\n    addRow,\r\n    rowsByTableId\r\n  );\r\n\r\n  const modes = tableIds.map((id) => ({ id: id, value: \"idle\" }));\r\n  return {\r\n    labels,\r\n    tables,\r\n    modes,\r\n  };\r\n}\r\nexport function normalizeApi({ data, meta, drivers }) {\r\n  const mObject = getConnections(data, drivers);\r\n  const tableIds = Object.keys(mObject);\r\n\r\n  const nanoidLabelsTable = getNanoidLabelsTable(mObject);\r\n  const rowsByTableId = mapRowsToNanoidLabels(mObject, nanoidLabelsTable);\r\n\r\n  const tables = updateTableRows(mObject, meta, rowsByTableId);\r\n\r\n  const modes = tableIds.map((id) => ({ id: id, value: \"idle\" }));\r\n  return {\r\n    tables,\r\n    modes,\r\n  };\r\n}\r\n\r\nexport function getConnections(m, drivers) {\r\n  const tableIds = Object.keys(m);\r\n  return tableIds\r\n    .map((tableId) => {\r\n      return {\r\n        [tableId]: m[tableId].map(({ id = nanoid(), ...rest }) => {\r\n          const getValue = (b) => {\r\n            const value =\r\n              rest[b] === 0\r\n                ? \"0\"\r\n                : typeof rest[b] == \"boolean\"\r\n                ? rest[b]\r\n                  ? \"true\"\r\n                  : \"false\"\r\n                : rest[b];\r\n            if (b === \"driver\") {\r\n              const v = drivers?.find((a) => a.uid === value);\r\n              return v?.name || v?.email || value;\r\n            }\r\n            return value;\r\n          };\r\n          const allLabels = getGridLabels(tableId);\r\n          const primaryLabels = Object.keys(rest).filter((l) =>\r\n            getGridPrimaryLabels(tableId).includes(l)\r\n          );\r\n          const secondaryLabels = getGridSecondaryLabels(tableId)?.filter((s) =>\r\n            allLabels[s]?.dependencies\r\n              ?.map((d) => primaryLabels.includes(d))\r\n              .reduce((a, b) => a && b, true)\r\n          );\r\n          const tertiaryLabels = getGridTertiaryLabels(tableId)?.filter((s) =>\r\n            allLabels[s]?.dependencies\r\n              ?.map((d) => primaryLabels.includes(d))\r\n              .reduce((a, b) => a && b, true)\r\n          );\r\n\r\n          const primaryCells = primaryLabels.reduce(\r\n            (a, b) => ({ ...a, [b]: getValue(b) || \"\" }),\r\n            {}\r\n          );\r\n          const secondaryCells = secondaryLabels?.reduce((a, b) => {\r\n            const calcValue = allLabels[b].fn;\r\n            const dependantValues = [\r\n              getValue(b),\r\n              ...allLabels[b].dependencies.map((label) => getValue(label)),\r\n            ];\r\n            return { ...a, [b]: getValue(b) || calcValue(dependantValues) };\r\n          }, {});\r\n          const tertiaryCells = tertiaryLabels?.reduce((a, b) => {\r\n            const calcValue = allLabels[b].fn;\r\n            const dependantValues = [\r\n              getValue(b),\r\n              ...allLabels[b].dependencies.map((label) => getValue(label)),\r\n            ];\r\n            return { ...a, [b]: calcValue(dependantValues) };\r\n          }, {});\r\n          return {\r\n            id,\r\n            ...primaryCells,\r\n            ...secondaryCells,\r\n            ...tertiaryCells,\r\n          };\r\n        }),\r\n      };\r\n    })\r\n    .reduce((a, b) => ({ ...a, ...b }), {});\r\n}\r\nexport function getNanoidLabelsTable(mObject) {\r\n  const tableIds = Object.keys(mObject);\r\n  return tableIds\r\n    .map((tableId) => ({\r\n      [tableId]: Object.keys(getGridLabels(tableId)).reduce(\r\n        (a, b) => ({ ...a, [b]: getGridLabels(tableId)[b].nanoid }),\r\n        {}\r\n      ),\r\n    }))\r\n    .reduce((a, b) => ({ ...a, ...b }), {});\r\n}\r\nexport function getLabelsByTableId(tableIds, nanoidsByLabelIdByTableId) {\r\n  return tableIds\r\n    .map((tableId) => ({\r\n      [tableId]: Object.keys(nanoidsByLabelIdByTableId[tableId]).reduce(\r\n        (a, b) => {\r\n          return getGridLabels(tableId)[b]\r\n            ? [\r\n                ...a,\r\n                {\r\n                  ...getGridLabelProps(tableId, b),\r\n                  links:\r\n                    getGridLabelLinks(tableId, b) &&\r\n                    getGridLabelLinks(tableId, b).map(\r\n                      ({ connection, dependencies }) => ({\r\n                        connectionIdx: connection,\r\n                        connection:\r\n                          nanoidsByLabelIdByTableId[tableId][connection],\r\n                        dependencies: dependencies.map(\r\n                          (c) => nanoidsByLabelIdByTableId[tableId][c]\r\n                        ),\r\n                      })\r\n                    ),\r\n                  id: nanoidsByLabelIdByTableId[tableId][b],\r\n                },\r\n              ]\r\n            : [...a];\r\n        },\r\n        []\r\n      ),\r\n    }))\r\n    .reduce((a, b) => ({ ...a, ...b }), {});\r\n}\r\nexport function mapRowsToNanoidLabels(mObject, nanoidsByLabelIdByTableId) {\r\n  const tableIds = Object.keys(mObject);\r\n  return tableIds\r\n    .map((tableId) => ({\r\n      [tableId]: mObject[tableId].map(({ id, ...rest }) => {\r\n        const d = Object.keys(rest)\r\n          .map((idx) => ({\r\n            [nanoidsByLabelIdByTableId[tableId][idx]]: rest[idx],\r\n          }))\r\n          .reduce((a, b) => ({ ...a, ...b }), {});\r\n        return { id: id + \"\", ...d };\r\n      }),\r\n    }))\r\n    .reduce((a, b) => ({ ...a, ...b }), {});\r\n}\r\nexport function getTable(\r\n  mObject,\r\n  labelsByTableId,\r\n  meta,\r\n  addRow,\r\n  rowsByTableId\r\n) {\r\n  return Object.keys(mObject).map((tableId) => {\r\n    const tableRowsIds = rowsByTableId[tableId].map(({ id }) => id);\r\n    const labels = labelsByTableId[tableId].map((l) => l.id);\r\n    const selectedLabels = labelsByTableId[tableId]\r\n      .filter((l) => !l.hidden)\r\n      .map((l) => l.id);\r\n    const permaHiddenLabels = labelsByTableId[tableId]\r\n      .filter((l) => l.hidden)\r\n      .map((l) => l.id);\r\n    const nanoids = labelsByTableId[tableId].reduce(\r\n      (a, b) => ({ ...a, [b.idx]: b.id }),\r\n      {}\r\n    );\r\n    return {\r\n      id: tableId,\r\n      labels: labels,\r\n      sortedRowsIds: rowsByTableId[tableId].map(({ id }) => id),\r\n      rows: rowsByTableId[tableId].reduce(\r\n        (a, b) => ({ ...a, [b.id]: { ...b } }),\r\n        {}\r\n      ),\r\n      permaHiddenLabels,\r\n      selectedRows: getGridWidgets(tableId).massEdit ? tableRowsIds : [],\r\n      selectedLabels: selectedLabels,\r\n      nanoids: nanoids,\r\n      addRow: { [addRow[tableId].id]: addRow[tableId] },\r\n      memory: {},\r\n      ...meta,\r\n    };\r\n  });\r\n}\r\nexport function updateTableRows(mObject, meta, rowsByTableId) {\r\n  return Object.keys(mObject).map((tableId) => {\r\n    return {\r\n      id: tableId,\r\n      sortedRowsIds: rowsByTableId[tableId].map(({ id }) => id),\r\n      rows: rowsByTableId[tableId].reduce(\r\n        (a, b) => ({ ...a, [b.id]: { ...b } }),\r\n        {}\r\n      ),\r\n      ...meta,\r\n    };\r\n  });\r\n}\r\nexport function mapPromiseData(data, entityId) {\r\n  return entityId === \"vacationsOverview\"\r\n    ? { [entityId]: [{ id: nanoid(), ...data }] }\r\n    : entityId === \"upcomingVacations\"\r\n    ? { [entityId]: Object.values(data) }\r\n    : entityId === \"settingsVehicle\"\r\n    ? {\r\n        [entityId]:\r\n          data?.length && data[0].values && data[0].values[0]\r\n            ? JSON.parse(data[0].values[0]).map((e) => ({\r\n                id: nanoid(),\r\n                vehicle: e,\r\n              }))\r\n            : [],\r\n      }\r\n    : entityId === \"settingsWorkPlant\"\r\n    ? {\r\n        [entityId]:\r\n          data?.length && data[0].values && data[0].values[0]\r\n            ? JSON.parse(data[0].values[0]).map((e) => ({\r\n                id: nanoid(),\r\n                workPlant: e,\r\n              }))\r\n            : [],\r\n      }\r\n    : entityId === \"settingsDischargeType\"\r\n    ? {\r\n        [entityId]:\r\n          data?.length && data[0].values && data[0].values[0]\r\n            ? JSON.parse(data[0]?.values[0]).map((e) => ({\r\n                id: nanoid(),\r\n                dischargeType: e,\r\n              }))\r\n            : [],\r\n      }\r\n    : entityId === \"users\"\r\n    ? {\r\n        [entityId]: data.map((u) => ({\r\n          ...u,\r\n          id: u.uid,\r\n          vehicle: u.claims.vehicle || \"\",\r\n          workPlant: u.claims.workPlant || \"\",\r\n          vacationDays: u.claims.vacationDays || \"\",\r\n        })),\r\n      }\r\n    : { [entityId]: Object.values(data) };\r\n}\r\n\r\nexport function calcSort(oldSort, id) {\r\n  return oldSort && oldSort.id === id\r\n    ? oldSort.order === \"asc\"\r\n      ? { id, order: \"desc\" }\r\n      : { id }\r\n    : { id, order: \"asc\" };\r\n}\r\nexport function sortToUrl(sort, initialSort) {\r\n  return sort && sort.order\r\n    ? \"&sort=\" + sort.id + \",\" + sort.order\r\n    : (initialSort &&\r\n        initialSort.id &&\r\n        initialSort.order &&\r\n        \"&sort=\" + initialSort.id + \",\" + initialSort.order) ||\r\n        \"\";\r\n}\r\nexport function sortToUrl2(sort, initialSort) {\r\n  return sort && sort.order\r\n    ? \"&_sort=\" + sort.id + \"&_order=\" + sort.order\r\n    : (initialSort &&\r\n        \"&_sort=\" + initialSort.id + \"&_order=\" + initialSort.order) ||\r\n        \"\";\r\n}\r\n\r\nexport function calcFilters(oldFilters, { label, value, action, gte, lte }) {\r\n  return oldFilters && oldFilters[label]\r\n    ? action === \"toggle\"\r\n      ? oldFilters[label].neq && oldFilters[label].neq.includes(value[0])\r\n        ? {\r\n            ...oldFilters,\r\n            [label]: {\r\n              ...oldFilters[label],\r\n              neq: oldFilters[label].neq.filter((e) => e !== value[0]),\r\n            },\r\n          }\r\n        : {\r\n            ...oldFilters,\r\n            [label]: {\r\n              ...oldFilters[label],\r\n              neq: [...oldFilters[label].neq, value[0]],\r\n            },\r\n          }\r\n      : action === \"toggleAll\"\r\n      ? {\r\n          ...oldFilters,\r\n          [label]: {\r\n            ...oldFilters[label],\r\n            neq:\r\n              oldFilters[label].neq &&\r\n              oldFilters[label].neq.length === value.length\r\n                ? []\r\n                : value,\r\n          },\r\n        }\r\n      : { ...oldFilters, [label]: { gte, lte } }\r\n    : { ...oldFilters, [label]: { neq: value && [...value], gte, lte } };\r\n}\r\nexport function filtersToUrl(filters, initialFilters) {\r\n  const url = filters\r\n    ? Object.entries(filters).reduce((a, b) => {\r\n        const idx = b[0];\r\n        const { neq, gte, lte, eq } = b[1];\r\n\r\n        const eqLink =\r\n          eq && eq.length !== 0\r\n            ? \"&\" + idx + \"=\" + eq.join(\",\")\r\n            : (initialFilters &&\r\n                initialFilters[idx] &&\r\n                initialFilters[idx].eq &&\r\n                initialFilters[idx].eq.length !== 0 &&\r\n                \"&\" + idx + \"=\" + initialFilters[idx].eq.join(\",\")) ||\r\n              \"\";\r\n        const neqLink =\r\n          neq && neq.length !== 0\r\n            ? \"&\" + idx + \"_ne=\" + neq.join(\",\")\r\n            : (initialFilters &&\r\n                initialFilters[idx] &&\r\n                initialFilters[idx].neq &&\r\n                initialFilters[idx].neq.length !== 0 &&\r\n                \"&\" + idx + \"_ne=\" + initialFilters[idx].neq.join(\",\")) ||\r\n              \"\";\r\n        const gteLink = gte\r\n          ? \"&\" + idx + \"_gte=\" + gte\r\n          : (initialFilters &&\r\n              initialFilters[idx] &&\r\n              initialFilters[idx].gte &&\r\n              \"&\" + idx + \"_gte=\" + initialFilters[idx].gte) ||\r\n            \"\";\r\n        const lteLink = lte\r\n          ? \"&\" + idx + \"_lte=\" + lte\r\n          : (initialFilters &&\r\n              initialFilters[idx] &&\r\n              initialFilters[idx].lte &&\r\n              \"&\" + idx + \"_lte=\" + initialFilters[idx].lte) ||\r\n            \"\";\r\n        return a + eqLink + neqLink + gteLink + lteLink;\r\n      }, \"\")\r\n    : \"\";\r\n  return url !== \"\" ? url.substring(1, url.length) : url;\r\n}\r\n\r\nexport function parsePagination({ res, page, limit }) {\r\n  return {\r\n    rowsCount: res.totalElements,\r\n    page: page + 1,\r\n    limit,\r\n    pagesCount: res.totalPages - 1,\r\n  };\r\n}\r\nexport function parseJsonServerPagination({ res, page, limit }) {\r\n  return {\r\n    paginationLinks:\r\n      res.headers.get(\"Link\") && parseLinkHeader(res.headers.get(\"Link\")),\r\n    rowsCount: res.headers.get(\"X-Total-Count\"),\r\n    page,\r\n    limit,\r\n    pagesCount: Math.ceil(res.headers.get(\"X-Total-Count\") / limit),\r\n  };\r\n}\r\nexport function parseLinkHeader(linkHeader) {\r\n  const linkHeadersArray = linkHeader\r\n    .split(\", \")\r\n    .map((header) => header.split(\"; \"));\r\n  const linkHeadersMap = linkHeadersArray.map((header) => {\r\n    const thisHeaderRel = header[1].replace(/\"/g, \"\").replace(\"rel=\", \"\");\r\n    const thisHeaderUrl = header[0].slice(1, -1);\r\n    return [thisHeaderRel, thisHeaderUrl];\r\n  });\r\n  return Object.fromEntries(linkHeadersMap);\r\n}\r\n","import {\r\n  configureStore,\r\n  createAsyncThunk,\r\n  createEntityAdapter,\r\n  createSlice,\r\n} from \"@reduxjs/toolkit\";\r\nimport {\r\n  calcFilters,\r\n  calcSort,\r\n  filtersToUrl,\r\n  mapPromiseData,\r\n  normalizeApi,\r\n  normalizeInitApi,\r\n  parsePagination,\r\n  sortToUrl,\r\n} from \"../../api/apiMappers\";\r\nimport {\r\n  getGridDeleteMapper,\r\n  getGridLabelFn,\r\n  getGridPostMapper,\r\n  getGridUrl,\r\n} from \"../myComponents/util/labels\";\r\n\r\nconst API = process.env.REACT_APP_API_URL;\r\n\r\nfunction createGenericSlice(sliceName) {\r\n  const metaAdapter = createEntityAdapter();\r\n  const usersAdapter = createEntityAdapter();\r\n  const tablesAdapter = createEntityAdapter();\r\n  const datesAdapter = createEntityAdapter();\r\n  const labelsAdapter = createEntityAdapter();\r\n  const changesAdapter = createEntityAdapter();\r\n  const modesAdapter = createEntityAdapter();\r\n  const filtersAdapter = createEntityAdapter();\r\n\r\n  const metaSelector = metaAdapter.getSelectors(\r\n    (state) => state[sliceName].meta\r\n  );\r\n  const usersSelector = usersAdapter.getSelectors(\r\n    (state) => state[sliceName].users\r\n  );\r\n  const tablesSelector = tablesAdapter.getSelectors(\r\n    (state) => state[sliceName].tables\r\n  );\r\n  const datesSelector = datesAdapter.getSelectors(\r\n    (state) => state[sliceName].dates\r\n  );\r\n  const labelsSelector = labelsAdapter.getSelectors(\r\n    (state) => state[sliceName].labels\r\n  );\r\n  const changesSelector = changesAdapter.getSelectors(\r\n    (state) => state[sliceName].changes\r\n  );\r\n  const modesSelector = modesAdapter.getSelectors(\r\n    (state) => state[sliceName].modes\r\n  );\r\n  const filtersSelector = filtersAdapter.getSelectors(\r\n    (state) => state[sliceName].filters\r\n  );\r\n\r\n  const modesSelectById = (state, id) =>\r\n    modesAdapter.getSelectors().selectById(state.modes, id);\r\n  const tablesSelectById = (state, id) =>\r\n    tablesAdapter.getSelectors().selectById(state.tables, id);\r\n  const labelsSelectById = (state, id) =>\r\n    labelsAdapter.getSelectors().selectById(state.labels, id);\r\n  const changesSelectById = (state, id) =>\r\n    changesAdapter.getSelectors().selectById(state.changes, id);\r\n\r\n  const fetchUpdatedEntity = createAsyncThunk(\r\n    \"data/fetchUpdatedEntity\",\r\n    async (\r\n      {\r\n        entityId,\r\n        filters: addFilters,\r\n        initialFilters: addInitialFilters,\r\n        initialSort: addInitialSort,\r\n        header,\r\n        ...meta\r\n      },\r\n      thunkAPI\r\n    ) => {\r\n      const state = thunkAPI.getState();\r\n      const { sort, filters, initialFilters, initialSort, pagination } =\r\n        tablesAdapter\r\n          .getSelectors()\r\n          .selectById(state[sliceName].tables, entityId);\r\n\r\n      const page = 0;\r\n      const limit = pagination?.limit;\r\n      const newFilters = { ...filters };\r\n      const newInitialFilters = {\r\n        ...initialFilters,\r\n        ...addInitialFilters,\r\n      };\r\n      const newInitialSort = {\r\n        ...initialSort,\r\n        ...addInitialSort,\r\n      };\r\n      const filterLink = filtersToUrl({\r\n        ...initialFilters,\r\n        ...newInitialFilters,\r\n      });\r\n      const sortLink = sortToUrl(sort, newInitialSort);\r\n      const url = getGridUrl(entityId);\r\n\r\n      const pageSuffix =\r\n        page !== null && page !== undefined && limit\r\n          ? \"&page=\" + page + \"&size=\" + limit\r\n          : \"\";\r\n      const urlSuffix = filterLink + sortLink + pageSuffix;\r\n      const finalUrl = url + (urlSuffix.trim() !== \"\" ? \"?\" + urlSuffix : \"\");\r\n\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        headers: header,\r\n      };\r\n      return await fetch(finalUrl, requestOptions).then((res) =>\r\n        res.json().then(({ data }) => {\r\n          return {\r\n            data: data.content || data,\r\n            entityId,\r\n            initialSort: newInitialSort,\r\n            initialFilters: newInitialFilters,\r\n            filters: newFilters,\r\n            pagination:\r\n              page !== null &&\r\n              page !== undefined &&\r\n              limit &&\r\n              parsePagination({ res: data, page, limit }),\r\n            ...meta,\r\n            ...meta,\r\n          };\r\n        })\r\n      );\r\n    }\r\n  );\r\n  const fetchAndInitEntityGrid = createAsyncThunk(\r\n    \"data/fetchAndInitEntityGrid\",\r\n    async (\r\n      {\r\n        entityId,\r\n        url,\r\n        page,\r\n        limit,\r\n        initialFilters,\r\n        initialSort,\r\n        header,\r\n        ...meta\r\n      },\r\n      thunkAPI\r\n    ) => {\r\n      const state = thunkAPI.getState();\r\n      const newInitialFilters = {\r\n        ...tablesAdapter\r\n          .getSelectors()\r\n          .selectById(state[sliceName].tables, entityId).initialFilters,\r\n        ...initialFilters,\r\n      };\r\n      const newInitialSort = {\r\n        ...tablesAdapter\r\n          .getSelectors()\r\n          .selectById(state[sliceName].tables, entityId).initialSort,\r\n        ...initialSort,\r\n      };\r\n      const filterLink = filtersToUrl(newInitialFilters);\r\n      const sortLink = sortToUrl(newInitialSort);\r\n      const pageSuffix =\r\n        page !== null && page !== undefined && limit\r\n          ? \"&page=\" + page + \"&size=\" + limit\r\n          : \"\";\r\n      const urlSuffix = filterLink + sortLink + pageSuffix;\r\n      const finalUrl = url + (urlSuffix.trim() !== \"\" ? \"?\" + urlSuffix : \"\");\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        headers: header,\r\n      };\r\n      return await fetch(finalUrl, requestOptions)\r\n        .then((res) =>\r\n          res.json().then(({ data, status }) => {\r\n            if (status !== 200)\r\n              throw new Error(\"stop the work, this has been aborted!\");\r\n            return {\r\n              data: data.content || data,\r\n              entityId,\r\n              initialFilters: newInitialFilters,\r\n              initialSort: newInitialSort,\r\n              pagination:\r\n                page !== null &&\r\n                page !== undefined &&\r\n                limit &&\r\n                parsePagination({ res: data, page, limit }),\r\n              ...meta,\r\n            };\r\n          })\r\n        )\r\n        .catch(() => ({\r\n          data: [],\r\n          entityId,\r\n        }));\r\n    }\r\n  );\r\n  const fetchMeta = createAsyncThunk(\r\n    \"data/fetchMeta\",\r\n    async ({ header, labels }) => {\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        headers: header,\r\n      };\r\n      return await fetch(API + \"settings\", requestOptions).then((res) =>\r\n        res.json().then(({ status, data }) => {\r\n          if (status !== 200)\r\n            throw new Error(\"stop the work, this has been aborted!\");\r\n          return { data, labels };\r\n        })\r\n      );\r\n    }\r\n  );\r\n  const fetchDrivers = createAsyncThunk(\"data/fetchDrivers\", async (header) => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: header,\r\n    };\r\n    return await fetch(API + \"users/byRole/ROLE_DRIVER\", requestOptions).then(\r\n      (r) =>\r\n        r.json().then(({ status, data }) => {\r\n          if (status !== 200)\r\n            throw new Error(\"stop the work, this has been aborted!\");\r\n          return data;\r\n        })\r\n    );\r\n  });\r\n  const fetchUsers = createAsyncThunk(\"data/fetchUsers\", async (header) => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: header,\r\n    };\r\n    return await fetch(API + \"users\", requestOptions).then((res) =>\r\n      res.json().then(({ data }) => data)\r\n    );\r\n  });\r\n  const postRows = createAsyncThunk(\r\n    \"data/postRows\",\r\n    async ({ entityId, header }, thunkAPI) => {\r\n      const { url, options } = getGridPostMapper({\r\n        entityId,\r\n        state: thunkAPI.getState(),\r\n        tablesSelector,\r\n        labelsSelector,\r\n        changesSelector,\r\n        metaSelector,\r\n      });\r\n      const requestOptions = {\r\n        headers: header,\r\n        ...options,\r\n      };\r\n      return await fetch(url, requestOptions).then((res) => res.json());\r\n    }\r\n  );\r\n  const deleteRows = createAsyncThunk(\r\n    \"data/deleteRows\",\r\n    async ({ entityId, header }, thunkAPI) => {\r\n      const { url, options } = getGridDeleteMapper({\r\n        entityId,\r\n        state: thunkAPI.getState(),\r\n        tablesSelector,\r\n        labelsSelector,\r\n        changesSelector,\r\n        metaSelector,\r\n      });\r\n      const requestOptions = {\r\n        headers: header,\r\n        ...options,\r\n      };\r\n      return await fetch(url, requestOptions).then((res) => res.json());\r\n    }\r\n  );\r\n  const fetchPage = createAsyncThunk(\r\n    \"data/fetchUpdatedEntity\",\r\n    async ({ entityId, page = \"1\", header }, thunkAPI) => {\r\n      const state = thunkAPI.getState();\r\n      const {\r\n        sort,\r\n        filters,\r\n        initialFilters,\r\n        initialSort,\r\n        pagination: { limit },\r\n      } = tablesAdapter\r\n        .getSelectors()\r\n        .selectById(state[sliceName].tables, entityId);\r\n      const filterLink = filtersToUrl(\r\n        { ...initialFilters, ...filters },\r\n        initialFilters\r\n      );\r\n      const url = getGridUrl(entityId);\r\n      const sortLink = sortToUrl(sort, initialSort);\r\n      const realPage = page && parseInt(page) - 1 > 0 ? parseInt(page) - 1 : 0;\r\n      const pageSuffix =\r\n        page !== null && page !== undefined && limit\r\n          ? \"&page=\" + page + \"&size=\" + limit\r\n          : \"\";\r\n      const urlSuffix = filterLink + sortLink + pageSuffix;\r\n      const finalUrl = url + \"?\" + urlSuffix;\r\n\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        headers: header,\r\n      };\r\n      return await fetch(finalUrl, requestOptions)\r\n        .then((res) =>\r\n          res.json().then(({ data }) => {\r\n            return {\r\n              data: data.content || data,\r\n              entityId,\r\n              filters,\r\n              initialFilters,\r\n              pagination:\r\n                page !== null &&\r\n                page !== undefined &&\r\n                limit &&\r\n                parsePagination({ res: data, page: page, limit }),\r\n              // url,\r\n              sort,\r\n              selectedRows: [],\r\n            };\r\n          })\r\n        )\r\n        .catch(() => ({\r\n          data: [],\r\n          entityId,\r\n        }));\r\n    }\r\n  );\r\n  const fetchFiltered = createAsyncThunk(\r\n    \"data/fetchUpdatedEntity\",\r\n    async (\r\n      { entityId, filter: { label, value, action, gte, lte }, header },\r\n      thunkAPI\r\n    ) => {\r\n      const state = thunkAPI.getState();\r\n      const { filters, sort, initialFilters, initialSort, pagination } =\r\n        tablesAdapter\r\n          .getSelectors()\r\n          .selectById(state[sliceName].tables, entityId);\r\n      const url = getGridUrl(entityId);\r\n      const page = 0;\r\n      const limit = pagination?.limit;\r\n      const idx =\r\n        label &&\r\n        tablesAdapter.getSelectors().selectById(state[sliceName].labels, label)\r\n          .idx;\r\n      const newFilters =\r\n        action === \"resetAll\"\r\n          ? null\r\n          : calcFilters(filters, {\r\n              label: idx,\r\n              value:\r\n                action !== \"toggleAll\"\r\n                  ? [value]\r\n                  : idx === \"driver\"\r\n                  ? metaAdapter\r\n                      .getSelectors()\r\n                      .selectById(state[sliceName].meta, \"drivers\")\r\n                      .drivers?.map((v) => v.uid)\r\n                  : metaAdapter\r\n                      .getSelectors()\r\n                      .selectById(state[sliceName].meta, \"settings\") &&\r\n                    metaAdapter\r\n                      .getSelectors()\r\n                      .selectById(state[sliceName].meta, \"settings\")[idx],\r\n\r\n              gte,\r\n              lte,\r\n              action,\r\n            });\r\n      const filterLink = filtersToUrl(\r\n        { ...initialFilters, ...newFilters },\r\n        initialFilters\r\n      );\r\n      const sortLink = sortToUrl(sort, initialSort);\r\n\r\n      const pageSuffix =\r\n        page !== null && page !== undefined && limit\r\n          ? \"&page=\" + page + \"&size=\" + limit\r\n          : \"\";\r\n      const urlSuffix = filterLink + sortLink + pageSuffix;\r\n      const finalUrl = url + (urlSuffix.trim() !== \"\" ? \"?\" + urlSuffix : \"\");\r\n\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        headers: header,\r\n      };\r\n      return await fetch(finalUrl, requestOptions).then((res) =>\r\n        res.json().then(({ data }) => {\r\n          return {\r\n            data: data.content || data,\r\n            entityId,\r\n            filters: newFilters,\r\n            initialFilters,\r\n            pagination:\r\n              page !== null &&\r\n              page !== undefined &&\r\n              limit &&\r\n              parsePagination({ res: data, page, limit }),\r\n            url,\r\n            sort,\r\n          };\r\n        })\r\n      );\r\n    }\r\n  );\r\n  const fetchSortedEntityGrid = createAsyncThunk(\r\n    \"data/fetchUpdatedEntity\",\r\n    async ({ entityId, labelId, header }, thunkAPI) => {\r\n      const state = thunkAPI.getState();\r\n\r\n      const { filters, sort, initialFilters, initialSort, pagination } =\r\n        tablesAdapter\r\n          .getSelectors()\r\n          .selectById(state[sliceName].tables, entityId);\r\n      const page = pagination?.page;\r\n      const limit = pagination?.limit;\r\n      const url = getGridUrl(entityId);\r\n      const filterLink = filtersToUrl(\r\n        { ...initialFilters, ...filters },\r\n        initialFilters\r\n      );\r\n      const { idx } = tablesAdapter\r\n        .getSelectors()\r\n        .selectById(state[sliceName].labels, labelId);\r\n      const calculatedSort = calcSort(sort, idx);\r\n      const sortLink = sortToUrl(calculatedSort, initialSort);\r\n      const { id, order } = calculatedSort;\r\n\r\n      const pageSuffix =\r\n        page !== null && page !== undefined && limit\r\n          ? \"&page=\" + (parseInt(page) - 1) + \"&size=\" + limit\r\n          : \"\";\r\n      const urlSuffix = filterLink + sortLink + pageSuffix;\r\n      const finalUrl = url + (urlSuffix.trim() !== \"\" ? \"?\" + urlSuffix : \"\");\r\n\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        headers: header,\r\n      };\r\n      return await fetch(finalUrl, requestOptions)\r\n        .then((res) =>\r\n          res.json().then(({ data }) => {\r\n            return {\r\n              data: data.content || data,\r\n              entityId,\r\n              filters,\r\n              initialFilters,\r\n              initialSort,\r\n              pagination:\r\n                page !== null &&\r\n                page !== undefined &&\r\n                limit &&\r\n                parsePagination({ res: data, page: parseInt(page) - 1, limit }),\r\n              url,\r\n              sort: order && { id, order },\r\n            };\r\n          })\r\n        )\r\n        .catch((e) => ({\r\n          data: [],\r\n          entityId,\r\n          initialFilters,\r\n          initialSort,\r\n          filters,\r\n          url,\r\n          pagination: { page, limit, rowsCount: 0, pagesCount: 0 },\r\n          sort:\r\n            order !== \"\" &&\r\n            (order !== \"initial\" ? { id: idx, order } : { ...initialSort }),\r\n        }));\r\n    }\r\n  );\r\n  const slice = createSlice({\r\n    name: sliceName,\r\n    initialState: {\r\n      meta: metaAdapter.getInitialState(),\r\n      tables: tablesAdapter.getInitialState(),\r\n      // rows: rowsAdapter.getInitialState(),\r\n      dates: datesAdapter.getInitialState(),\r\n      labels: labelsAdapter.getInitialState(),\r\n      changes: changesAdapter.getInitialState(),\r\n      modes: modesAdapter.getInitialState(),\r\n      filters: filtersAdapter.getInitialState(),\r\n      users: usersAdapter.getInitialState(),\r\n    },\r\n    extraReducers: {\r\n      [fetchMeta.fulfilled](state, { payload: { data, labels } }) {\r\n        state.loading = false;\r\n        const d = data?.reduce((a, b) => ({ ...a, [b.id]: b.values }), {});\r\n        const g = (labels || Object.keys(d)).reduce(\r\n          (a, l) => ({ ...a, [l]: JSON.parse(d[l]) }),\r\n          {}\r\n        );\r\n        metaAdapter.upsertOne(state.meta, { id: \"settings\", ...g });\r\n      },\r\n      [fetchDrivers.fulfilled](state, { payload }) {\r\n        state.loading = false;\r\n        const drivers =\r\n          payload\r\n            .map(({ name, email, uid }) => ({\r\n              name,\r\n              email,\r\n              uid,\r\n            }))\r\n            .sort((a, b) =>\r\n              (a.name || a.email).localeCompare(b.name || b.email)\r\n            ) || [];\r\n        metaAdapter.upsertOne(state.meta, { id: \"drivers\", drivers });\r\n      },\r\n      [fetchUsers.fulfilled](state, { payload }) {\r\n        state.loading = false;\r\n        payload &&\r\n          usersAdapter.setMany(\r\n            state.users,\r\n            payload.map((user) => ({ id: user.uid, ...user }))\r\n          );\r\n      },\r\n      [fetchAndInitEntityGrid.pending](\r\n        state,\r\n        {\r\n          meta: {\r\n            arg: { entityId },\r\n          },\r\n        }\r\n      ) {\r\n        tablesAdapter.upsertOne(state.tables, { id: entityId, loading: true });\r\n      },\r\n      [fetchAndInitEntityGrid.fulfilled](state, { payload }) {\r\n        const { data, entityId, ...meta } = payload;\r\n        console.log(\"fullfiled\", entityId);\r\n        const mapped = mapPromiseData(data, entityId);\r\n\r\n        const drivers = meta?.drivers;\r\n        const { tables, labels, modes } = normalizeInitApi({\r\n          data: mapped,\r\n          meta: { ...meta, loading: false },\r\n          drivers,\r\n        });\r\n\r\n        tablesAdapter.setMany(state.tables, tables);\r\n        labelsAdapter.setMany(state.labels, labels);\r\n        modesAdapter.setMany(state.modes, modes);\r\n        state.loading = false;\r\n      },\r\n      [fetchUpdatedEntity.fulfilled](state, { payload }) {\r\n        const { data, entityId, ...meta } = payload;\r\n        console.log(\"fullfiled\", entityId);\r\n        const mapped = mapPromiseData(data, entityId);\r\n        const drivers = metaAdapter\r\n          .getSelectors()\r\n          .selectById(state.meta, \"drivers\");\r\n        const { tables, modes } = normalizeApi({\r\n          data: mapped,\r\n          meta: { ...meta, loading: false },\r\n          drivers: drivers?.drivers,\r\n        });\r\n\r\n        tablesAdapter.upsertMany(state.tables, tables);\r\n        modesAdapter.upsertMany(state.modes, modes);\r\n        state.loading = false;\r\n      },\r\n      [postRows.fulfilled](state, { meta: { arg } }) {\r\n        state.loading = false;\r\n        console.log(\"post done\", arg);\r\n        const { changes, addRow } = tablesSelectById(state, arg.entityId);\r\n        tablesAdapter.upsertOne(state.tables, {\r\n          id: arg.entityId,\r\n          changes: [],\r\n        });\r\n        changesAdapter.removeMany(state.changes, [...changes, addRow]);\r\n        const selectedLabels = tablesSelectById(state, arg.entityId).memory\r\n          ?.selectedLabels;\r\n        tablesAdapter.upsertOne(state.tables, {\r\n          id: arg.entityId,\r\n          memory: { selectedLabels: [] },\r\n        });\r\n        tablesAdapter.upsertOne(state.tables, {\r\n          id: arg.entityId,\r\n          selectedLabels,\r\n        });\r\n\r\n        modesAdapter.upsertOne(state.modes, {\r\n          id: arg.entityId,\r\n          value: false,\r\n        });\r\n      },\r\n      [deleteRows.fulfilled](state, { meta: { arg } }) {\r\n        state.loading = false;\r\n        const { changes, selectedRows } = tablesSelectById(state, arg.entityId);\r\n        const table = {\r\n          id: arg.entityId,\r\n          selectedRows: [],\r\n          changes:\r\n            changes && changes.filter((id) => !selectedRows.includes(id)),\r\n        };\r\n        tablesAdapter.upsertOne(state.tables, table);\r\n        modesAdapter.upsertOne(state.modes, {\r\n          id: arg.entityId,\r\n          value: false,\r\n        });\r\n      },\r\n    },\r\n    reducers: {\r\n      addInitialFilter: (state, action) => {\r\n        const { id, filter } = action.payload;\r\n        const oldInitialFilters = tablesSelectById(state, id).initialFilters;\r\n        tablesAdapter.upsertOne(state.tables, {\r\n          id,\r\n          initialFilters: { ...oldInitialFilters, ...filter },\r\n        });\r\n      },\r\n      changeCurrentUser: (state, action) => {\r\n        metaAdapter.upsertOne(state.meta, {\r\n          id: \"user\",\r\n          value: action.payload,\r\n        });\r\n      },\r\n      toggleColumn: (state, action) => {\r\n        const { id, columnId } = action.payload;\r\n        const oldValues = tablesSelectById(state, id).selectedLabels;\r\n        const mode = modesSelectById(state, id).value;\r\n        mode === \"addRow\" &&\r\n          modesAdapter.upsertOne(state.modes, { id, value: \"idle\" });\r\n        const newValue = oldValues.includes(columnId)\r\n          ? oldValues.filter((v) => v !== columnId)\r\n          : [...oldValues, columnId];\r\n        tablesAdapter.upsertOne(state.tables, { id, selectedLabels: newValue });\r\n      },\r\n      changeMode: (state, action) => {\r\n        const { entityId, mode } = action.payload;\r\n        const oldValue = modesSelectById(state, entityId).value;\r\n        if (mode === \"edit\" || mode === \"addRow\") {\r\n          const labels = tablesSelectById(state, entityId).labels;\r\n          const selectedLabels = tablesSelectById(\r\n            state,\r\n            entityId\r\n          ).selectedLabels;\r\n          tablesAdapter.upsertOne(state.tables, {\r\n            id: entityId,\r\n            memory: { selectedLabels: selectedLabels },\r\n          });\r\n          tablesAdapter.upsertOne(state.tables, {\r\n            id: entityId,\r\n            selectedLabels: labels,\r\n          });\r\n        } else {\r\n          const selectedLabels = tablesSelectById(state, entityId).memory\r\n            ?.selectedLabels;\r\n          tablesAdapter.upsertOne(state.tables, {\r\n            id: entityId,\r\n            memory: { selectedLabels: [] },\r\n          });\r\n          tablesAdapter.upsertOne(state.tables, {\r\n            id: entityId,\r\n            selectedLabels,\r\n          });\r\n        }\r\n        modesAdapter.upsertOne(state.modes, {\r\n          id: entityId,\r\n          value:\r\n            mode === \"edit\" ? (oldValue === \"edit\" ? \"idle\" : \"edit\") : mode,\r\n        });\r\n      },\r\n      toggleAllChecked: (state, action) => {\r\n        const id = action.payload;\r\n        console.log(\"ToggleAll\", id);\r\n\r\n        const oldSelectedRows = tablesSelectById(state, id).selectedRows;\r\n        const allRows = Object.keys(tablesSelectById(state, id).rows);\r\n        const newSelectedRows =\r\n          ((!oldSelectedRows ||\r\n            (oldSelectedRows.length >= 0 &&\r\n              oldSelectedRows.length < allRows.length)) &&\r\n            allRows) ||\r\n          [];\r\n        tablesAdapter.updateOne(state.tables, {\r\n          id,\r\n          changes: {\r\n            selectedRows: newSelectedRows,\r\n          },\r\n        });\r\n      },\r\n      closeAllChecked: (state, action) => {\r\n        const id = action.payload;\r\n        tablesAdapter.updateOne(state.tables, {\r\n          id,\r\n          changes: {\r\n            selectedRows: [],\r\n          },\r\n        });\r\n      },\r\n      setSelectedRows: (state, action) => {\r\n        const { id, rows } = action.payload;\r\n        tablesAdapter.updateOne(state.tables, {\r\n          id,\r\n          changes: {\r\n            selectedRows: rows,\r\n          },\r\n        });\r\n      },\r\n      onSelectRow: (state, action) => {\r\n        const { id, rowId } = action.payload;\r\n        const oldSelectedRows = tablesSelectById(state, id).selectedRows;\r\n        const newV = oldSelectedRows.includes(rowId)\r\n          ? oldSelectedRows.filter((r) => r !== rowId)\r\n          : [...oldSelectedRows, rowId];\r\n        tablesAdapter.updateOne(state.tables, {\r\n          id,\r\n          changes: {\r\n            selectedRows: newV,\r\n          },\r\n        });\r\n      },\r\n      addChange: (state, action) => {\r\n        const {\r\n          id,\r\n          rowId,\r\n          changes: { labelId, value },\r\n        } = action.payload;\r\n\r\n        const oldChangesIds = tablesSelectById(state, id).changes || [];\r\n        const newChanges = oldChangesIds.includes(rowId)\r\n          ? oldChangesIds\r\n          : oldChangesIds.concat(rowId);\r\n\r\n        const oldChanges = changesSelectById(state, rowId);\r\n        // const oldRow = rowsSelectById(state, rowId);\r\n        const oldRow = tablesSelectById(state, id).rows[rowId];\r\n        const newRow = { ...oldRow, ...oldChanges };\r\n        const { links = [], idx } = labelsSelectById(state, labelId);\r\n        const changesById = {\r\n          [labelId]: value,\r\n          ...links.reduce((a, { connection, connectionIdx, dependencies }) => {\r\n            const format = getGridLabelFn(id, connectionIdx);\r\n            return {\r\n              ...a,\r\n              [connection]: format([\r\n                null,\r\n                ...dependencies.map((d) => {\r\n                  return d === labelId ? value : newRow[d];\r\n                }),\r\n              ]),\r\n            };\r\n          }, {}),\r\n        };\r\n        tablesAdapter.upsertOne(state.tables, {\r\n          id,\r\n          changes: newChanges,\r\n        });\r\n        changesAdapter.upsertOne(state.changes, {\r\n          id: rowId,\r\n          ...changesById,\r\n        });\r\n      },\r\n      resetChanges: (state, action) => {\r\n        const id = action.payload;\r\n        const changesIds = tablesSelectById(state, id).changes || [];\r\n        changesAdapter.removeMany(state.changes, changesIds);\r\n        tablesAdapter.upsertOne(state.tables, { id, changes: [] });\r\n      },\r\n\r\n      addMeta: (state, action) => {\r\n        metaAdapter.upsertMany(state.meta, action.payload);\r\n      },\r\n      addTableDate: (state, action) => {\r\n        const { id, date } = action.payload;\r\n        tablesAdapter.upsertOne(state.tables, { id, date });\r\n      },\r\n      clearTables: (state) => {\r\n        tablesAdapter.removeAll(state.tables);\r\n        labelsAdapter.removeAll(state.tables);\r\n        changesAdapter.removeAll(state.changes);\r\n        modesAdapter.removeAll(state.modes);\r\n      },\r\n    },\r\n  });\r\n\r\n  return {\r\n    slice,\r\n    selectors: {\r\n      tablesSelector,\r\n      labelsSelector,\r\n      // rowsSelector,\r\n      datesSelector,\r\n      changesSelector,\r\n      modesSelector,\r\n      filtersSelector,\r\n      usersSelector,\r\n      metaSelector,\r\n    },\r\n    reducer: slice.reducer,\r\n    actions: {\r\n      ...slice.actions,\r\n      fetchUsers,\r\n      fetchMeta,\r\n      fetchDrivers,\r\n      fetchAndInitEntityGrid,\r\n      fetchUpdatedEntity,\r\n      fetchSortedEntityGrid,\r\n      fetchPage,\r\n      fetchFiltered,\r\n      postRows,\r\n      deleteRows,\r\n    },\r\n  };\r\n}\r\n\r\nexport const gridTableSlice = createGenericSlice(\"gridTable\");\r\n\r\nexport function createReduxStore() {\r\n  const store = configureStore({\r\n    reducer: {\r\n      gridTable: gridTableSlice.reducer,\r\n    },\r\n    devTools: window.__REDUX_DEVTOOLS_EXTENSION__?.(),\r\n  });\r\n  return store;\r\n}\r\n","import {\n  faEnvelope,\n  faPhone,\n  faPlus,\n  faUnlockAlt,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  InputGroup,\n  Row,\n} from \"@themesberg/react-bootstrap\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Alert } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport BgImage from \"../../assets/img/illustrations/signin.svg\";\nimport { useServices } from \"../myComponents/util/services\";\nimport { gridTableSlice } from \"../reducers/redux\";\nimport { useLoadData } from \"../../api/apiMappers\";\n\nconst useSettings = () => {\n  const { actions, selectors } = gridTableSlice;\n  const stateAPIStatus = useLoadData(\"settings\", actions);\n  const [availableValues, setAvailableValues] = useState();\n  const selectSettings = useCallback(\n    (state) => selectors.metaSelector.selectById(state, \"settings\") || [],\n    [selectors.metaSelector]\n  );\n  const settings = useSelector(selectSettings);\n  useEffect(() => {\n    if (stateAPIStatus === \"success\") {\n      setAvailableValues(settings);\n    }\n  }, [stateAPIStatus]);\n  return availableValues;\n};\n\nexport const AddUser = () => {\n  const availableValues = useSettings();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    getValues,\n    watch,\n    formState: { errors },\n  } = useForm();\n  const { registerUsers } = useServices();\n  async function onSubmit({ roles, ...rest }) {\n    // try {\n    setError(\"\");\n    setLoading(true);\n    registerUsers({ ...rest, roles: roles.split(\", \") || [] })\n      .then((data) => {\n        console.log(\"Successfully updated user\", data);\n      })\n      .catch((error) => {\n        console.log(\"Error updating user:\", error);\n      });\n    // navigate(\"/\");\n\n    setLoading(false);\n  }\n  useEffect(() => {\n    register(\"email\", { required: true });\n    register(\"name\", { required: true });\n    register(\"password\", { required: true });\n    register(\"phoneNumber\", { required: false });\n    register(\"roles\", { required: true });\n    setValue(\"password\", \"marmi1993\");\n  }, []);\n\n  return (\n    <main className=\"w-100\">\n      <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\n        <Container>\n          <Row\n            className=\"justify-content-center form-bg-image\"\n            style={{ backgroundImage: `url(${BgImage})` }}\n          >\n            {/* {availableValues?.driver && (\n              <Col\n                xs={2}\n                className=\"d-flex flex-wrap align-items-center justify-content-center bg-senary p-2\"\n                style={{ height: \"500px\", overflow: \"auto\" }}\n              >\n                {availableValues?.driver.map((d) => (\n                  <Button\n                    key={d}\n                    className=\"w-100 rounded-0\"\n                    onClick={() => {\n                      setValue(\"name\", d);\n                      setValue(\"email\", d.replaceAll(\" \", \".\") + \"@bt.de\");\n                      setValue(\"roles\", \"ROLE_USER, ROLE_DRIVER\");\n                      onSubmit(getValues());\n                    }}\n                  >\n                    {d}\n                  </Button>\n                ))}\n              </Col>\n            )} */}\n            <Col\n              xs={12}\n              className=\"d-flex align-items-center justify-content-center\"\n            >\n              <div className=\"mb-4 mb-lg-0 bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\n                <div className=\"text-center text-md-center mb-4 mt-md-0\">\n                  <h3 className=\"mb-0\">Create an account</h3>\n                </div>\n                {error && <Alert variant=\"danger\">{error}</Alert>}\n                <Form className=\"mt-4\" onSubmit={handleSubmit(onSubmit)}>\n                  <Form.Group id=\"name\" className=\"mb-3\">\n                    <Form.Label>Name</Form.Label>\n                    <InputGroup>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faUser} />\n                      </InputGroup.Text>\n                      <Form.Control\n                        required\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        value={watch(\"name\") || \"\"}\n                        onChange={(e) => setValue(\"name\", e.target.value)}\n                      />\n                    </InputGroup>\n                  </Form.Group>\n                  <Form.Group id=\"password\" className=\"mb-3\">\n                    <Form.Label>Password</Form.Label>\n                    <InputGroup>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faUnlockAlt} />\n                      </InputGroup.Text>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Password\"\n                        value={watch(\"password\") || \"\"}\n                        onChange={(e) => setValue(\"password\", e.target.value)}\n                      />\n                    </InputGroup>\n                  </Form.Group>\n                  <Form.Group id=\"email\" className=\"mb-3\">\n                    <Form.Label>Email</Form.Label>\n                    <InputGroup>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faEnvelope} />\n                      </InputGroup.Text>\n                      <Form.Control\n                        ref={emailRef}\n                        autoFocus\n                        required\n                        type=\"email\"\n                        placeholder=\"example@company.com\"\n                        value={watch(\"email\") || \"\"}\n                        onChange={(e) => setValue(\"email\", e.target.value)}\n                      />\n                      <Button\n                        className=\"generate\"\n                        disabled={!watch(\"name\")}\n                        onClick={() =>\n                          setValue(\n                            \"email\",\n                            watch(\"name\").replaceAll(\" \", \".\") + \"@bt.de\"\n                          )\n                        }\n                      >\n                        <FontAwesomeIcon icon={faPlus} />\n                      </Button>\n                    </InputGroup>\n                  </Form.Group>\n                  <Form.Group id=\"phone\" className=\"mb-3\">\n                    <Form.Label>Phone Number</Form.Label>\n                    <InputGroup>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faPhone} />\n                      </InputGroup.Text>\n                      <Form.Control\n                        value={watch(\"phone\") || \"\"}\n                        type=\"text\"\n                        placeholder=\"Phone Number\"\n                        onChange={(e) => setValue(\"phone\", e.target.value)}\n                      />\n                    </InputGroup>\n                  </Form.Group>\n                  <Form.Group id=\"roles\" className=\"mb-4\">\n                    <Form.Label>Roles</Form.Label>\n                    <div className=\"d-flex flex-nowrap w-100 justify-content-between text-center\">\n                      <Button\n                        className=\"col-3 p-1\"\n                        variant={\n                          watch(\"roles\")?.includes(\"ROLE_ADMIN\")\n                            ? \"senary\"\n                            : \"primary\"\n                        }\n                        onClick={() =>\n                          setValue(\n                            \"roles\",\n                            (watch(\"roles\") ? watch(\"roles\") + \", \" : \"\") +\n                              \"ROLE_ADMIN\"\n                          )\n                        }\n                      >\n                        Admin\n                      </Button>\n                      <Button\n                        className=\"col-3 p-1\"\n                        variant={\n                          watch(\"roles\")?.includes(\"ROLE_USER\")\n                            ? \"senary\"\n                            : \"primary\"\n                        }\n                        onClick={() =>\n                          setValue(\n                            \"roles\",\n                            (watch(\"roles\") ? watch(\"roles\") + \", \" : \"\") +\n                              \"ROLE_USER\"\n                          )\n                        }\n                      >\n                        User\n                      </Button>\n                      <Button\n                        className=\"col-3 p-1\"\n                        variant={\n                          watch(\"roles\")?.includes(\"ROLE_DRIVER\")\n                            ? \"senary\"\n                            : \"primary\"\n                        }\n                        onClick={() =>\n                          setValue(\n                            \"roles\",\n                            (watch(\"roles\") ? watch(\"roles\") + \", \" : \"\") +\n                              \"ROLE_DRIVER\"\n                          )\n                        }\n                      >\n                        Driver\n                      </Button>\n                    </div>\n                  </Form.Group>\n\n                  <Button\n                    disabled={loading}\n                    variant=\"primary\"\n                    type=\"submit\"\n                    className=\"w-100\"\n                  >\n                    Register User\n                  </Button>\n                </Form>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </main>\n  );\n};\nexport default AddUser;\n","export default __webpack_public_path__ + \"static/media/404.59d1f9fd.svg\";","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  Col,\n  Row,\n  Card,\n  Image,\n  Button,\n  Container,\n} from \"@themesberg/react-bootstrap\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { MyRoutes } from \"../../routes\";\nimport NotFoundImage from \"../../assets/img/illustrations/404.svg\";\n\nexport default () => {\n  return (\n    <main>\n      <section className=\"vh-100 d-flex align-items-center justify-content-center\">\n        <Container>\n          <Row>\n            <Col\n              xs={12}\n              className=\"text-center d-flex align-items-center justify-content-center\"\n            >\n              <div>\n                <Card.Link as={Link} to={MyRoutes.Home.path}>\n                  <Image src={NotFoundImage} className=\"img-fluid w-75\" />\n                </Card.Link>\n                <h1 className=\"text-primary mt-5\">\n                  Page not <span className=\"fw-bolder\">found</span>\n                </h1>\n                <p className=\"lead my-4\">\n                  Oops! Looks like you followed a bad link. If you think this is\n                  a problem with us, please tell us.\n                </p>\n                <Button\n                  as={Link}\n                  variant=\"primary\"\n                  className=\"animate-hover\"\n                  to={MyRoutes.Home.path}\n                >\n                  <FontAwesomeIcon\n                    icon={faChevronLeft}\n                    className=\"animate-left-3 me-3 ms-2\"\n                  />\n                  Go back home\n                </Button>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </main>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/500.d508258f.svg\";","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  Col,\n  Row,\n  Image,\n  Button,\n  Container,\n} from \"@themesberg/react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport { MyRoutes } from \"../../routes\";\nimport ErrorImage from \"../../assets/img/illustrations/500.svg\";\n\nconst ServerError = () => {\n  return (\n    <main>\n      <section className=\"vh-100 d-flex align-items-center justify-content-center\">\n        <Container>\n          <Row className=\"align-items-center\">\n            <Col\n              xs={12}\n              lg={5}\n              className=\"order-2 order-lg-1 text-center text-lg-left\"\n            >\n              <h1 className=\"text-primary mt-5\">\n                Something has gone <span className=\"fw-bolder\">seriously</span>{\" \"}\n                wrong\n              </h1>\n              <p className=\"lead my-4\">\n                It's always time for a coffee break. We should be back by the\n                time you finish your coffee.\n              </p>\n              <Button\n                as={Link}\n                variant=\"primary\"\n                className=\"animate-hover\"\n                to={MyRoutes.Home.path}\n              >\n                <FontAwesomeIcon\n                  icon={faChevronLeft}\n                  className=\"animate-left-3 me-3 ms-2\"\n                />\n                Go back home\n              </Button>\n            </Col>\n            <Col\n              xs={12}\n              lg={7}\n              className=\"order-1 order-lg-2 text-center d-flex align-items-center justify-content-center\"\n            >\n              <Image src={ErrorImage} className=\"img-fluid w-75\" />\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </main>\n  );\n};\nexport default ServerError;\n","import {\n  faFacebookF,\n  faGithub,\n  faTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faAngleLeft,\n  faEnvelope,\n  faUnlockAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  Alert,\n  Button,\n  Card,\n  Col,\n  Container,\n  Form,\n  FormCheck,\n  InputGroup,\n  Row,\n} from \"@themesberg/react-bootstrap\";\nimport React, { useRef, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport BgImage from \"../../assets/img/illustrations/signin.svg\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { MyRoutes } from \"../../routes\";\n\nconst Signin = () => {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const { login } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState(\"Your Email\");\n  const [password, setPassword] = useState(\"Your Password\");\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      navigate(\"/\");\n    } catch {\n      setError(\"Failed to log in\");\n    }\n\n    setLoading(false);\n  }\n  const handleChange = (e) => {\n    const value = email === \"Your Email\";\n    setEmail();\n  };\n\n  return (\n    <main className=\"bg-primary h-100\">\n      <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\n        <Container>\n          {/* <p className=\"text-center\">\n            <Card.Link\n              as={Link}\n              to={MyRoutes.Home.path}\n              className=\"text-gray-700\"\n            >\n              <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to\n              homepage\n            </Card.Link>\n          </p> */}\n          <Row className=\"justify-content-center\">\n            <Col\n              xs={12}\n              className=\"d-flex align-items-center justify-content-center\"\n            >\n              <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\n                <div className=\"text-center text-md-center mb-4 mt-md-0\">\n                  <h3 className=\"mb-0\">Sign in to our platform</h3>\n                </div>\n\n                {error && <Alert variant=\"danger\">{error}</Alert>}\n                <Form\n                  className=\"mt-4 test-io\"\n                  onSubmit={handleSubmit}\n                  // autocomplete=\"off\"\n                  // autoComplete=\"off\"\n                >\n                  <Form.Group id=\"email\" className=\"mb-4\">\n                    <Form.Label>Your Email</Form.Label>\n                    <InputGroup>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faEnvelope} />\n                      </InputGroup.Text>\n                      <Form.Control\n                        className=\"form-login bg-white\"\n                        ref={emailRef}\n                        required\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        // value=\"v\"\n                        // autoComplete=\"off\"\n                      />\n                    </InputGroup>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Group id=\"password\" className=\"mb-4\">\n                      <Form.Label>Your Password</Form.Label>\n                      <InputGroup>\n                        <InputGroup.Text>\n                          <FontAwesomeIcon icon={faUnlockAlt} />\n                        </InputGroup.Text>\n                        <Form.Control\n                          className=\"form-login bg-white\"\n                          ref={passwordRef}\n                          required\n                          type=\"password\"\n                          placeholder=\"Password\"\n                          // autoComplete=\"new-password\"\n                        />\n                      </InputGroup>\n                    </Form.Group>\n                    {/* <div className=\"d-flex justify-content-between align-items-center mb-4\">\n                      <Form.Check type=\"checkbox\">\n                        <FormCheck.Input id=\"defaultCheck5\" className=\"me-2\" />\n                        <FormCheck.Label\n                          htmlFor=\"defaultCheck5\"\n                          className=\"mb-0\"\n                        >\n                          Remember me\n                        </FormCheck.Label>\n                      </Form.Check>\n                      <Card.Link className=\"small text-end\">\n                        Lost password?\n                      </Card.Link>\n                    </div> */}\n                  </Form.Group>\n                  <Button\n                    disabled={loading}\n                    variant=\"primary\"\n                    type=\"submit\"\n                    className=\"w-100\"\n                  >\n                    Sign in\n                  </Button>\n                </Form>\n\n                {/* <div className=\"mt-3 mb-4 text-center\">\n                  <span className=\"fw-normal\">or login with</span>\n                </div>\n                <div className=\"d-flex justify-content-center my-4\">\n                  <Button\n                    variant=\"outline-light\"\n                    className=\"btn-icon-only btn-pill text-facebook me-2\"\n                  >\n                    <FontAwesomeIcon icon={faFacebookF} />\n                  </Button>\n                  <Button\n                    variant=\"outline-light\"\n                    className=\"btn-icon-only btn-pill text-twitter me-2\"\n                  >\n                    <FontAwesomeIcon icon={faTwitter} />\n                  </Button>\n                  <Button\n                    variant=\"outline-light\"\n                    className=\"btn-icon-only btn-pil text-dark\"\n                  >\n                    <FontAwesomeIcon icon={faGithub} />\n                  </Button>\n                </div>\n                <div className=\"d-flex justify-content-center align-items-center mt-4\">\n                  <span className=\"fw-normal\">\n                    Not registered?\n                    <Card.Link\n                      as={Link}\n                      to={MyRoutes.Signup.path}\n                      className=\"fw-bold\"\n                    >\n                      {` Create account `}\n                    </Card.Link>\n                  </span>\n                </div> */}\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </main>\n  );\n};\nexport default Signin;\n","import { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, Card, Image, Spinner } from \"@themesberg/react-bootstrap\";\r\nimport { debounce } from \"lodash\";\r\nimport isEqual from \"lodash.isequal\";\r\nimport moment from \"moment\";\r\nimport React, {\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { Scrollbars } from \"react-custom-scrollbars-2\";\r\nimport { toArray } from \"react-emoji-render\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useChatServices } from \"../myComponents/util/services\";\r\nconst Chat = () => {\r\n  const { currentUser } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 800);\r\n    }\r\n  }, [loading]);\r\n  const {\r\n    contacts,\r\n    loadNextPage,\r\n    activeContact,\r\n    messages,\r\n    sendMessage,\r\n    setActiveContactUid,\r\n  } = useChatServices(null, null, true);\r\n  const handleScroll = useMemo(\r\n    () => debounce(loadNextPage, 400),\r\n    [loadNextPage]\r\n  );\r\n  const handleContactClick = useCallback(\r\n    (c) => {\r\n      setLoading(true);\r\n      setActiveContactUid(c);\r\n    },\r\n    [setActiveContactUid]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-12 h-100\">\r\n        <div className=\"py-4 d-flex flex-wrap h-100\">\r\n          <div className=\"container-fluid p-0 h-100\">\r\n            <div className=\"col-12 h-100 bg-gray-500 rounded\">\r\n              <div className=\"py-0 d-flex flex-wrap h-100\">\r\n                <div className=\"double-messenger\">\r\n                  <div className=\"h-100\">\r\n                    <div className=\"messenger-left\">\r\n                      <CardHeader\r\n                        name={currentUser.displayName || currentUser.email}\r\n                        photoUrl={currentUser?.photoURL}\r\n                      />\r\n\r\n                      <Card.Body className=\"p-0\">\r\n                        {contacts ? (\r\n                          <Scrollbars\r\n                            autoHeight\r\n                            autoHeightMax={\"100%\"}\r\n                            className=\"h-100\"\r\n                            renderTrackVertical={(props) => {\r\n                              return (\r\n                                <div\r\n                                  {...props}\r\n                                  className=\"track-vertical\"\r\n                                ></div>\r\n                              );\r\n                            }}\r\n                          >\r\n                            <ContactsList\r\n                              contacts={contacts}\r\n                              onClick={handleContactClick}\r\n                              activeContact={activeContact}\r\n                            />\r\n                          </Scrollbars>\r\n                        ) : (\r\n                          <div className=\"w-100 h-100 d-flex justify-content-center align-items-center\">\r\n                            <Spinner animation=\"border\" />\r\n                          </div>\r\n                        )}\r\n                      </Card.Body>\r\n                      <Card.Footer className=\"py-2 px-3\" />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <Card bg=\"gray-500\" className=\"messenger-right\">\r\n                    <CardHeader\r\n                      name={activeContact?.name || activeContact.email}\r\n                      photoUrl={activeContact?.photoUrl}\r\n                    />\r\n\r\n                    <CardBody\r\n                      loading={loading}\r\n                      messages={messages}\r\n                      activeUid={activeContact?.uid}\r\n                      onScroll={handleScroll}\r\n                    />\r\n                    <CardFooter sendMessage={sendMessage}></CardFooter>\r\n                  </Card>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst ContactsList = ({ contacts, activeContact, ...rest }) => {\r\n  return (\r\n    <>\r\n      <div className=\"d-flex flex-column bg-gray-500\">\r\n        {contacts.map((c) => {\r\n          const active = activeContact.uid === c.uid;\r\n          return (\r\n            <Contact {...rest} key={c.uid} active={active}>\r\n              {c}\r\n            </Contact>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst Contact = ({ children, onClick, active }) => {\r\n  return (\r\n    <Button\r\n      className={`contact m-2 me-3`}\r\n      variant={active ? \"primary\" : \"secondary\"}\r\n      onClick={() => onClick(children.uid)}\r\n    >\r\n      <ContactContent {...children} active={active} />\r\n    </Button>\r\n  );\r\n};\r\nconst ContactContent = ({\r\n  name,\r\n  email,\r\n  message,\r\n  photoUrl,\r\n  unreadCount,\r\n  active,\r\n}) => {\r\n  const fname = name || email;\r\n  const time = message?.timestamp;\r\n  const formattedTime = time && toDateFormat(time);\r\n  const content = message?.content;\r\n  const unreadExists = unreadCount !== 0;\r\n  return (\r\n    <>\r\n      <div className=\"d-flex flex-nowrap align-items-center\">\r\n        <ContactPhoto photoUrl={photoUrl} name={fname} />\r\n        <div className=\"ps-4 text-start d-flex flex-fill flex-column flex-nowrap overflowX-hidden\">\r\n          <div className=\"fw-bolder text-truncate\">{fname}</div>\r\n          <div className=\"message\">{content}</div>\r\n        </div>\r\n        <div\r\n          className={`d-flex align-items-end flex-column${\r\n            unreadExists ? \" unread-count-active\" : \"\"\r\n          }`}\r\n        >\r\n          <div className=\"time\">{formattedTime}</div>\r\n          {unreadExists && (\r\n            <div\r\n              style={{ width: \"24px\", height: \"24px\", fontSize: \"13px\" }}\r\n              className={`unread-count bg-primary rounded-circle text-white d-flex align-items-end`}\r\n            >\r\n              <span className=\"w-100 d-flex justify-content-center text-white\">\r\n                {unreadCount}\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst ContactPhoto = ({ photoUrl, name }) => {\r\n  return (\r\n    <div className=\"contact-avatar\">\r\n      {photoUrl ? (\r\n        <Image\r\n          src={photoUrl}\r\n          className=\"user-avatar rounded-circle border-0\"\r\n          resize=\"contain\"\r\n        />\r\n      ) : (\r\n        <div className=\"bg-primary text-white rounded-circle fw-bolder user-avatar rounded-circle\">\r\n          {name?.substring(0, 2)}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst CardHeader = memo(({ name, photoUrl }) => {\r\n  return (\r\n    <Card.Header className=\"py-2 px-1 \">\r\n      {name && (\r\n        <>\r\n          <div className=\"ps-2\">\r\n            <ContactPhoto name={name} photoUrl={photoUrl} />\r\n          </div>\r\n          <div className=\"ps-2 fw-bold\">{name}</div>\r\n        </>\r\n      )}\r\n    </Card.Header>\r\n  );\r\n}, isEqual);\r\nconst CardBody = memo(({ messages = [], activeUid, onScroll, loading }) => {\r\n  const dates = [\r\n    ...new Set(messages.map((c) => moment(c.timestamp).format(\"YYYY.MM.DD\"))),\r\n  ];\r\n  const values = dates.reduce(\r\n    (a, b) => ({\r\n      ...a,\r\n      [b]: messages.filter(\r\n        (m) => b === moment(m.timestamp).format(\"YYYY.MM.DD\")\r\n      ),\r\n    }),\r\n    {}\r\n  );\r\n\r\n  const handleScroll = useCallback(\r\n    (e) => {\r\n      const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\r\n      const top = scrollHeight + scrollTop - clientHeight;\r\n      if (top <= 10) {\r\n        onScroll && onScroll();\r\n      }\r\n    },\r\n    [onScroll]\r\n  );\r\n  return loading ? (\r\n    <div className=\"h-100 bg-gray-300 d-flex flex-fill justify-content-center align-items-center\">\r\n      <Spinner animation=\"border\" />\r\n    </div>\r\n  ) : (\r\n    <Card.Body className=\"py-2 bg-gray-400 px-3\" onScroll={handleScroll}>\r\n      {dates.map((d) => {\r\n        return (\r\n          <React.Fragment key={d}>\r\n            {values[d].map((m) => (\r\n              <Message {...m} activeUid={activeUid} key={m.timestamp} />\r\n            ))}\r\n            <div className=\"date-bar py-2 fw-bold\">\r\n              <span className=\"bar\" />\r\n              <span className=\"date px-2\">{toDateBarFormat(d)}</span>\r\n              <span className=\"bar\" />\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </Card.Body>\r\n  );\r\n}, isEqual);\r\n\r\nconst Message = memo(({ content, activeUid, recipientId, timestamp }) => {\r\n  const sent = activeUid === recipientId;\r\n  const variant = sent ? \"secondary\" : \"gray-500\";\r\n  const timeTextVariant = \"time \" + (sent ? \"text-white\" : \"text-primary\");\r\n  const divClassName = `message py-1 justify-content-${sent ? \"end\" : \"start\"}`;\r\n  const buttonClassName = `${sent ? \"text-end\" : \"text-start\"} `;\r\n  return (\r\n    <div className={divClassName}>\r\n      <Button variant={variant} className={buttonClassName}>\r\n        <div className=\"text-break text-wrap pe-2\">{content}</div>\r\n        <div className={timeTextVariant}>\r\n          <span>{moment(timestamp).format(\"HH:mm\")}</span>\r\n        </div>\r\n      </Button>\r\n    </div>\r\n  );\r\n});\r\nconst CardFooter = memo(({ sendMessage }) => {\r\n  const textAreaRef = useRef();\r\n  const [text, setText] = useState(\"\");\r\n  const value = parseEmojis(text);\r\n  const handleTextChange = useCallback((e) => {\r\n    setText(e.target.value);\r\n  }, []);\r\n  const handleSend = useCallback(() => {\r\n    sendMessage(text);\r\n    setText(\"\");\r\n  }, [text, sendMessage]);\r\n  const handleEnterKey = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Enter\") {\r\n        e.preventDefault();\r\n        handleSend();\r\n      }\r\n    },\r\n    [handleSend]\r\n  );\r\n\r\n  return (\r\n    <Card.Footer className=\"py-2 px-3\">\r\n      <div className=\"textarea-wrapper\">\r\n        <TextareaAutosize\r\n          ref={textAreaRef}\r\n          autoFocus\r\n          spellCheck={false}\r\n          className=\"px-3\"\r\n          value={value}\r\n          onChange={handleTextChange}\r\n          onKeyDown={handleEnterKey}\r\n          maxRows={5}\r\n        />\r\n      </div>\r\n      {text && (\r\n        <div className=\"justify-content-center d-flex align-items-end ps-3\">\r\n          <div className=\"d-flex align-items-end\">\r\n            <Button\r\n              variant=\"secondary\"\r\n              className=\"p-1 send-btn\"\r\n              onClick={handleSend}\r\n            >\r\n              <FontAwesomeIcon icon={faPaperPlane}></FontAwesomeIcon>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Card.Footer>\r\n  );\r\n}, isEqual);\r\n\r\nconst parseEmojis = (value) => {\r\n  const emojisArray = toArray(value);\r\n  const newValue = emojisArray.reduce((previous, current) => {\r\n    if (typeof current === \"string\") {\r\n      return previous + current;\r\n    }\r\n    return previous + current.props.children;\r\n  }, \"\");\r\n\r\n  return newValue;\r\n};\r\nfunction toDateBarFormat(value) {\r\n  const now = moment();\r\n  return value === now.format(\"YYYY.MM.DD\")\r\n    ? \"today\"\r\n    : value === now.subtract(1, \"day\").format(\"YYYY.MM.DD\")\r\n    ? \"yesterday\"\r\n    : moment(value, \"YYYY.MM.DD\").isAfter(now.subtract(5, \"days\"))\r\n    ? moment(value, \"YYYY.MM.DD\").format(\"dddd\")\r\n    : moment(value, \"YYYY.MM.DD\").format(\"DD.MM.YYYY\");\r\n}\r\nfunction toDateFormat(value) {\r\n  const date = moment(value).format(\"YYYY.MM.DD\");\r\n\r\n  const now = moment();\r\n  return date === now.format(\"YYYY.MM.DD\")\r\n    ? moment(value).format(\"HH:mm\")\r\n    : date === now.subtract(1, \"day\").format(\"YYYY.MM.DD\")\r\n    ? \"yesterday\"\r\n    : moment(date, \"YYYY.MM.DD\").isAfter(now.subtract(5, \"days\"))\r\n    ? moment(value).format(\"dddd\")\r\n    : moment(value).format(\"DD.MM.YYYY\");\r\n}\r\nexport default Chat;\r\n","import {\r\n  faAlignLeft,\r\n  faChevronLeft,\r\n  faLongArrowAltLeft,\r\n  faPaperPlane,\r\n  faSmile,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Card, Button } from \"@themesberg/react-bootstrap\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport { isEqual } from \"lodash\";\r\nimport moment from \"moment\";\r\nimport React, { memo, useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { Alert, Image, Spinner } from \"react-bootstrap\";\r\nimport { toArray } from \"react-emoji-render\";\r\nimport { useLocation, useNavigate } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport { MyRoutes } from \"../../routes\";\r\nimport { useChatServices } from \"../myComponents/util/services\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nfunction lastSignIn(value) {\r\n  const date = moment(value).format(\"YYYY.MM.DD\");\r\n\r\n  const now = moment();\r\n  return date === now.format(\"YYYY.MM.DD\")\r\n    ? \"today\"\r\n    : date === now.subtract(1, \"day\").format(\"YYYY.MM.DD\")\r\n    ? \"yesterday\"\r\n    : moment(date, \"YYYY.MM.DD\").isAfter(now.subtract(5, \"days\"))\r\n    ? moment(value).format(\"dddd\")\r\n    : moment(value).format(\"DD.MM.YYYY\");\r\n}\r\nconst UserChat = () => {\r\n  const location = useLocation();\r\n  const active = location.state?.activeContact;\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    !active && navigate(MyRoutes.UserMessenger.path);\r\n  }, [active, navigate]);\r\n\r\n  return (\r\n    <>\r\n      {active && (\r\n        <RecoilRoot>\r\n          <Chat active={active}></Chat>\r\n        </RecoilRoot>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nconst Notification = ({ content, contact }) => {\r\n  return (\r\n    <div className=\"w-100 d-flex flex-nowrap align-items-center\">\r\n      <ContactPhoto\r\n        photoUrl={contact.photoUrl}\r\n        name={contact.name || contact.email}\r\n      />\r\n      <div className=\"ps-3 flex-fill d-inline-block text-truncate text-break\">\r\n        <div className=\"fw-bolder\">{contact.name || contact.email}</div>\r\n        <div className=\"d-inline\">{content}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst Chat = ({ active }) => {\r\n  const onNewMessage = useCallback(\r\n    ({ notification, activeUid, message, contact, setActive }) => {\r\n      if (activeUid && notification.senderId !== activeUid) {\r\n        toast.update(notification.senderId, {\r\n          render: () => (\r\n            <Notification content={message?.content} contact={contact} />\r\n          ),\r\n        }) ||\r\n          toast(<Notification content={message?.content} contact={contact} />, {\r\n            onClick: setActive,\r\n            bodyClassName: \"col-1 p-0\",\r\n            toastId: notification.senderId,\r\n          });\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const { messages, activeContact, sendMessage, loadNextPage, disconnect } =\r\n    useChatServices(active, onNewMessage);\r\n\r\n  const act = activeContact || active;\r\n  return (\r\n    <div className=\"col-12 h-100 bg-darker-nonary\">\r\n      <div className=\"py-0 d-flex flex-wrap h-100\">\r\n        <ToastContainer\r\n          className=\"user-messenger-notification\"\r\n          position=\"top-center\"\r\n          autoClose={50000}\r\n          icon={false}\r\n          hideProgressBar={false}\r\n          newestOnTop={true}\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggablePercent={60}\r\n          pauseOnHover\r\n          limit={3}\r\n        />\r\n        <div className=\"container-fluid p-0 h-100\">\r\n          <Card\r\n            bg=\"darker-nonary\"\r\n            className=\"user-messenger-card border-0 rounded-0 h-100\"\r\n          >\r\n            <CardHeader\r\n              name={act?.name || act.email}\r\n              photoUrl={act?.photoUrl}\r\n              onDisconnect={disconnect}\r\n            />\r\n\r\n            <CardBody\r\n              lastMessage={act?.message}\r\n              messages={messages}\r\n              activeUid={act?.uid || act?.uid}\r\n              onScroll={loadNextPage}\r\n            />\r\n            <CardFooter sendMessage={sendMessage}></CardFooter>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst CardHeader = memo(({ name, photoUrl, email, onDisconnect }) => {\r\n  const fname = name || email;\r\n  const handleLeaveClick = useCallback(() => {\r\n    onDisconnect();\r\n  }, [onDisconnect]);\r\n\r\n  return (\r\n    <Card.Header className=\"text-senary d-flex flex-nowrap align-items-center py-2 bg-nonary rounded-0 px-1\">\r\n      <Button\r\n        variant=\"transparent\"\r\n        className=\"text-senary p-0\"\r\n        style={{ width: \"30px\", height: \"30px\" }}\r\n        as={Link}\r\n        to={MyRoutes.UserMessenger.path}\r\n        onClick={handleLeaveClick}\r\n      >\r\n        <FontAwesomeIcon icon={faChevronLeft}></FontAwesomeIcon>\r\n      </Button>\r\n      <ContactPhoto name={fname} photoUrl={photoUrl} />\r\n      <div className=\"ps-2 fw-bold\">{fname}</div>\r\n    </Card.Header>\r\n  );\r\n}, isEqual);\r\nconst CardBody = memo(({ lastMessage, messages = [], activeUid, onScroll }) => {\r\n  const dates = [\r\n    ...new Set(messages.map((c) => moment(c.timestamp).format(\"YYYY.MM.DD\"))),\r\n  ];\r\n  const values = dates.reduce(\r\n    (a, b) => ({\r\n      ...a,\r\n      [b]: messages.filter(\r\n        (m) => b === moment(m.timestamp).format(\"YYYY.MM.DD\")\r\n      ),\r\n    }),\r\n    {}\r\n  );\r\n\r\n  const handleScroll = useCallback(\r\n    (e) => {\r\n      const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\r\n      const top = scrollHeight + scrollTop - clientHeight === 1;\r\n      if (top) {\r\n        onScroll && onScroll();\r\n      }\r\n    },\r\n    [onScroll]\r\n  );\r\n  return (\r\n    <Card.Body\r\n      className=\"text-senary d-flex flex-column flex-column-reverse flex-nowrap align-items-center py-2 bg-darker-nonary rounded-0 px-3 overflow-auto\"\r\n      style={{ height: 0, overflow: \"auto\" }}\r\n      onScroll={handleScroll}\r\n    >\r\n      {dates.map((d) => {\r\n        return (\r\n          <React.Fragment key={d}>\r\n            {values[d].map((m) => (\r\n              <Message {...m} activeUid={activeUid} key={m.timestamp} />\r\n            ))}\r\n            <div className=\"d-flex justify-content-center py-2 fw-bold w-100\">\r\n              <span\r\n                className=\"border-senary border-bottom flex-grow-1\"\r\n                style={{ marginBottom: \"12px\" }}\r\n              />\r\n              <span className=\"text-center text-senary px-2\">\r\n                {lastSignIn(d)}\r\n              </span>\r\n              <span\r\n                className=\"border-senary border-bottom flex-grow-1\"\r\n                style={{ marginBottom: \"12px\" }}\r\n              />\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n\r\n      {/* {lastMessage && messages.length === 0 ? (\r\n        <>\r\n          <Message {...lastMessage} activeUid={activeUid} />\r\n          <div className=\"pb-3\">\r\n            <Spinner animation=\"border\" role=\"status\" />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        messages.map((m) => (\r\n          <Message {...m} activeUid={activeUid} key={m.timestamp}></Message>\r\n        ))\r\n      )} */}\r\n    </Card.Body>\r\n  );\r\n}, isEqual);\r\n\r\nconst Message = memo(({ content, activeUid, recipientId, timestamp }) => {\r\n  const sent = activeUid === recipientId;\r\n  const variant = sent ? \"senary\" : \"nonary\";\r\n  const timeTextVariant = sent ? \"text-nonary\" : \"text-darker-senary\";\r\n  const divClassName = `message py-1 w-100 d-flex justify-content-${\r\n    sent ? \"end\" : \"start\"\r\n  }`;\r\n  const buttonClassName = `d-flex align-items-end ${\r\n    sent ? \"text-end\" : \"text-start\"\r\n  } `;\r\n  return (\r\n    <div className={divClassName}>\r\n      <Button\r\n        style={{ maxWidth: \"80%\" }}\r\n        variant={variant}\r\n        className={buttonClassName}\r\n      >\r\n        <div className=\"text-break text-wrap pe-2\">{content}</div>\r\n        <div className={timeTextVariant}>\r\n          <span\r\n            style={{ fontSize: \"13px\", position: \"relative\", bottom: \"-9px\" }}\r\n          >\r\n            {moment(timestamp).format(\"HH:mm\")}\r\n          </span>\r\n        </div>\r\n      </Button>\r\n    </div>\r\n  );\r\n});\r\nconst CardFooter = memo(({ sendMessage }) => {\r\n  const textAreaRef = useRef();\r\n  const [text, setText] = useState(\"\");\r\n  const value = parseEmojis(text);\r\n  const handleTextChange = useCallback((e) => {\r\n    setText(e.target.value);\r\n  }, []);\r\n  const handleSend = useCallback(() => {\r\n    sendMessage(text);\r\n    setText(\"\");\r\n  }, [text]);\r\n  const handleEnterKey = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Enter\") {\r\n        e.preventDefault();\r\n        handleSend();\r\n      }\r\n    },\r\n    [handleSend]\r\n  );\r\n\r\n  return (\r\n    <Card.Footer className=\"text-senary d-flex flex-nowrap align-items-end py-2 px-3 rounded-0 justify-content-around\">\r\n      <div className={\"d-flex align-items-center bg-nonary rounded flex-fill\"}>\r\n        <TextareaAutosize\r\n          ref={textAreaRef}\r\n          autoFocus\r\n          style={{\r\n            resize: \"none\",\r\n            height: \"36px\",\r\n            lineHeight: \"28px\",\r\n            outline: \"none\",\r\n          }}\r\n          className=\"rounded px-3 w-100 border-0 bg-transparent text-senary shadow-none\"\r\n          value={value}\r\n          onChange={handleTextChange}\r\n          onKeyDown={handleEnterKey}\r\n          maxRows={5}\r\n        />\r\n      </div>\r\n      {text && (\r\n        <div className=\"justify-content-center d-flex align-items-end ps-3\">\r\n          <div className=\"d-flex align-items-end\">\r\n            <Button\r\n              variant=\"nonary\"\r\n              className=\"rounded-circle p-1 shadow-none\"\r\n              style={{\r\n                height: \"32px\",\r\n                width: \"32px\",\r\n              }}\r\n              onClick={handleSend}\r\n            >\r\n              <FontAwesomeIcon icon={faPaperPlane}></FontAwesomeIcon>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Card.Footer>\r\n  );\r\n}, isEqual);\r\nconst ContactPhoto = ({ photoUrl, name = [] }) => {\r\n  return !photoUrl ? (\r\n    <div\r\n      className={\"bg-senary text-nonary rounded-circle fw-bolder\"}\r\n      style={{\r\n        height: \"30px\",\r\n        width: \"30px\",\r\n        minWidth: \"30px\",\r\n        lineHeight: \"30px\",\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n      {name[0]}\r\n    </div>\r\n  ) : (\r\n    <Image\r\n      src={photoUrl}\r\n      className={\"rounded-circle \"}\r\n      style={{ height: \"30px\", width: \"30px\" }}\r\n    />\r\n  );\r\n};\r\nconst parseEmojis = (value) => {\r\n  const emojisArray = toArray(value);\r\n  const newValue = emojisArray.reduce((previous, current) => {\r\n    if (typeof current === \"string\") {\r\n      return previous + current;\r\n    }\r\n    return previous + current.props.children;\r\n  }, \"\");\r\n\r\n  return newValue;\r\n};\r\n\r\nexport default UserChat;\r\n","import { Card, Button } from \"@themesberg/react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport { useEffect } from \"react\";\r\nimport { Image, Spinner } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { MyRoutes } from \"../../routes\";\r\nimport { useChatServices, useConnectChat } from \"../myComponents/util/services\";\r\n\r\nconst UserMessenger = () => {\r\n  const { contacts } = useChatServices();\r\n  useEffect(() => {\r\n    return () => {\r\n      sessionStorage.removeItem(\"recoil-persist\");\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"col-12 h-100 bg-darker-nonary\">\r\n        <div className=\"py-4 d-flex flex-wrap h-100 align-content-center\">\r\n          <div\r\n            className=\"container-fluid p-0 h-100\"\r\n            style={{ maxWidth: \"600px\" }}\r\n          >\r\n            <MessengerList contacts={contacts} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport const MessengerList = ({ contacts }) => {\r\n  return (\r\n    <Card bg=\"transparent\" className=\"user-messenger-card p-0\">\r\n      <Card.Header>\r\n        <div className=\"d-flex flex-fill justify-content-center  border-senary border-bottom\">\r\n          <span className=\"text-senary fw-bolder\">Contacts</span>\r\n        </div>\r\n      </Card.Header>\r\n      <Card.Body className=\"p-1\">\r\n        {contacts ? (\r\n          <ContactsList contacts={contacts} />\r\n        ) : (\r\n          <div className=\"w-100 d-flex justify-content-center text-senary\">\r\n            <Spinner animation=\"border\" role=\"status\" />\r\n          </div>\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nconst ContactsList = ({ contacts }) => {\r\n  return (\r\n    <>\r\n      <div className=\"d-flex flex-column btn-group-vertical\">\r\n        {(contacts &&\r\n          contacts.map((c) => <Contact key={c.uid}>{c}</Contact>)) || (\r\n          <Spinner></Spinner>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst Contact = ({ children }) => {\r\n  return (\r\n    <Button\r\n      className=\"contact\"\r\n      variant=\"nonary\"\r\n      as={Link}\r\n      to={MyRoutes.UserChat.path}\r\n      state={{ activeContact: { ...children } }}\r\n    >\r\n      <ContactContent {...children} />\r\n    </Button>\r\n  );\r\n};\r\nconst ContactContent = ({ name, email, message, photoUrl, unreadCount }) => {\r\n  const fname = name || email;\r\n  const time = message?.timestamp;\r\n  const formattedTime = time && lastSignIn(time);\r\n  const content = message?.content;\r\n  return (\r\n    <>\r\n      <div className=\"d-flex flex-nowrap align-items-center\">\r\n        <ContactPhoto photoUrl={photoUrl} name={fname} />\r\n        <div className=\"ps-4 text-start d-flex flex-fill flex-column flex-nowrap overflowX-hidden\">\r\n          <div className=\"fw-bolder text-truncate\">{fname}</div>\r\n          <div className=\"message\">{content}</div>\r\n        </div>\r\n        <div className=\"d-flex align-items-end flex-column\">\r\n          <div className=\"time\">{formattedTime}</div>\r\n          {unreadCount !== 0 && (\r\n            <div\r\n              style={{ width: \"24px\", height: \"24px\", fontSize: \"13px\" }}\r\n              className=\"border-nonary border bg-senary rounded-circle text-nonary d-flex align-items-end\"\r\n            >\r\n              <span className=\"w-100 d-flex justify-content-center text-nonary\">\r\n                {unreadCount}\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst ContactPhoto = ({ photoUrl, name = [] }) => {\r\n  return !photoUrl ? (\r\n    <div\r\n      className=\"bg-senary text-nonary rounded-circle border-nonary border-1 fw-bolder\"\r\n      style={{\r\n        height: \"30px\",\r\n        width: \"30px\",\r\n        minWidth: \"30px\",\r\n        lineHeight: \"30px\",\r\n        textAlign: \"center\",\r\n        border: \"solid\",\r\n      }}\r\n    >\r\n      {name[0]}\r\n    </div>\r\n  ) : (\r\n    <Image\r\n      src={photoUrl}\r\n      className=\"rounded-circle\"\r\n      style={{ height: \"30px\", width: \"30px\" }}\r\n    />\r\n  );\r\n};\r\n\r\nfunction lastSignIn(value) {\r\n  const date = moment(value).format(\"YYYY.MM.DD\");\r\n  const hourMinute = moment(value).format(\"HH:mm\");\r\n\r\n  const now = moment();\r\n  return date === now.format(\"YYYY.MM.DD\")\r\n    ? hourMinute\r\n    : date === now.subtract(1, \"day\").format(\"YYYY.MM.DD\")\r\n    ? \"Yesterday\"\r\n    : moment(date, \"YYYY.MM.DD\").isAfter(now.subtract(5, \"days\"))\r\n    ? moment(value).format(\"dddd\")\r\n    : moment(value).format(\"DD.MM.YYYY\");\r\n}\r\n\r\nexport default UserMessenger;\r\n","import {\r\n  faAngleDoubleLeft,\r\n  faAngleDoubleRight,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faCaretDown,\r\n  faCaretUp,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Card,\r\n  Form,\r\n  Nav,\r\n  Pagination,\r\n  Table,\r\n} from \"@themesberg/react-bootstrap\";\r\nimport _ from \"lodash\";\r\nimport isEqual from \"lodash.isequal\";\r\nimport moment from \"moment\";\r\nimport React, {\r\n  memo,\r\n  Suspense,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getCustomComponent } from \"../../pages/myComponents/util/labels\";\r\nimport { ComponentPreLoader } from \"../ComponentPreLoader\";\r\nconst LazyInput = React.lazy(() => import(\"../LazyInput\"));\r\n\r\nconst TableCore = memo((props) => {\r\n  const {\r\n    selectData,\r\n    selectShownColumns,\r\n    onCellChange,\r\n    footerProps,\r\n    counter,\r\n    ...rest\r\n  } = props;\r\n  const data = useSelector(selectData);\r\n  const headers = useSelector(selectShownColumns);\r\n  const [columns, setColumns] = useState(headers);\r\n  const updateMyData = useCallback(\r\n    ({ value, labelId, rowId }) => {\r\n      onCellChange({ rowId, changes: { labelId, value } });\r\n    },\r\n    [onCellChange]\r\n  );\r\n\r\n  const debouncedUpdate = useMemo(\r\n    () => _.debounce(updateMyData, 300),\r\n    [updateMyData]\r\n  );\r\n  useEffect(() => {\r\n    if (!isEqual(headers, columns)) {\r\n      setColumns(headers);\r\n    }\r\n  }, [headers, columns]);\r\n  return (\r\n    <>\r\n      <RTables\r\n        {...rest}\r\n        columns={columns}\r\n        data={data}\r\n        updateMyData={debouncedUpdate}\r\n      />\r\n      <TableFooter {...footerProps} currentPageSize={data.length} />\r\n    </>\r\n  );\r\n}, isEqual);\r\n\r\nconst RTables = memo(\r\n  ({ data, columns, updateMyData, headerProps, bodyProps }) => {\r\n    const labels = useMemo(() => columns.map((e) => e), [columns]);\r\n    return (\r\n      <>\r\n        <Table\r\n          responsive\r\n          className=\"align-items-center table-flush align-items-center user-table\"\r\n        >\r\n          <TableHead {...headerProps} columns={columns}></TableHead>\r\n          <TableBody\r\n            {...bodyProps}\r\n            data={data}\r\n            labels={labels}\r\n            updateMyData={updateMyData}\r\n          />\r\n        </Table>\r\n      </>\r\n    );\r\n  },\r\n  isEqual\r\n);\r\n\r\nconst TableBody = React.memo(\r\n  ({\r\n    data,\r\n    labels,\r\n    selectHiddenColumns,\r\n    selectSelectedRows,\r\n    updateMyData,\r\n    onSelectRow,\r\n    selectAddRow,\r\n    modeselector,\r\n    massEdit,\r\n  }) => {\r\n    const hiddenColumns = useSelector(selectHiddenColumns);\r\n    const display = useMemo(() => hiddenColumns, [hiddenColumns]);\r\n    const selectedRows = useSelector(selectSelectedRows);\r\n    const mode = useSelector(modeselector);\r\n    const addRow = useSelector(selectAddRow);\r\n\r\n    return (\r\n      <>\r\n        <tbody>\r\n          <tr key={\"addRow-tr\"}>\r\n            {mode === \"addRow\" && (\r\n              <>\r\n                {!massEdit && <td></td>}\r\n                <AddRow\r\n                  row={addRow}\r\n                  labels={labels}\r\n                  key={\"add-row\"}\r\n                  index={0}\r\n                  display={display}\r\n                  updateMyData={updateMyData}\r\n                />\r\n              </>\r\n            )}\r\n          </tr>\r\n          {data.map((row, index) => {\r\n            const className = row.className;\r\n            const isSelected = selectedRows.includes(row.id + \"\");\r\n            const editable = mode === \"edit\" && isSelected;\r\n            return (\r\n              <tr key={\"row\" + index} className={className}>\r\n                {!massEdit && (\r\n                  <td className=\"px-1 py-1\" style={{ width: \"50px\" }}>\r\n                    <IndeterminateCheckbox\r\n                      onChange={() => onSelectRow(row.id)}\r\n                      isSelected={isSelected}\r\n                    />\r\n                  </td>\r\n                )}\r\n                <RenderRow\r\n                  row={row}\r\n                  labels={labels}\r\n                  key={\"row\" + index}\r\n                  index={index}\r\n                  display={display}\r\n                  updateMyData={updateMyData}\r\n                  isEditable={editable}\r\n                />\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </>\r\n    );\r\n  },\r\n  isEqual\r\n);\r\nconst AddRow = memo(({ row, labels, index, updateMyData }) => {\r\n  return (\r\n    <>\r\n      {labels.map((label) => (\r\n        <TableCell\r\n          row={row.id}\r\n          isEditable={true}\r\n          value={row[label.id]}\r\n          cellProps={label}\r\n          index={index}\r\n          key={label.id + \"-\" + index}\r\n          updateMyData={updateMyData}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n}, isEqual);\r\n\r\nconst RenderRow = memo(\r\n  ({ row, labels, index, updateMyData, display, isEditable }) => {\r\n    return labels.map((label) => (\r\n      <TableCell\r\n        row={row.id}\r\n        isEditable={isEditable}\r\n        value={row[label.id]}\r\n        cellProps={label}\r\n        index={index}\r\n        key={label.id + \"-\" + index}\r\n        display={display[label.id]}\r\n        updateMyData={updateMyData}\r\n      />\r\n    ));\r\n  },\r\n  isEqual\r\n);\r\n\r\nconst TableCell = memo(\r\n  ({\r\n    row,\r\n    value,\r\n    index,\r\n    display = \"auto\",\r\n    updateMyData,\r\n    isEditable,\r\n    cellProps,\r\n    measurement = true,\r\n  }) => {\r\n    return (\r\n      <td className={`px-2 py-1 d-${display}`}>\r\n        <div className=\"w-100 d-flex justify-content-center\">\r\n          <div className=\"w-100 d-flex justify-content-center\">\r\n            <EditableCell\r\n              cellProps={cellProps}\r\n              value={value}\r\n              updateMyData={updateMyData}\r\n              index={index}\r\n              row={row}\r\n              isEditable={isEditable}\r\n              measurement={measurement}\r\n            />\r\n          </div>\r\n        </div>\r\n      </td>\r\n    );\r\n  },\r\n  isEqual\r\n);\r\nconst EditableCell = React.memo(\r\n  ({\r\n    row,\r\n    index,\r\n    isEditable,\r\n    updateMyData,\r\n    cellProps,\r\n    value: initialValue,\r\n    measurement: measurementEnabled,\r\n  }) => {\r\n    const { id: label, idx, links, measurement, ...rest } = cellProps;\r\n    const [value, setValue] = useState(initialValue);\r\n    const className =\r\n      isEditable && cellProps.type !== \"nonEditable\"\r\n        ? \"p-0 d-none dummy\"\r\n        : \"d-block text-center fallback\";\r\n\r\n    const formattedValue =\r\n      value !== undefined\r\n        ? value +\r\n          (measurementEnabled && value !== \"\" && measurement\r\n            ? \" \" + measurement\r\n            : \"\")\r\n        : \"\";\r\n    const handleUpdateData = useCallback(\r\n      (v = value) =>\r\n        updateMyData({\r\n          value: v,\r\n          labelId: label,\r\n          rowId: row,\r\n        }),\r\n      [value, label, row, updateMyData]\r\n    );\r\n\r\n    const onChange = useCallback(\r\n      (value, type) => {\r\n        switch (type) {\r\n          case \"date\":\r\n            const v = moment(value, \"YYYY/MM/DD\", true).isValid()\r\n              ? moment(value, \"YYYY/MM/DD\").format(\"DD.MM.YYYY\")\r\n              : value;\r\n            setValue(v);\r\n            handleUpdateData(value);\r\n            break;\r\n\r\n          default:\r\n            setValue(value);\r\n            handleUpdateData(value);\r\n        }\r\n      },\r\n      [handleUpdateData]\r\n    );\r\n    useEffect(() => {\r\n      setValue(initialValue);\r\n    }, [initialValue]);\r\n\r\n    return (\r\n      <>\r\n        {cellProps.type === \"customComponent\" ? (\r\n          getCustomComponent({\r\n            ...rest,\r\n            value,\r\n            onChange,\r\n            isEditable,\r\n          })\r\n        ) : (\r\n          <>\r\n            <div\r\n              className={className}\r\n              style={{\r\n                padding: \"1px \",\r\n                minWidth: rest.minWidth,\r\n                maxWidth: rest.maxWidth,\r\n              }}\r\n            >\r\n              {formattedValue}\r\n            </div>\r\n            {isEditable && cellProps.type !== \"nonEditable\" && (\r\n              <Suspense\r\n                fallback={\r\n                  <ComponentPreLoader show logo={false}></ComponentPreLoader>\r\n                }\r\n              >\r\n                <LazyInput\r\n                  {...rest}\r\n                  value={value}\r\n                  onChange={onChange}\r\n                ></LazyInput>\r\n              </Suspense>\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  },\r\n  isEqual\r\n);\r\nconst TableHead = ({\r\n  columns,\r\n  selectHiddenColumns,\r\n  massEdit,\r\n  onSelectAllRows,\r\n  selectSelectedRows,\r\n  selectPaginationData,\r\n  selectSortedColumn,\r\n  sortProps,\r\n}) => {\r\n  const { rowsCount } = useSelector(selectPaginationData);\r\n  const hiddenColumns = useSelector(selectHiddenColumns);\r\n  const selectedRows = useSelector(selectSelectedRows);\r\n  const sortedColumn = useSelector(selectSortedColumn);\r\n  const state =\r\n    parseInt(rowsCount) === selectedRows.length\r\n      ? \"checked\"\r\n      : selectedRows.length === 0\r\n      ? \"unchecked\"\r\n      : \"indeterminate\";\r\n\r\n  return (\r\n    <thead>\r\n      <tr className=\"text-center\" key={\"th-0\"}>\r\n        {!massEdit && (\r\n          <th className=\"border-0\" style={{ width: \"50px\" }}>\r\n            <IndeterminateCheckbox state={state} onChange={onSelectAllRows} />\r\n          </th>\r\n        )}\r\n        {columns.map(({ Header, id, ignoreSort, maxWidth, ...rest }, index) => {\r\n          const display = hiddenColumns[id];\r\n          const sorted = sortedColumn && id === sortedColumn.id;\r\n          const order = sorted && sortedColumn.order;\r\n          return (\r\n            <TableColumn\r\n              key={id}\r\n              column={Header}\r\n              id={id}\r\n              ignoreSort={ignoreSort}\r\n              display={display}\r\n              maxWidth={maxWidth}\r\n              {...sortProps}\r\n              sorted={sorted}\r\n              order={order}\r\n            />\r\n          );\r\n        })}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\nconst TableColumn = ({\r\n  column,\r\n  id,\r\n  sorted = false,\r\n  order,\r\n  ignoreSort,\r\n  display = \"auto\",\r\n  onToggleSort,\r\n  sortEnabled,\r\n  sortedComponent = sorted ? (\r\n    <span className=\"sort-arrow ms-2\" style={{ width: \"15px\", height: \"15px\" }}>\r\n      <FontAwesomeIcon\r\n        className=\"w-100 h-100\"\r\n        icon={order === \"desc\" ? faCaretDown : faCaretUp}\r\n      />\r\n    </span>\r\n  ) : (\r\n    <></>\r\n  ),\r\n}) => {\r\n  const handleClick = useCallback(\r\n    (e) => sortEnabled && !ignoreSort && onToggleSort(id),\r\n    [sortEnabled, ignoreSort, onToggleSort, id]\r\n  );\r\n  return (\r\n    <th\r\n      onClick={handleClick}\r\n      className=\"border-0 sortable align-items-center\"\r\n      style={{ display }}\r\n    >\r\n      <div>\r\n        <span\r\n          style={{ lineHeight: \"21px\" }}\r\n          className=\"d-flex flex-nowrap justify-content-center align-self-center\"\r\n        >\r\n          {column}\r\n          {sortedComponent}\r\n        </span>\r\n      </div>\r\n    </th>\r\n  );\r\n};\r\n\r\nconst IndeterminateCheckbox = memo(\r\n  ({ isSelected, state = \"unchecked\", ...rest }) => {\r\n    const resolvedRef = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n      resolvedRef.current.indeterminate = state === \"indeterminate\";\r\n    }, [resolvedRef, state]);\r\n    return (\r\n      <div className=\"d-flex justify-content-center w-100\">\r\n        <div>\r\n          <Form.Check\r\n            ref={resolvedRef}\r\n            checked={\r\n              isSelected || state === \"checked\" || state === \"indeterminate\"\r\n            }\r\n            {...rest}\r\n            className=\"checkbox\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\nconst PaginationItem = ({ page, gotoPage, active = false }) => {\r\n  return (\r\n    <Pagination.Item active={active} onClick={() => gotoPage(page)}>\r\n      {page}\r\n    </Pagination.Item>\r\n  );\r\n};\r\nconst TableFooter = React.memo(\r\n  ({\r\n    paginationProps,\r\n    counterProps,\r\n    selectPaginationData,\r\n    currentPageSize,\r\n  }) => {\r\n    const {\r\n      rowsCount: maxRows,\r\n      page: pageIndex,\r\n      pagesCount,\r\n    } = useSelector(selectPaginationData);\r\n    return (\r\n      <Card.Footer className=\"p-0 border-0 d-lg-flex flex-wrap align-items-center justify-content-between\">\r\n        {paginationProps && currentPageSize < maxRows && (\r\n          <PaginationComponent\r\n            {...paginationProps}\r\n            pageIndex={pageIndex}\r\n            pagesCount={pagesCount}\r\n          ></PaginationComponent>\r\n        )}\r\n\r\n        {counterProps && (\r\n          <small className=\"fw-bold ps-3 pt-4\">\r\n            Showing <b>{currentPageSize}</b>{\" \"}\r\n            {maxRows && <span>out of {<b>{maxRows}</b>} entries</span>}\r\n          </small>\r\n        )}\r\n      </Card.Footer>\r\n    );\r\n  }\r\n);\r\nconst PaginationComponent = React.memo(\r\n  ({ onPageChange, pageIndex, pagesCount }) => {\r\n    const currentPage = parseInt(pageIndex);\r\n    const pageOffset =\r\n      currentPage === 2\r\n        ? 1\r\n        : currentPage === 1\r\n        ? 2\r\n        : pagesCount + 1 === currentPage\r\n        ? -2\r\n        : pagesCount === currentPage\r\n        ? -1\r\n        : 0;\r\n    const pages =\r\n      pagesCount >= 5\r\n        ? [\r\n            currentPage - 2 + pageOffset,\r\n            currentPage - 1 + pageOffset,\r\n            currentPage + pageOffset,\r\n            currentPage + 1 + pageOffset,\r\n            currentPage + 2 + pageOffset,\r\n          ]\r\n        : Array(pagesCount + 1)\r\n            .fill()\r\n            .map((_, index) => index + 1);\r\n    return (\r\n      <Nav className=\"pt-4\">\r\n        <Pagination className=\"mb-2 mb-lg-0 d-flex flex-wrap\">\r\n          <Pagination.Prev\r\n            onClick={() => onPageChange(0)}\r\n            disabled={parseInt(pageIndex) === 1}\r\n          >\r\n            <FontAwesomeIcon icon={faAngleDoubleLeft}></FontAwesomeIcon>\r\n          </Pagination.Prev>\r\n          <Pagination.Prev\r\n            onClick={() => onPageChange(parseInt(pageIndex - 2))}\r\n            disabled={parseInt(pageIndex) === 1}\r\n          >\r\n            <FontAwesomeIcon icon={faAngleLeft}></FontAwesomeIcon>\r\n          </Pagination.Prev>\r\n          {pages.map((index) => {\r\n            const itemProps = {\r\n              page: index,\r\n              gotoPage: (p) => onPageChange(p - 1),\r\n              active: currentPage === index,\r\n            };\r\n            return (\r\n              <PaginationItem {...itemProps} key={\"pagination-item-\" + index} />\r\n            );\r\n          })}\r\n          <Pagination.Next\r\n            onClick={() => onPageChange(parseInt(pageIndex))}\r\n            disabled={parseInt(pageIndex) - 1 === pagesCount}\r\n          >\r\n            <FontAwesomeIcon icon={faAngleRight}></FontAwesomeIcon>\r\n          </Pagination.Next>\r\n          <Pagination.Next\r\n            onClick={() => onPageChange(pagesCount)}\r\n            disabled={parseInt(pageIndex) - 1 === pagesCount}\r\n          >\r\n            <FontAwesomeIcon icon={faAngleDoubleRight}></FontAwesomeIcon>\r\n          </Pagination.Next>\r\n          <></>\r\n        </Pagination>\r\n      </Nav>\r\n    );\r\n  }\r\n);\r\nexport default TableCore;\r\n","import { Accordion, Card } from \"@themesberg/react-bootstrap\";\nimport isequal from \"lodash.isequal\";\nimport React, { memo } from \"react\";\n\nconst AccordionComponent = memo((props) => {\n  const { data = [], className = \"\", style } = props;\n\n  const AccordionItem = (item) => {\n    const { eventKey, title, description, disabled = false } = item;\n    function handleClick(e) {\n      e.stopPropagation();\n      e.preventDefault();\n      e.nativeEvent.stopImmediatePropagation();\n    }\n    return (\n      <Accordion.Item eventKey={eventKey}>\n        <div className={disabled ? \"disabled\" : \"\"}>\n          <Accordion.Header variant=\"link\" onClick={handleClick}>\n            <span className=\"h6 mb-0 fw-bold\">{title}</span>\n          </Accordion.Header>\n        </div>\n\n        {!disabled && (\n          <Accordion.Body>\n            <Card.Body className=\"p-0 border-0\">\n              <div className=\"mb-0\">{description}</div>\n            </Card.Body>\n          </Accordion.Body>\n        )}\n      </Accordion.Item>\n    );\n  };\n\n  return (\n    <Accordion className={className} style={style}>\n      {data.map((d) => (\n        <AccordionItem key={`accordion-${d.id}`} {...d} />\n      ))}\n    </Accordion>\n  );\n}, isequal);\nexport default AccordionComponent;\n","import React, { forwardRef, memo } from \"react\";\r\nimport {\r\n  ButtonGroup,\r\n  Button,\r\n  Form,\r\n  useAccordionButton,\r\n} from \"@themesberg/react-bootstrap\";\r\nimport { isEqual } from \"lodash\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport AccordionComponent from \"../AccordionComponent\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nfunction CustomToggle({ children, eventKey, onChange, ...rest }) {\r\n  const decoratedOnClick = useAccordionButton(eventKey, (e) => {\r\n    e.stopPropagation();\r\n    onChange(e);\r\n  });\r\n\r\n  return (\r\n    <CheckboxRow onChange={decoratedOnClick} {...rest}>\r\n      {children}\r\n    </CheckboxRow>\r\n  );\r\n}\r\nexport const NestedDropdown = memo(\r\n  forwardRef(\r\n    (\r\n      {\r\n        data,\r\n        selectData,\r\n        children,\r\n        component,\r\n        onToggleItem,\r\n        resetAll,\r\n        className,\r\n        disableCheckBox = false,\r\n        onClose,\r\n      },\r\n      ref\r\n    ) => {\r\n      const items = data.map(\r\n        (\r\n          {\r\n            id,\r\n            as = ButtonGroup,\r\n            text,\r\n            checked,\r\n            displayArrow = false,\r\n            disabled = false,\r\n            props,\r\n          },\r\n          index\r\n        ) => {\r\n          return {\r\n            id: index,\r\n            eventKey: \"panel-\" + index,\r\n            title: (\r\n              <CustomToggle\r\n                key={\"DropdownRow-\" + id + \"-\" + index}\r\n                checked={checked}\r\n                onChange={() => onToggleItem(id)}\r\n                disableCheckBox={disableCheckBox}\r\n              >\r\n                <span className=\"h6 mb-0 fw-bold\">{text}</span>\r\n              </CustomToggle>\r\n            ),\r\n            description: !disabled && component({ ...props, selectData }),\r\n            disabled: disabled,\r\n          };\r\n        }\r\n      );\r\n      return (\r\n        <>\r\n          <Card className={`my-card ${className}`}>\r\n            <Card.Header className=\"card-btn\">\r\n              <Button\r\n                variant=\"secondary\"\r\n                className=\"w-100 rounded-0 rounded-top container\"\r\n                onClick={resetAll}\r\n              >\r\n                <span className=\"reset\">Reset All</span>\r\n                <Button className=\"close\" onClick={onClose}>\r\n                  <FontAwesomeIcon icon={faTimes}></FontAwesomeIcon>\r\n                </Button>\r\n              </Button>\r\n            </Card.Header>\r\n            <Card.Body className=\"p-0 rounded-0 d-flex justify-content-center\">\r\n              <AccordionComponent data={items} />\r\n            </Card.Body>\r\n          </Card>\r\n        </>\r\n      );\r\n    }\r\n  ),\r\n  isEqual\r\n);\r\nexport const CheckboxRow = React.memo(\r\n  ({ checked = true, onChange, className = \"\", disableCheckBox, children }) => {\r\n    return (\r\n      <div className={\"d-flex align-items-center \" + className}>\r\n        {!disableCheckBox && (\r\n          <Form.Check\r\n            checked={checked}\r\n            className=\"align-items-center m-0 ps-3 pe-1 justify-content-start\"\r\n            onChange={onChange}\r\n          />\r\n        )}\r\n\r\n        <div className=\"ps-2 pe-2 container-fluid d-flex justify-content-between\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  },\r\n  isEqual\r\n);\r\n","import {\r\n  faEdit,\r\n  faPlus,\r\n  faSave,\r\n  faTrash,\r\n  faWindowClose,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Modal, Spinner, Button } from \"@themesberg/react-bootstrap\";\r\nimport React, { memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { Filter } from \"./TableHeader\";\r\n\r\nconst TableButtons = memo(\r\n  ({\r\n    selectSelectedRowsExist,\r\n    selectChangesExist,\r\n    selectMode,\r\n    onAdd,\r\n    onDelete,\r\n    onDownload,\r\n    onClose,\r\n    onSave,\r\n    onChangeMode,\r\n    forceClose,\r\n    modalProps,\r\n    filterProps,\r\n    download,\r\n    remove,\r\n    edit,\r\n    add,\r\n    filter,\r\n  }) => {\r\n    const mode = useSelector(selectMode);\r\n    const editMode = mode === \"edit\";\r\n    const addMode = mode === \"addRow\";\r\n    const selectedRowsExist = useSelector(selectSelectedRowsExist);\r\n    const changesExist = useSelector(selectChangesExist);\r\n    // const modalLabels = useSelector(labelsSelector);\r\n    const [loading, setLoading] = useState(false);\r\n    const clearChanges = useCallback(() => {\r\n      onClose();\r\n    }, [onClose]);\r\n\r\n    const handleAddRow = useCallback(() => {\r\n      onChangeMode(\"addRow\");\r\n    }, [onChangeMode]);\r\n    const handleEditEnable = useCallback(() => {\r\n      clearChanges();\r\n      onChangeMode(\"edit\");\r\n    }, [onChangeMode, clearChanges]);\r\n    const handleClose = useCallback(() => {\r\n      onChangeMode(\"idle\");\r\n      clearChanges();\r\n    }, [onChangeMode, clearChanges]);\r\n    const handleSave = useCallback(() => {\r\n      setLoading(true);\r\n      onSave()\r\n        .then((r) => {\r\n          toast.success(\"Saved!\");\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          setLoading(false);\r\n          toast.error(\"Error!\");\r\n        });\r\n    }, [onSave]);\r\n    const handleDownload = useCallback(() => {\r\n      onDownload();\r\n    }, [onDownload]);\r\n    const handleDelete = useCallback(() => {\r\n      onDelete();\r\n    }, [onDelete]);\r\n\r\n    useEffect(() => {\r\n      if (editMode && !selectedRowsExist) {\r\n        onChangeMode();\r\n      }\r\n    }, [selectedRowsExist, editMode, onChangeMode]);\r\n    return (\r\n      <div className=\"d-flex flex-nowrap button-group\">\r\n        <ToastContainer\r\n          pauseOnFocusLoss={false}\r\n          position=\"top-center\"\r\n          pauseOnHover={false}\r\n          hideProgressBar\r\n          autoClose={2000}\r\n        />\r\n        {filter && <Filter {...filterProps}></Filter>}\r\n        {edit && (selectedRowsExist || (editMode && !selectedRowsExist)) && (\r\n          <MyBtn\r\n            disabled={editMode}\r\n            onClick={handleEditEnable}\r\n            value={<FontAwesomeIcon icon={faEdit} />}\r\n          />\r\n        )}\r\n        {remove && (selectedRowsExist || (editMode && !selectedRowsExist)) && (\r\n          <MyBtn\r\n            disabled={editMode}\r\n            onClick={handleDelete}\r\n            value={<FontAwesomeIcon icon={faTrash} />}\r\n          ></MyBtn>\r\n        )}\r\n\r\n        {/* {download && (\r\n          <MyBtn\r\n            disabled={editMode}\r\n            onClick={handleDownload}\r\n            value={<FontAwesomeIcon icon={faDownload} />}\r\n          />\r\n        )} */}\r\n        {(edit || add) && (editMode || addMode) && (\r\n          <MyBtn\r\n            disabled={!changesExist}\r\n            onClick={handleSave}\r\n            value={<FontAwesomeIcon icon={faSave} />}\r\n          />\r\n        )}\r\n        {add && (\r\n          <MyBtn\r\n            disabled={addMode}\r\n            onClick={handleAddRow}\r\n            value={<FontAwesomeIcon icon={faPlus} />}\r\n          />\r\n        )}\r\n\r\n        {(edit || add) && (editMode || addMode) && (\r\n          <MyBtn\r\n            variant=\"danger\"\r\n            onClick={handleClose}\r\n            value={<FontAwesomeIcon icon={faWindowClose} />}\r\n          />\r\n        )}\r\n        <Modal\r\n          show={loading}\r\n          // onHide={handleClose}\r\n          centered\r\n          contentClassName=\"bg-transparent shadow-none\"\r\n          // backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <div className=\" d-flex justify-content-center\">\r\n            <Spinner animation=\"border\" variant=\"nonary\" />\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n);\r\nconst MyBtn = (props) => {\r\n  const {\r\n    onClick = \"\",\r\n    value = \"\",\r\n    size = \"\",\r\n    variant = \"primary\",\r\n    disabled,\r\n    type,\r\n  } = props;\r\n  return (\r\n    <Button\r\n      type={type}\r\n      variant={variant}\r\n      onClick={onClick}\r\n      size={size}\r\n      disabled={disabled}\r\n    >\r\n      {value}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default TableButtons;\r\n","import { faSlidersH } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { ButtonGroup } from \"@themesberg/react-bootstrap\";\r\nimport { isEqual } from \"lodash\";\r\nimport React, { forwardRef, memo, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NestedDropdown } from \"../Filters/NestedDropdown\";\r\nimport { CustomDropdown } from \"../Filters/CustomDropdown\";\r\nimport TableButtons from \"./TableButtons\";\r\n\r\nexport const TableLabel = memo(\r\n  forwardRef(({ titleProps: { title }, buttonGroupProps }, ref) => {\r\n    return (\r\n      <div className=\"d-flex justify-content-between flex-wrap align-items-center py-0\">\r\n        {title}\r\n        <div className=\"flex-wrap d-flex col justify-content-end\">\r\n          <TableButtons ref={ref} {...buttonGroupProps}></TableButtons>\r\n        </div>\r\n      </div>\r\n    );\r\n  }),\r\n  isEqual\r\n);\r\n\r\nexport const Filter = memo((props) => {\r\n  const {\r\n    selectItemsFilter,\r\n    onToggleLabel,\r\n    nestedFilterComponent,\r\n    selectItemsNestedFilter,\r\n    onResetAllFilters,\r\n  } = props;\r\n\r\n  const data = useSelector(selectItemsFilter) || [];\r\n  const ref1 = useRef(null);\r\n  const ref2 = useRef(null);\r\n  const [show, setShow] = useState(false);\r\n  const onClose = () => setShow(false);\r\n\r\n  const items = [\r\n    <NestedDropdown\r\n      key=\"NestedDropdown\"\r\n      className=\"grid-table-filter-dropdown\"\r\n      ref={ref2}\r\n      data={data}\r\n      component={nestedFilterComponent}\r\n      onToggleItem={onToggleLabel}\r\n      resetAll={onResetAllFilters}\r\n      selectData={selectItemsNestedFilter}\r\n      onClose={onClose}\r\n    />,\r\n  ];\r\n  return (\r\n    <CustomDropdown\r\n      controlled\r\n      show={show}\r\n      toggle={setShow}\r\n      drop=\"down\"\r\n      as={ButtonGroup}\r\n      toggleClassName=\"primary-btn\"\r\n      toggleStyle={{ transition: \"none\" }}\r\n      menuClassName=\"py-0 filter-dropdown\"\r\n      ref={{ ref: ref1, refList: [ref1, ref2] }}\r\n      value={<FontAwesomeIcon icon={faSlidersH} />}\r\n    >\r\n      {items}\r\n    </CustomDropdown>\r\n  );\r\n}, isEqual);\r\n\r\nTableLabel.displayName = \"TableLabel\";\r\nTableButtons.displayName = \"TableButtons\";\r\n","import { Input } from \"@material-ui/core\";\r\nimport Slider, { SliderThumb } from \"@mui/material/Slider\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport { isEqual } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nfunction ValueLabelComponent(props) {\r\n  const { children, value } = props;\r\n\r\n  return (\r\n    <Tooltip enterTouchDelay={0} placement=\"top\" title={value}>\r\n      {children}\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nValueLabelComponent.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst RangeInput = styled(Input)(({ theme }) => ({\r\n  // color: \"#3a8589\",\r\n  height: 3,\r\n  padding: \"13px 0px\",\r\n  textAlign: \"center\",\r\n  \"& .MuiInput-input\": {\r\n    textAlign: \"center\",\r\n  },\r\n  \"&:not(.Mui-disabled):hover::before\": {\r\n    borderColor: \"#567ba0\",\r\n  },\r\n  \"&:not(.Mui-disabled)::after\": {\r\n    borderColor: \"#ff9751\",\r\n  },\r\n  \"& input[type=number]\": {\r\n    MozAppearance: \"textfield\",\r\n  },\r\n  \"& input[type=number]::-webkit-outer-spin-button\": {\r\n    WebkitAppearance: \"none\",\r\n    margin: 0,\r\n  },\r\n  \"& input[type=number]::-webkit-inner-spin-button\": {\r\n    WebkitAppearance: \"none\",\r\n    margin: 0,\r\n  },\r\n}));\r\n\r\nconst MySlider = styled(Slider)(({ theme }) => ({\r\n  color: \"#3a8589\",\r\n  height: 3,\r\n  padding: \"13px 0\",\r\n\r\n  \"& .MuiSlider-thumb\": {\r\n    height: 27,\r\n    width: 27,\r\n    backgroundColor: \"#fff\",\r\n    border: \"1px solid currentColor\",\r\n    \"& .bar\": {\r\n      height: 9,\r\n      width: 1,\r\n      backgroundColor: \"currentColor\",\r\n      marginLeft: 1,\r\n      marginRight: 1,\r\n    },\r\n  },\r\n  \"& .MuiSlider-track\": {\r\n    height: 3,\r\n  },\r\n  \"& .MuiSlider-rail\": {\r\n    color: theme.palette.mode === \"dark\" ? \"#bfbfbf\" : \"#d8d8d8\",\r\n    opacity: theme.palette.mode === \"dark\" ? undefined : 1,\r\n    height: 3,\r\n  },\r\n}));\r\n\r\nfunction ThumbComponent(props) {\r\n  const { children, ...other } = props;\r\n  return (\r\n    <SliderThumb {...other}>\r\n      {children}\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n    </SliderThumb>\r\n  );\r\n}\r\n\r\nThumbComponent.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport const MyRangeSlider = React.memo(\r\n  ({ onChange, min = 0, max = 200, gte = min, lte = max, title }) => {\r\n    const [value, setValue] = React.useState([gte, lte]);\r\n\r\n    const handleSliderChange = (event, newValue) => {\r\n      setValue(newValue);\r\n      onChange(newValue);\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n      const name = event.target.name;\r\n      const calcValue =\r\n        event.target.value > max\r\n          ? max\r\n          : event.target.value < min\r\n          ? min\r\n          : event.target.value;\r\n      const newValue =\r\n        name === \"gte\" ? [calcValue, value[1]] : [value[0], calcValue];\r\n      if (newValue !== value) {\r\n        setValue(newValue);\r\n        onChange(newValue);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Card className=\"my-card\">\r\n        {title && (\r\n          <Card.Header>\r\n            <h5 className=\"w-100 text-align-center text-center\">{title}</h5>\r\n          </Card.Header>\r\n        )}\r\n        <Card.Body className=\"mui-slider\">\r\n          <div className=\"d-flex flex-wrap\">\r\n            <div\r\n              className=\"col-12\"\r\n              style={{ paddingLeft: \"1.9rem\", paddingRight: \"1.9rem\" }}\r\n            >\r\n              <MySlider\r\n                components={{ Thumb: ThumbComponent }}\r\n                getAriaLabel={(index) =>\r\n                  index === 0 ? \"Minimum price\" : \"Maximum price\"\r\n                }\r\n                min={min}\r\n                max={max}\r\n                value={value}\r\n                onChange={handleSliderChange}\r\n              />\r\n            </div>\r\n            <div className=\"container p-0 pt-3 d-flex justify-content-between\">\r\n              <div className=\"col-4\">\r\n                <RangeInput\r\n                  value={value[0]}\r\n                  size=\"small\"\r\n                  onChange={handleInputChange}\r\n                  name=\"gte\"\r\n                  className=\"text-center w-100\"\r\n                  inputProps={{\r\n                    step: 1,\r\n                    min: min,\r\n                    max: max,\r\n                    type: \"number\",\r\n                    \"aria-labelledby\": \"input-slider\",\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"col-4\">\r\n                <RangeInput\r\n                  value={value[1]}\r\n                  size=\"small\"\r\n                  onChange={handleInputChange}\r\n                  className=\"text-center w-100\"\r\n                  name=\"lte\"\r\n                  inputProps={{\r\n                    step: 1,\r\n                    min: gte,\r\n                    max: lte,\r\n                    type: \"number\",\r\n                    \"aria-labelledby\": \"input-slider\",\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  },\r\n  isEqual\r\n);\r\n","import { Button, Card, Form } from \"@themesberg/react-bootstrap\";\r\nimport { isEqual } from \"lodash\";\r\nimport memoize from \"memoize-one\";\r\nimport React, { memo, useCallback, useRef } from \"react\";\r\nimport Scrollbars from \"react-custom-scrollbars-2\";\r\nimport { areEqual, FixedSizeList } from \"react-window\";\r\n\r\nexport const MyCheckboxFilter = React.memo(\r\n  ({ onToggleAll, onToggleOne, height = \"35px\", checkedAll, rows }) => {\r\n    return (\r\n      <>\r\n        <Card className=\"checkbox-filter-card my-card\" variant=\"primary\">\r\n          <Card.Header className=\"card-btn\">\r\n            <MyCheckboxContainer\r\n              text={<div className=\"fw-bold text-start\">Select All</div>}\r\n              handler={onToggleAll}\r\n              checked={checkedAll}\r\n              className=\"checkbox-header\"\r\n              variant={\"secondary\"}\r\n              checkboxVariant={\"tertiary\"}\r\n            />\r\n          </Card.Header>\r\n          <Card.Body className=\"p-0\">\r\n            <List data={rows} onClick={onToggleOne}></List>\r\n          </Card.Body>\r\n        </Card>\r\n      </>\r\n    );\r\n  },\r\n  isEqual\r\n);\r\nfunction MyCheckboxContainer(props) {\r\n  const {\r\n    text,\r\n    handler,\r\n    variant = \"transparent\",\r\n    checkboxVariant = \"primary\",\r\n    hover = \"\",\r\n    className = \"\",\r\n    height = \"auto\",\r\n    checked,\r\n  } = props;\r\n  const ref = useRef(null);\r\n\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      onClick={handler}\r\n      className={className}\r\n      style={{ height }}\r\n    >\r\n      <div className=\"w-100 d-flex justify-content-between\">\r\n        <div className=\"text-start\">{text}</div>\r\n        <Form.Check className=\"ps-4 d-flex justify-content-between g-0 align-items-center\">\r\n          <div className=\"align-items-center d-flex\">\r\n            <Form.Check.Input\r\n              ref={ref}\r\n              type=\"checkbox\"\r\n              variant={checkboxVariant}\r\n              disabled\r\n              checked={checked}\r\n            />\r\n          </div>\r\n        </Form.Check>\r\n      </div>\r\n    </Button>\r\n  );\r\n}\r\nconst createItemData = memoize((items, toggleItemActive) => ({\r\n  items,\r\n  toggleItemActive,\r\n}));\r\n\r\nconst List = memo(({ data, onClick }) => {\r\n  const itemData = createItemData(data, onClick);\r\n  return (\r\n    <FixedSizeList\r\n      outerElementType={CustomScrollbarsVirtualList}\r\n      className=\"List\"\r\n      height={300}\r\n      itemCount={data.length}\r\n      itemData={itemData}\r\n      itemSize={35}\r\n      width={\"100%\"}\r\n    >\r\n      {Row}\r\n    </FixedSizeList>\r\n  );\r\n}, isEqual);\r\nconst Row = memo(({ data, index, style }) => {\r\n  const { items, toggleItemActive, selectData } = data;\r\n  const item = items[index];\r\n  return (\r\n    <div style={style}>\r\n      <MyCheckboxContainer\r\n        key={\"MyCheckboxContainer\" + index}\r\n        text={item.value.text}\r\n        variant={\"transparent\"}\r\n        checked={item.checked}\r\n        handler={() => toggleItemActive(item.value.id, index)}\r\n        className=\"checkbox-row\"\r\n        height={35}\r\n      />\r\n    </div>\r\n  );\r\n}, areEqual);\r\n\r\nconst CustomScrollbars = memo(({ onScroll, forwardedRef, style, children }) => {\r\n  const refSetter = useCallback((scrollbarsRef) => {\r\n    if (scrollbarsRef) {\r\n      forwardedRef(scrollbarsRef.view);\r\n    } else {\r\n      forwardedRef(null);\r\n    }\r\n  }, []);\r\n  return (\r\n    <Scrollbars\r\n      ref={refSetter}\r\n      style={{ ...style, overflow: \"hidden\" }}\r\n      onScroll={onScroll}\r\n    >\r\n      {children}\r\n    </Scrollbars>\r\n  );\r\n}, isEqual);\r\n\r\nconst CustomScrollbarsVirtualList = React.forwardRef((props, ref) => (\r\n  <CustomScrollbars {...props} forwardedRef={ref} />\r\n));\r\n","import { debounce, isEqual } from \"lodash\";\r\nimport { memo, useCallback, useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { MyRangeSlider } from \"../MyRangeSlider\";\r\nimport { MyCheckboxFilter } from \"..//MyCheckbox\";\r\nimport { DateSelector } from \"../DatePicker\";\r\nimport { TimeSelectorRange } from \"../TimePicker\";\r\n\r\nconst FilterComponent = memo((props) => {\r\n  const { type, selectData, label, idx, ...rest } = props;\r\n  const selector = useCallback(\r\n    (state) => selectData(state, { label, idx }),\r\n    [label, idx, selectData]\r\n  );\r\n  const data = useSelector(selector);\r\n  switch (type) {\r\n    case \"checkbox\":\r\n      return <CheckboxWrapper {...rest} data={data} label={label} />;\r\n    case \"time\":\r\n      return <TimeWrapper {...rest} data={data} label={label}></TimeWrapper>;\r\n    case \"range\":\r\n      return <RangeWrapper {...rest} data={data} label={label} />;\r\n    case \"date\":\r\n      return <DateWrapper {...rest} data={data} label={label} />;\r\n    default:\r\n      return <div>error</div>;\r\n  }\r\n}, isEqual);\r\n\r\nconst CheckboxWrapper = memo(\r\n  ({ onToggleCheckbox, onToggleAllCheckbox, label, data, ...rest }) => {\r\n    const toggleOne = useCallback(\r\n      (value) => {\r\n        onToggleCheckbox({ label, value });\r\n      },\r\n      [label, onToggleCheckbox]\r\n    );\r\n    const toggleAll = useCallback(() => {\r\n      onToggleAllCheckbox({ label });\r\n    }, [label, onToggleAllCheckbox]);\r\n\r\n    const rows = useMemo(() => data.rows, [data]);\r\n    const checkedAll = useMemo(() => data.checkedAll, [data]);\r\n    return (\r\n      <MyCheckboxFilter\r\n        {...rest}\r\n        onToggleAll={toggleAll}\r\n        onToggleOne={toggleOne}\r\n        checkedAll={checkedAll}\r\n        rows={rows}\r\n      />\r\n    );\r\n  },\r\n  isEqual\r\n);\r\nconst RangeWrapper = memo(({ onChangeRange, label, data, ...rest }) => {\r\n  const handleChangeRangeSlider = useCallback(\r\n    (values) => {\r\n      onChangeRange({ label, gte: values[0], lte: values[1] });\r\n    },\r\n    [onChangeRange, label]\r\n  );\r\n  const debouncedChangeRangeSlider = debounce(handleChangeRangeSlider, 800);\r\n\r\n  return (\r\n    <MyRangeSlider {...rest} {...data} onChange={debouncedChangeRangeSlider} />\r\n  );\r\n}, isEqual);\r\n\r\nconst TimeWrapper = memo(({ onChangeRange, label, data }) => {\r\n  const handleChangeTimePicker = useCallback(\r\n    ({ gte, lte }) => {\r\n      onChangeRange({ label, gte, lte });\r\n    },\r\n    [label, onChangeRange]\r\n  );\r\n  return <TimeSelectorRange onChange={handleChangeTimePicker} {...data} />;\r\n}, isEqual);\r\nconst DateWrapper = memo(({ onChangeRange, onReset, data, label, ...rest }) => {\r\n  const dateChange = useCallback(\r\n    (dates) => {\r\n      dates.length === 2 &&\r\n        onChangeRange({ label, gte: dates[0], lte: dates[1] });\r\n      dates.length === 0 && onReset({ label });\r\n    },\r\n    [label, onChangeRange, onReset]\r\n  );\r\n  return (\r\n    <DateSelector\r\n      {...data}\r\n      style={{ width: \"100%\" }}\r\n      disableMonthSwap\r\n      onChange={dateChange}\r\n    />\r\n  );\r\n}, isEqual);\r\n\r\nexport default FilterComponent;\r\n","import React, { useEffect, useState, memo, useCallback } from \"react\";\r\nimport { Button, Card } from \"@themesberg/react-bootstrap\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport moment from \"moment\";\r\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { isEqual } from \"lodash\";\r\n\r\nexport const MonthSelectorDropdown = ({\r\n  date,\r\n  title,\r\n  format = \"YYYY.MM.DD\",\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <>\r\n      <Dropdown>\r\n        <Dropdown.Toggle variant=\"transparent\" className=\"btn-title\">\r\n          <h5 className=\"text-wrap text-start\">\r\n            {title} {moment(date, format).format(\"MMMM YYYY\")}\r\n          </h5>\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu className=\"m-0 p-0\">\r\n          <MonthSelector {...rest} date={date}></MonthSelector>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </>\r\n  );\r\n};\r\nexport const MonthButton = (props) => {\r\n  const { value, onClick, variant } = props;\r\n  return (\r\n    <>\r\n      <div className=\"fluid-container p-1\">\r\n        <Button\r\n          className=\"w-100 btn-month\"\r\n          variant={variant}\r\n          onClick={onClick}\r\n          onMouseDown={(e) => e.preventDefault()}\r\n        >\r\n          {value}\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport const MonthSelector = (props) => {\r\n  const { date, onChange } = props;\r\n\r\n  // const newDate = moment(date, \"MM/YYYY\").format(\"YYYY\");\r\n  const [year, setYear] = useState(moment(date, \"YYYY.MM\").format(\"YYYY\"));\r\n  const [month, setMonth] = useState(moment(date, \"YYYY.MM\").format(\"MMM\"));\r\n\r\n  useEffect(() => {\r\n    setYear(moment(date, \"YYYY.MM\").format(\"YYYY\"));\r\n    setMonth(moment(date, \"YYYY.MM\").format(\"MMM\"));\r\n  }, [date]);\r\n\r\n  const handlerMonthChange = useCallback(\r\n    (m) => {\r\n      const change = moment(m + \".\" + year, \"MMM.YYYY\").toISOString();\r\n      onChange && onChange(change);\r\n    },\r\n    [year, onChange]\r\n  );\r\n  const handlerYearChange = useCallback(\r\n    (y) => {\r\n      onChange && y === 1\r\n        ? onChange(\r\n            moment(month + \".\" + year, \"MMM.YYYY\")\r\n              .add(1, \"years\")\r\n              .toISOString()\r\n          )\r\n        : onChange(\r\n            moment(month + \".\" + year, \"MMM.YYYY\")\r\n              .subtract(1, \"years\")\r\n              .toISOString()\r\n          );\r\n    },\r\n    [month, year, onChange]\r\n  );\r\n\r\n  const data = { handlerYearChange, handlerMonthChange, month, year };\r\n  return (\r\n    <>\r\n      <MonthSelectorComponent data={data}></MonthSelectorComponent>\r\n    </>\r\n  );\r\n};\r\nconst MonthSelectorComponent = memo((props) => {\r\n  const { handlerYearChange, handlerMonthChange, year, month } = props.data;\r\n\r\n  const [activeMonth, setActiveMonth] = useState(month);\r\n  const handleClick = useCallback(\r\n    (value) => {\r\n      setActiveMonth(value);\r\n      handlerMonthChange(value);\r\n    },\r\n    [handlerMonthChange]\r\n  );\r\n\r\n  const colorize = useCallback(\r\n    (m) => {\r\n      return m === activeMonth ? \"primary\" : \"light \";\r\n    },\r\n    [activeMonth]\r\n  );\r\n  return (\r\n    <>\r\n      <Card\r\n        border=\"light\"\r\n        className=\"shadow-sm flex-fill month-selector my-card\"\r\n        style={{ width: \"250px\", minWidth: \"250px\" }}\r\n      >\r\n        <Card.Header>\r\n          <div className=\"w-100 d-flex justify-content-between\">\r\n            <Button\r\n              className=\"btn-arrow-left\"\r\n              variant=\"primary\"\r\n              onClick={() => handlerYearChange(-1)}\r\n            >\r\n              <FontAwesomeIcon icon={faArrowLeft}></FontAwesomeIcon>\r\n            </Button>\r\n            <h5 className=\"text-center m-0\">{year}</h5>\r\n            <Button\r\n              className=\"btn-arrow-right\"\r\n              variant=\"primary\"\r\n              onClick={() => handlerYearChange(1)}\r\n            >\r\n              <FontAwesomeIcon icon={faArrowRight}></FontAwesomeIcon>\r\n            </Button>\r\n          </div>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <div className=\"d-flex flex-wrap\">\r\n            {moment.monthsShort().map((month, index) => {\r\n              return (\r\n                <div\r\n                  className=\"col-4 text-center text-nowrap\"\r\n                  key={\"month-Short\" + index}\r\n                >\r\n                  <MonthButton\r\n                    value={month}\r\n                    onClick={() => handleClick(month)}\r\n                    variant={colorize(month)}\r\n                  ></MonthButton>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}, isEqual);\r\n","import React, { useEffect, useState, memo, useCallback } from \"react\";\r\nimport { Button, Card } from \"@themesberg/react-bootstrap\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport moment from \"moment\";\r\nimport { faArrowLeft, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { isEqual } from \"lodash\";\r\n\r\nexport const YearSelectorDropdown = ({\r\n  date,\r\n  title,\r\n  format = \"YYYY.MM.DD\",\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <>\r\n      <Dropdown>\r\n        <Dropdown.Toggle\r\n          // split\r\n          variant=\"transparent\"\r\n          className=\"btn-title\"\r\n          // style={{ backgroundColor: \"#f5f8fb\" }}\r\n        >\r\n          <h5 className=\"text-wrap text-start\">\r\n            {title} {date}\r\n          </h5>\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu className=\"m-0 p-0\">\r\n          <YearSelector {...rest} date={date}></YearSelector>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </>\r\n  );\r\n};\r\nexport const YearSelector = (props) => {\r\n  const { date, onChange } = props;\r\n\r\n  const [year, setYear] = useState(date);\r\n\r\n  useEffect(() => {\r\n    setYear(date);\r\n  }, [date]);\r\n\r\n  const handlerYearChange = useCallback(\r\n    (y) => {\r\n      onChange && y === 1\r\n        ? onChange(moment(year, \"YYYY\").add(1, \"years\").format(\"YYYY\"))\r\n        : onChange(moment(year, \"YYYY\").subtract(1, \"years\").format(\"YYYY\"));\r\n    },\r\n    [year, onChange]\r\n  );\r\n\r\n  const data = { handlerYearChange, year };\r\n  return (\r\n    <>\r\n      <YearSelectorComponent data={data}></YearSelectorComponent>\r\n    </>\r\n  );\r\n};\r\nconst YearSelectorComponent = memo((props) => {\r\n  const { handlerYearChange, year } = props.data;\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        border=\"light\"\r\n        className=\"shadow-sm flex-fill year-selector my-card\"\r\n        style={{ width: \"250px\", minWidth: \"250px\" }}\r\n      >\r\n        <Card.Header>\r\n          <div className=\"w-100 d-flex justify-content-between\">\r\n            <Button\r\n              className=\"btn-arrow-left\"\r\n              variant=\"primary\"\r\n              onClick={() => handlerYearChange(-1)}\r\n            >\r\n              <FontAwesomeIcon icon={faArrowLeft}></FontAwesomeIcon>\r\n            </Button>\r\n            <h5 className=\"text-center m-0\">{year}</h5>\r\n            <Button\r\n              className=\"btn-arrow-right\"\r\n              variant=\"primary\"\r\n              onClick={() => handlerYearChange(1)}\r\n            >\r\n              <FontAwesomeIcon icon={faArrowRight}></FontAwesomeIcon>\r\n            </Button>\r\n          </div>\r\n        </Card.Header>\r\n      </Card>\r\n    </>\r\n  );\r\n}, isEqual);\r\n","import { Button } from \"@themesberg/react-bootstrap\";\r\nimport isEqual from \"lodash.isequal\";\r\nimport moment from \"moment\";\r\nimport { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getGridTitle } from \"../../pages/myComponents/util/labels\";\r\nimport { MonthSelectorDropdown } from \"../MonthPicker\";\r\nimport { YearSelectorDropdown } from \"../YearPicker\";\r\n\r\nconst TitleComponent = memo(({ entityId, selectTableDate, onChange }) => {\r\n  const title = getGridTitle(entityId);\r\n  const tableDate = useSelector(selectTableDate);\r\n\r\n  return entityId === \"workHours\" ||\r\n    entityId === \"tours\" ||\r\n    entityId === \"publicHolidays\" ||\r\n    entityId === \"workHoursByDate\" ? (\r\n    <MonthSelectorDropdown\r\n      onChange={onChange}\r\n      title={title}\r\n      date={moment(tableDate, moment.ISO_8601).format(\"YYYY.MM\")}\r\n    />\r\n  ) : entityId === \"\" ? (\r\n    <YearSelectorDropdown\r\n      onChange={onChange}\r\n      title={title}\r\n      date={moment(tableDate, moment.ISO_8601).format(\"YYYY\")}\r\n    />\r\n  ) : (\r\n    <Button variant=\"transparent\" className=\"btn-title text-wrap\">\r\n      <h5> {title} </h5>\r\n    </Button>\r\n  );\r\n}, isEqual);\r\nexport default TitleComponent;\r\n","import moment from \"moment\";\r\nimport { useCallback, useMemo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createSelector } from \"reselect\";\r\nimport FilterComponent from \"../../components/Filters/FilterComponent\";\r\nimport TitleComponent from \"../../components/Table/TableTitle\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport {\r\n  getGridDateFilter,\r\n  getGridLabelFn,\r\n  getGridLabelFormat,\r\n  getGridRowClassName,\r\n  getGridTableConnections,\r\n  getGridUrl,\r\n  getGridWidgets,\r\n} from \"../myComponents/util/labels\";\r\nexport const useGridSelectors = ({\r\n  selectors: {\r\n    metaSelector,\r\n    // rowsSelector,\r\n    labelsSelector,\r\n    tablesSelector,\r\n    modesSelector,\r\n    filtersSelector,\r\n    changesSelector,\r\n  },\r\n  entityId,\r\n}) => {\r\n  const selectAllRowsById = useCallback(\r\n    (state) => tablesSelector.selectById(state, entityId).rows,\r\n    [tablesSelector, entityId]\r\n  );\r\n\r\n  const selectAllLabelsById = useMemo(\r\n    () => labelsSelector.selectEntities,\r\n    [labelsSelector]\r\n  );\r\n  const selectLoading = useCallback(\r\n    (state) =>\r\n      tablesSelector.selectById(state, entityId)\r\n        ? tablesSelector.selectById(state, entityId).loading\r\n        : true,\r\n    [tablesSelector, entityId]\r\n  );\r\n  const selectSelectedLabels = useCallback(\r\n    (state) =>\r\n      tablesSelector.selectById(state, entityId)\r\n        ? tablesSelector.selectById(state, entityId).selectedLabels\r\n        : [],\r\n    [tablesSelector, entityId]\r\n  );\r\n  const selectSelectedRowsExist = useCallback(\r\n    (state) =>\r\n      tablesSelector.selectById(state, entityId) &&\r\n      tablesSelector.selectById(state, entityId).selectedRows &&\r\n      tablesSelector.selectById(state, entityId).selectedRows.length > 0,\r\n    [tablesSelector, entityId]\r\n  );\r\n  const selectChangesExist = useCallback(\r\n    (state) =>\r\n      (tablesSelector.selectById(state, entityId) &&\r\n        tablesSelector.selectById(state, entityId).changes &&\r\n        tablesSelector.selectById(state, entityId).changes.length > 0) ||\r\n      false,\r\n    [tablesSelector, entityId]\r\n  );\r\n  const selectShownLabels = useCallback(\r\n    (state) =>\r\n      tablesSelector.selectById(state, entityId)\r\n        ? tablesSelector.selectById(state, entityId).labels\r\n        : [],\r\n    [tablesSelector, entityId]\r\n  );\r\n  const selectShownRows = useCallback(\r\n    (state) =>\r\n      tablesSelector.selectById(state, entityId)\r\n        ? tablesSelector.selectById(state, entityId).sortedRowsIds\r\n        : [],\r\n    [tablesSelector, entityId]\r\n  );\r\n  // const selectAllRows = useCallback(\r\n  //   (state) => rowsSelector.selectIds(state, entityId) || [],\r\n  //   [entityId, rowsSelector]\r\n  // );\r\n  const selectMode = useCallback(\r\n    (state) =>\r\n      (modesSelector.selectById(state, entityId) &&\r\n        modesSelector.selectById(state, entityId).value) ||\r\n      false,\r\n    [entityId, modesSelector]\r\n  );\r\n  const selectSettings = useCallback(\r\n    (state) => metaSelector.selectById(state, \"settings\") || [],\r\n    [metaSelector]\r\n  );\r\n  const selectDrivers = useCallback(\r\n    (state) => metaSelector.selectById(state, \"drivers\")?.drivers || [],\r\n    [metaSelector]\r\n  );\r\n  const selectPaginationData = useCallback(\r\n    (state) =>\r\n      (tablesSelector.selectById(state, entityId) &&\r\n        tablesSelector.selectById(state, entityId).pagination) ||\r\n      [],\r\n    [tablesSelector, entityId]\r\n  );\r\n\r\n  const selectChanges = useCallback(\r\n    (state) => changesSelector.selectEntities(state) || [],\r\n    [changesSelector]\r\n  );\r\n  const selectSelectedRows = useCallback(\r\n    (state) => tablesSelector.selectById(state, entityId).selectedRows || [],\r\n    [tablesSelector, entityId]\r\n  );\r\n  const selectChangesOverRows = useMemo(\r\n    () =>\r\n      createSelector(\r\n        [selectShownRows, selectAllRowsById, selectChanges],\r\n        (shownRows, allRowsById, changesById) => {\r\n          return shownRows.map((r) => ({\r\n            ...allRowsById[r],\r\n            ...changesById[r],\r\n          }));\r\n        }\r\n      ),\r\n    [selectShownRows, selectAllRowsById, selectChanges]\r\n  );\r\n  const selectAdd = useCallback(\r\n    (state) => {\r\n      const addRow = tablesSelector.selectById(state, entityId).addRow;\r\n      const id = Object.entries(addRow)[0][0];\r\n      const change = changesSelector.selectById(state, id);\r\n      return { ...Object.entries(addRow)[0][1], ...change };\r\n    },\r\n    [tablesSelector, entityId, changesSelector]\r\n  );\r\n\r\n  const selectAddRow = useMemo(\r\n    () =>\r\n      createSelector(\r\n        [selectShownLabels, selectAllLabelsById, selectAdd],\r\n        (labelsIds, allLabelsById, row) => {\r\n          const shownLabels = labelsIds.map((id) => allLabelsById[id]);\r\n          return {\r\n            ...row,\r\n            ...shownLabels\r\n              .map((label) => {\r\n                return {\r\n                  [label.id]: getGridLabelFormat(entityId, label.idx)\r\n                    ? getGridLabelFormat(entityId, label.idx)(row[label.id])\r\n                    : row[label.id],\r\n                };\r\n              })\r\n              .reduce((a, b) => ({ ...a, ...b }), {}),\r\n          };\r\n        }\r\n      ),\r\n    [selectShownLabels, selectAllLabelsById, selectAdd, entityId]\r\n  );\r\n\r\n  const selectShownHeadersReactTable = useMemo(\r\n    () =>\r\n      createSelector(\r\n        [selectShownLabels, selectAllLabelsById, selectSettings, selectDrivers],\r\n        (labels, allLabelsById, settings, drivers) => {\r\n          return labels.map((l) => {\r\n            const {\r\n              text,\r\n              id,\r\n              idx,\r\n              type,\r\n              measurement,\r\n              maxWidth,\r\n              minWidth,\r\n              links,\r\n              ignoreSort,\r\n              componentId,\r\n            } = allLabelsById[l];\r\n\r\n            const props = {\r\n              Header: text,\r\n              id,\r\n              idx,\r\n              type,\r\n              ignoreSort,\r\n              measurement: measurement,\r\n              minWidth,\r\n              maxWidth,\r\n              links:\r\n                links &&\r\n                links.map(({ connectionIdx, ...rest }) => ({\r\n                  format: getGridLabelFn(entityId, connectionIdx),\r\n                  ...rest,\r\n                })),\r\n            };\r\n            if (type === \"date\")\r\n              return {\r\n                ...props,\r\n              };\r\n            else if (type === \"customComponent\")\r\n              return { ...props, componentId };\r\n            else if (type !== \"constant\") return props;\r\n            else\r\n              return {\r\n                ...props,\r\n                availableValues:\r\n                  idx === \"driver\"\r\n                    ? drivers?.map(({ uid, name, email }) => ({\r\n                        value: uid,\r\n                        label: name || email,\r\n                      }))\r\n                    : settings[idx].map((_) => ({\r\n                        value: _ + \"\",\r\n                        label: _ + \"\",\r\n                      })) || [],\r\n              };\r\n          });\r\n        }\r\n      ),\r\n    [\r\n      selectShownLabels,\r\n      selectAllLabelsById,\r\n      selectSettings,\r\n      selectDrivers,\r\n      entityId,\r\n    ]\r\n  );\r\n  const selectReactTableData = useMemo(\r\n    () =>\r\n      createSelector(\r\n        [selectShownLabels, selectAllLabelsById, selectChangesOverRows],\r\n        (labelsIds, allLabelsById, shownValues) => {\r\n          const shownLabels = labelsIds.map((id) => allLabelsById[id]);\r\n          return shownValues.map((row) => ({\r\n            id: row.id,\r\n            className: getGridRowClassName(\r\n              entityId,\r\n              labelsIds.reduce(\r\n                (a, b) => ({ ...a, [allLabelsById[b].idx]: row[b] }),\r\n                {}\r\n              )\r\n            ),\r\n            ...shownLabels\r\n              .map((label) => {\r\n                return {\r\n                  [label.id]: getGridLabelFormat(entityId, label.idx)\r\n                    ? getGridLabelFormat(entityId, label.idx)(row[label.id])\r\n                    : row[label.id],\r\n                };\r\n              })\r\n              .reduce((a, b) => ({ ...a, ...b }), {}),\r\n          }));\r\n        }\r\n      ),\r\n    [selectShownLabels, selectAllLabelsById, selectChangesOverRows, entityId]\r\n  );\r\n\r\n  const selectHiddenHeadersReactTable = useMemo(\r\n    () =>\r\n      createSelector(\r\n        [selectShownLabels, selectSelectedLabels],\r\n        (labels, selectedLabels) => {\r\n          return labels.reduce(\r\n            (a, id) => ({\r\n              ...a,\r\n              [id]: selectedLabels.includes(id) ? \"table-cell\" : \"none\",\r\n            }),\r\n            {}\r\n          );\r\n        }\r\n      ),\r\n    [selectShownLabels, selectSelectedLabels]\r\n  );\r\n  const selectLabelsModal = useMemo(\r\n    () =>\r\n      createSelector(\r\n        [selectAllLabelsById, selectShownLabels, selectSettings],\r\n        (labelsById, allLabelsId, availableValues) => {\r\n          return allLabelsId.map((labelId) => {\r\n            const {\r\n              id,\r\n              idx,\r\n              text,\r\n              type,\r\n              measurement,\r\n              grid,\r\n              page,\r\n              required,\r\n              priority,\r\n            } = labelsById[labelId];\r\n            const props = {\r\n              id,\r\n              idx,\r\n              text,\r\n              type,\r\n              measurement,\r\n              grid,\r\n              page,\r\n              required,\r\n              priority,\r\n              // maxWidth: maxWidthByType(type),\r\n              placeholder: type === \"date\" ? moment().format(\"DD.MM.YYYY\") : \"\",\r\n              // getGridL,\r\n            };\r\n\r\n            return type === \"constant\"\r\n              ? { ...props, availableValues: availableValues[idx] }\r\n              : type === \"date\"\r\n              ? { ...props, portal: false, withButton: false }\r\n              : props;\r\n          });\r\n        }\r\n      ),\r\n    [selectAllLabelsById, selectShownLabels, selectSettings]\r\n  );\r\n  const selectCheckedFilters = useCallback(\r\n    (state) =>\r\n      (tablesSelector.selectById(state, entityId) &&\r\n        tablesSelector.selectById(state, entityId).selectedLabels) ||\r\n      [],\r\n    [entityId, tablesSelector]\r\n  );\r\n  const selectSortedHeadersReactTable = useCallback(\r\n    (state) => {\r\n      const sort =\r\n        tablesSelector.selectById(state, entityId) &&\r\n        tablesSelector.selectById(state, entityId).sort;\r\n      const id =\r\n        sort &&\r\n        tablesSelector.selectById(state, entityId) &&\r\n        tablesSelector.selectById(state, entityId).nanoids &&\r\n        tablesSelector.selectById(state, entityId).nanoids[sort.id];\r\n      return { id, order: sort && sort.order };\r\n    },\r\n    [entityId, tablesSelector]\r\n  );\r\n\r\n  const paramsSelector = useCallback((state, params) => params, []);\r\n\r\n  const selectFilter = useCallback(\r\n    (state) => tablesSelector.selectById(state, entityId).filters || {},\r\n    [tablesSelector, entityId]\r\n  );\r\n\r\n  const selectDate = useCallback(\r\n    (state) =>\r\n      (metaSelector.selectById(state, \"date\") &&\r\n        metaSelector.selectById(state, \"date\").value) ||\r\n      moment().format(\"MM.YYYY\"),\r\n    [metaSelector]\r\n  );\r\n\r\n  const selectTableDate = useCallback(\r\n    (state) => tablesSelector.selectById(state, entityId).date,\r\n    [tablesSelector, entityId]\r\n  );\r\n\r\n  const selectConstantId = createSelector(\r\n    [selectSettings, selectDrivers, paramsSelector],\r\n    (constants, drivers, { idx }) =>\r\n      idx === \"driver\"\r\n        ? drivers?.map(({ uid, email, name }) => ({\r\n            id: uid,\r\n            text: name || email,\r\n          }))\r\n        : constants[idx]?.map((c) => ({ id: c, text: c })) || []\r\n  );\r\n  const selectLabelId = createSelector(\r\n    [selectAllLabelsById, paramsSelector],\r\n    (allLabelsById, { label }) => allLabelsById[label]\r\n  );\r\n  const selectFilterId = createSelector(\r\n    [selectFilter, paramsSelector],\r\n    (filterById, { idx }) => filterById[idx] || {}\r\n  );\r\n  const selectItemsNestedFilter = createSelector(\r\n    [selectConstantId, selectLabelId, selectFilterId, selectTableDate],\r\n    (\r\n      constantEntity,\r\n      { max, min, measurement, filterType },\r\n      { gte, lte, neq },\r\n      date\r\n    ) => {\r\n      switch (filterType) {\r\n        case \"date\": {\r\n          return {\r\n            year: moment(date).format(\"YYYY\"),\r\n            month: moment(date).format(\"MM\"),\r\n            from: gte,\r\n            to: lte,\r\n          };\r\n        }\r\n        case \"range\": {\r\n          return {\r\n            max,\r\n            min,\r\n            title: measurement,\r\n            gte,\r\n            lte,\r\n          };\r\n        }\r\n        case \"time\": {\r\n          return {\r\n            gte,\r\n            lte,\r\n          };\r\n        }\r\n        case \"checkbox\": {\r\n          const checkedAll = neq ? neq.length === 0 : true;\r\n          const rows =\r\n            constantEntity?.map((v) => ({\r\n              value: v,\r\n              checked: neq ? !neq.includes(v.id) : true,\r\n            })) || [];\r\n          return { checkedAll, rows };\r\n        }\r\n        default:\r\n          return {};\r\n      }\r\n    }\r\n  );\r\n  const selectItemsFilter = createSelector(\r\n    [\r\n      selectShownLabels,\r\n      selectSettings,\r\n      selectDrivers,\r\n      selectAllLabelsById,\r\n      selectCheckedFilters,\r\n    ],\r\n    (shownLabels, constants, drivers, allLabelsById, checkedFilters) => {\r\n      return shownLabels\r\n        .filter((label) => !allLabelsById[label].hidden)\r\n        .map((label) => {\r\n          const text = allLabelsById[label].text;\r\n          const filterType = allLabelsById[label].filterType;\r\n          const checked = checkedFilters.includes(label);\r\n          const idx = allLabelsById[label].idx;\r\n          const disabled =\r\n            !filterType ||\r\n            (filterType === \"checkbox\"\r\n              ? idx === \"driver\"\r\n                ? !drivers || drivers.length < 0\r\n                : !constants[idx] || constants[idx].length < 0\r\n              : false);\r\n\r\n          const props = {\r\n            type: filterType,\r\n            label,\r\n            idx,\r\n          };\r\n          return {\r\n            disabled,\r\n            id: label,\r\n            displayArrow: !disabled,\r\n            text,\r\n            checked,\r\n            props,\r\n          };\r\n        });\r\n    }\r\n  );\r\n\r\n  return {\r\n    selectSelectedRows,\r\n    selectDate,\r\n    selectTableDate,\r\n    selectLabelsModal,\r\n    selectHiddenHeadersReactTable,\r\n    selectShownHeadersReactTable,\r\n    selectReactTableData,\r\n    selectSettings,\r\n    selectMode,\r\n    selectAddRow,\r\n    selectShownRows,\r\n    selectShownLabels,\r\n    selectChangesExist,\r\n    selectSelectedRowsExist,\r\n    selectAllRowsById,\r\n    selectAllLabelsById,\r\n    selectSelectedLabels,\r\n    selectNestedCheckboxFilter: selectFilter,\r\n    selectItemsFilter,\r\n    selectPaginationData,\r\n    selectSortedHeadersReactTable,\r\n    selectLoading,\r\n    selectItemsNestedFilter,\r\n  };\r\n};\r\n\r\nexport const useGridCallbacks = ({\r\n  actions: {\r\n    addChange,\r\n    setSelectedRows,\r\n    resetChanges,\r\n    changeMode,\r\n    toggleColumn,\r\n    onSelectRow,\r\n    toggleAllChecked,\r\n    fetchAndInitEntityGrid,\r\n    fetchUpdatedEntity,\r\n    fetchSortedEntityGrid,\r\n    fetchPage,\r\n    fetchFiltered,\r\n    postRows,\r\n    deleteRows,\r\n  },\r\n  entityId,\r\n  dispatch,\r\n  getHeader,\r\n}) => {\r\n  const onCellChange = useCallback(\r\n    ({ changes, rowId }) =>\r\n      dispatch(addChange({ id: entityId, changes, rowId })),\r\n    [dispatch, entityId, addChange]\r\n  );\r\n  const setSelectedRowsCallback = useCallback(\r\n    (rows) => {\r\n      dispatch(setSelectedRows({ id: entityId, rows }));\r\n    },\r\n    [dispatch, entityId, setSelectedRows]\r\n  );\r\n  const onSelectRowCallback = useCallback(\r\n    (rowId) => {\r\n      dispatch(onSelectRow({ id: entityId, rowId }));\r\n    },\r\n    [dispatch, entityId, onSelectRow]\r\n  );\r\n  const onSelectAllRowsCallback = useCallback(() => {\r\n    dispatch(toggleAllChecked(entityId));\r\n  }, [dispatch, entityId, toggleAllChecked]);\r\n  const onToggleSort = useCallback(\r\n    (labelId) => {\r\n      getHeader().then((header) =>\r\n        dispatch(fetchSortedEntityGrid({ entityId, labelId, header }))\r\n      );\r\n    },\r\n    [dispatch, entityId, fetchSortedEntityGrid, getHeader]\r\n  );\r\n  const forceClose = useCallback(() => {\r\n    dispatch(resetChanges(entityId));\r\n  }, [dispatch, entityId, resetChanges]);\r\n\r\n  const onChangeMode = useCallback(\r\n    (mode) => {\r\n      dispatch(changeMode({ entityId, mode }));\r\n    },\r\n    [dispatch, entityId, changeMode]\r\n  );\r\n  const onSave = useCallback(() => {\r\n    return getHeader().then((header) => {\r\n      return dispatch(postRows({ entityId, header })).then(({ payload }) => {\r\n        if (payload.status !== 200) throw new Error(payload.message);\r\n        const connections = getGridTableConnections(entityId)?.onUpdate || [];\r\n        const promises = [...connections, entityId].map((id) =>\r\n          dispatch(fetchUpdatedEntity({ entityId: id, header }))\r\n        );\r\n        return dispatch(fetchUpdatedEntity({ entityId, header })).then(\r\n          Promise.all(promises)\r\n        );\r\n      });\r\n    });\r\n  }, [dispatch, entityId, fetchUpdatedEntity, postRows, getHeader]);\r\n  const onClose = useCallback(() => {\r\n    dispatch(resetChanges(entityId));\r\n  }, [dispatch, entityId, resetChanges]);\r\n  const onDownload = useCallback(() => {\r\n    console.log(\"on Download\");\r\n  }, []);\r\n  const onAdd = useCallback(() => {\r\n    console.log(\"on Add\");\r\n  }, []);\r\n  const onDelete = useCallback(() => {\r\n    getHeader().then((header) =>\r\n      dispatch(deleteRows({ entityId, header })).then(() => {\r\n        const connections = getGridTableConnections(entityId)?.onUpdate || [];\r\n        const promises = [...connections, entityId].map((id) =>\r\n          dispatch(fetchUpdatedEntity({ entityId: id, header }))\r\n        );\r\n        return dispatch(fetchUpdatedEntity({ entityId, header })).then(\r\n          Promise.all(promises)\r\n        );\r\n      })\r\n    );\r\n  }, [dispatch, entityId, fetchUpdatedEntity, deleteRows, getHeader]);\r\n\r\n  const onChangeCurrentYearMonth = useCallback(\r\n    (date) => {\r\n      return getHeader().then((header) =>\r\n        dispatch(\r\n          fetchUpdatedEntity({\r\n            entityId,\r\n            initialFilters: {\r\n              date: { eq: [moment(date).format(\"YYYY.MM\")] },\r\n            },\r\n            selectedRows: [],\r\n            date,\r\n            header,\r\n          })\r\n        ).then(() => {\r\n          const connections =\r\n            getGridTableConnections(entityId)?.onDateChange || [];\r\n          const promises = connections.map((id) => {\r\n            return dispatch(\r\n              fetchUpdatedEntity({\r\n                entityId: id,\r\n                initialFilters: getGridDateFilter(id, date),\r\n                filters: { date: undefined },\r\n                header,\r\n              })\r\n            );\r\n          });\r\n          return Promise.all(promises);\r\n        })\r\n      );\r\n    },\r\n    [dispatch, entityId, fetchUpdatedEntity, getHeader]\r\n  );\r\n  const onChangeCurrentDate = useCallback(\r\n    (date) =>\r\n      getHeader().then((header) =>\r\n        dispatch(\r\n          fetchUpdatedEntity({\r\n            entityId,\r\n            initialFilters: {\r\n              date: {\r\n                gte: moment(date).format(\"YYYY.MM\") + \".01\",\r\n                lte: moment(date).format(\"YYYY.MM\") + \".31\",\r\n              },\r\n            },\r\n            selectedRows: [],\r\n            date,\r\n            header,\r\n          })\r\n        ).then(() => {\r\n          const connections =\r\n            getGridTableConnections(entityId)?.onDateChange || [];\r\n          const promises = connections.map((id) => {\r\n            return dispatch(\r\n              fetchUpdatedEntity({\r\n                entityId: id,\r\n                initialFilters: getGridDateFilter(id, date),\r\n                filters: { date: undefined },\r\n                header,\r\n              })\r\n            );\r\n          });\r\n          return Promise.all(promises);\r\n        })\r\n      ),\r\n    [dispatch, entityId, fetchUpdatedEntity, getHeader]\r\n  );\r\n\r\n  const onChangeCurrentUser = useCallback(\r\n    (value) =>\r\n      getHeader().then((header) => {\r\n        const initialFilters = {\r\n          user: { eq: [value] },\r\n        };\r\n        dispatch(\r\n          fetchAndInitEntityGrid({\r\n            entityId,\r\n            url: getGridUrl(entityId),\r\n            limit: getGridWidgets(entityId).pageSize,\r\n            initialFilters,\r\n            header,\r\n          })\r\n        );\r\n      }),\r\n    [dispatch, entityId, fetchAndInitEntityGrid, getHeader]\r\n  );\r\n  const onToggleCheckboxFilter = useCallback(\r\n    (filter) => {\r\n      getHeader().then((header) =>\r\n        dispatch(\r\n          fetchFiltered({\r\n            entityId,\r\n            filter: { ...filter, action: \"toggle\" },\r\n            header,\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [dispatch, entityId, fetchFiltered, getHeader]\r\n  );\r\n  const onToggleAllCheckboxFilter = useCallback(\r\n    (filter) =>\r\n      getHeader().then((header) =>\r\n        dispatch(\r\n          fetchFiltered({\r\n            entityId,\r\n            filter: { ...filter, action: \"toggleAll\" },\r\n            header,\r\n          })\r\n        )\r\n      ),\r\n    [dispatch, entityId, fetchFiltered, getHeader]\r\n  );\r\n  const onChangeRangeFilter = useCallback(\r\n    (filter) =>\r\n      getHeader().then((header) =>\r\n        dispatch(\r\n          fetchFiltered({\r\n            entityId,\r\n            filter: { ...filter, action: \"between\" },\r\n            header,\r\n          })\r\n        )\r\n      ),\r\n    [dispatch, entityId, fetchFiltered, getHeader]\r\n  );\r\n  const onResetFilter = useCallback(\r\n    (filter) =>\r\n      getHeader().then((header) =>\r\n        dispatch(\r\n          fetchFiltered({\r\n            entityId,\r\n            filter: { ...filter, action: \"reset\" },\r\n            header,\r\n          })\r\n        )\r\n      ),\r\n    [dispatch, entityId, fetchFiltered, getHeader]\r\n  );\r\n  const onResetAllFilters = useCallback(\r\n    () =>\r\n      getHeader().then((header) =>\r\n        dispatch(\r\n          fetchFiltered({\r\n            entityId,\r\n            filter: { action: \"resetAll\" },\r\n            header,\r\n          })\r\n        )\r\n      ),\r\n    [dispatch, entityId, fetchFiltered, getHeader]\r\n  );\r\n\r\n  const onPageChange = useCallback(\r\n    (page) =>\r\n      getHeader().then((header) =>\r\n        dispatch(\r\n          fetchPage({\r\n            entityId,\r\n            page,\r\n            header,\r\n          })\r\n        )\r\n      ),\r\n    [dispatch, entityId, fetchPage, getHeader]\r\n  );\r\n  const onToggleLabel = useCallback(\r\n    (columnId) => {\r\n      dispatch(toggleColumn({ id: entityId, columnId }));\r\n    },\r\n    [entityId, toggleColumn, dispatch]\r\n  );\r\n  return {\r\n    onChangeCurrentUser,\r\n    onChangeCurrentYearMonth,\r\n    onCellChange,\r\n    setSelectedRows: setSelectedRowsCallback,\r\n    forceClose,\r\n    onChangeMode,\r\n    onSave,\r\n    onClose,\r\n    onDownload,\r\n    onAdd,\r\n    onDelete,\r\n    onChangeCurrentDate,\r\n    // onChangeCurrentTableDate,\r\n    onToggleCheckboxFilter,\r\n    onToggleAllCheckboxFilter,\r\n    onChangeRangeFilter,\r\n    onToggleLabel,\r\n    onResetAllFilters,\r\n    onResetFilter,\r\n    onPageChange,\r\n    onSelectRow: onSelectRowCallback,\r\n    onSelectAllRows: onSelectAllRowsCallback,\r\n    onToggleSort,\r\n  };\r\n};\r\n\r\nexport const useGridTableProps = ({ actions, selectors, entityId }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { getHeader } = useAuth();\r\n  const {\r\n    selectSelectedRows,\r\n    selectDate,\r\n    selectTableDate,\r\n    selectLabelsModal,\r\n    selectHiddenHeadersReactTable,\r\n    selectShownHeadersReactTable,\r\n    selectSortedHeadersReactTable,\r\n    selectReactTableData,\r\n    selectMode,\r\n    selectChangesExist,\r\n    selectSelectedRowsExist,\r\n    selectItemsFilter,\r\n    selectNestedCheckboxFilter,\r\n    selectPaginationData,\r\n    selectLoading,\r\n    selectAddRow,\r\n    selectItemsNestedFilter,\r\n  } = useGridSelectors({ selectors, entityId });\r\n\r\n  const {\r\n    onChangeCurrentYearMonth,\r\n    onCellChange,\r\n    setSelectedRows,\r\n    onSelectRow,\r\n    onSelectAllRows,\r\n    forceClose,\r\n    onChangeMode,\r\n    onSave,\r\n    onClose,\r\n    onDownload,\r\n    onAdd,\r\n    onDelete,\r\n    onChangeCurrentDate,\r\n    onChangeCurrentUser,\r\n    onChangeCurrentTableDate,\r\n    onToggleCheckboxFilter,\r\n    onToggleAllCheckboxFilter,\r\n    onChangeRangeFilter,\r\n    onToggleLabel,\r\n    onResetAllFilters,\r\n    onResetFilter,\r\n    onPageChange,\r\n    onToggleSort,\r\n  } = useGridCallbacks({\r\n    actions,\r\n    entityId,\r\n    dispatch,\r\n    getHeader,\r\n  });\r\n\r\n  const title = useMemo(\r\n    () => (\r\n      <TitleComponent\r\n        entityId={entityId}\r\n        selectTableDate={selectTableDate}\r\n        onChange={\r\n          entityId === \"workHoursByDate\"\r\n            ? onChangeCurrentYearMonth\r\n            : onChangeCurrentDate\r\n        }\r\n      />\r\n    ),\r\n    [entityId, onChangeCurrentYearMonth, onChangeCurrentDate, selectTableDate]\r\n  );\r\n  const nestedFilterComponent = useCallback(\r\n    (props) => (\r\n      <FilterComponent\r\n        onToggleCheckbox={onToggleCheckboxFilter}\r\n        onToggleAllCheckbox={onToggleAllCheckboxFilter}\r\n        onChangeRange={onChangeRangeFilter}\r\n        onReset={onResetFilter}\r\n        {...props}\r\n      />\r\n    ),\r\n    [\r\n      onToggleCheckboxFilter,\r\n      onToggleAllCheckboxFilter,\r\n      onChangeRangeFilter,\r\n      onResetFilter,\r\n    ]\r\n  );\r\n\r\n  const {\r\n    filter,\r\n    sort,\r\n    add,\r\n    download,\r\n    remove,\r\n    massEdit,\r\n    pagination,\r\n    pageSize,\r\n    edit,\r\n    counter,\r\n  } = getGridWidgets(entityId);\r\n\r\n  const tableProps = {\r\n    selectShownColumns: selectShownHeadersReactTable,\r\n    selectData: selectReactTableData,\r\n    onCellChange,\r\n    massEdit,\r\n    size: pageSize,\r\n    selectLoading,\r\n    footerProps: {\r\n      selectPaginationData,\r\n      paginationProps: pagination && {\r\n        selectPaginationData,\r\n        paginationEnabled: pagination,\r\n        onPageChange,\r\n      },\r\n      counterProps: counter,\r\n    },\r\n    bodyProps: {\r\n      selectAddRow,\r\n      massEdit,\r\n      selectHiddenColumns: selectHiddenHeadersReactTable,\r\n      selectSelectedRows,\r\n      modeselector: selectMode,\r\n      onSelectRow,\r\n    },\r\n    headerProps: {\r\n      selectHiddenColumns: selectHiddenHeadersReactTable,\r\n      selectPaginationData,\r\n      onSelectAllRows,\r\n      selectSelectedRows,\r\n      massEdit,\r\n      selectSortedColumn: selectSortedHeadersReactTable,\r\n      sortProps: {\r\n        sortEnabled: sort,\r\n        onToggleSort,\r\n      },\r\n    },\r\n  };\r\n  const outsideProps = { onChangeCurrentUser };\r\n  const filterProps = filter && {\r\n    selectItemsFilter,\r\n    selectNestedCheckboxFilter,\r\n    nestedFilterComponent,\r\n    selectItemsNestedFilter,\r\n    onToggleLabel,\r\n    onResetAllFilters,\r\n  };\r\n  const modalProps = add && {\r\n    selectLabelsModal,\r\n    title: \"ModalTitle\",\r\n  };\r\n  const buttonGroupProps = {\r\n    edit,\r\n    add,\r\n    filter,\r\n    selectMode,\r\n    selectChangesExist,\r\n    selectSelectedRowsExist,\r\n    onAdd,\r\n    onDelete,\r\n    onDownload,\r\n    onClose,\r\n    onSave,\r\n    onChangeMode,\r\n    forceClose,\r\n    download,\r\n    remove,\r\n    modalProps,\r\n    filterProps,\r\n  };\r\n  const titleProps = { title };\r\n  return { outsideProps, tableProps, buttonGroupProps, titleProps };\r\n};\r\n","import { memo } from \"react\";\r\nimport isequal from \"lodash.isequal\";\r\nimport TableCore from \"./TableCore\";\r\nimport { TableLabel } from \"./TableHeader\";\r\n\r\nimport _ from \"lodash\";\r\nimport { useGridTableProps } from \"../../pages/reducers/selectors\";\r\nimport { Card } from \"@themesberg/react-bootstrap\";\r\nimport { ComponentPreLoader } from \"../ComponentPreLoader\";\r\n\r\nexport const GridTableComponent = memo(({ actions, selectors, entityId }) => {\r\n  const { tableProps, ...rest } = useGridTableProps({\r\n    actions,\r\n    selectors,\r\n    entityId,\r\n  });\r\n  return (\r\n    <Card className=\"card-dark grid-table\">\r\n      <Card.Header className=\"border-0\">\r\n        <TableLabel {...rest}></TableLabel>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <TableCore {...tableProps}></TableCore>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n  // return <EntityTable {...props} />;\r\n}, isequal);\r\nexport const Loader = memo(\r\n  ({\r\n    stateAPIStatus = \"loading\",\r\n    fallbackLoading = (\r\n      <Card>\r\n        <Card.Body>\r\n          <ComponentPreLoader show={true}></ComponentPreLoader>\r\n        </Card.Body>\r\n      </Card>\r\n    ),\r\n    fallbackError = (\r\n      <div className=\"w-100 h-100 text-center\">\r\n        <h2>ERROR</h2>\r\n      </div>\r\n    ),\r\n    children,\r\n  }) => {\r\n    switch (stateAPIStatus) {\r\n      case \"loading\":\r\n        return fallbackLoading;\r\n      case \"success\":\r\n        return children;\r\n      case \"error\":\r\n        return fallbackError;\r\n      default:\r\n        return <div>loading</div>;\r\n    }\r\n  },\r\n  isequal\r\n);\r\n","import React from \"react\";\nimport Chartist from \"react-chartist\";\nimport ChartistTooltip from \"chartist-plugin-tooltips-updated\";\nimport { Bar, Line } from \"react-chartjs-2\";\n\nexport const SalesValueChart = (props) => {\n  const data = {\n    labels: props.labels,\n    datasets: [\n      {\n        label: \"\",\n        data: props.series,\n        fill: false,\n        backgroundColor: \"rgba(7,113,171, 1)\",\n        borderColor: \"rgba(7,113,171, 0.2)\",\n      },\n    ],\n  };\n\n  const options = {\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        displayColors: false,\n      },\n    },\n    aspectRatio: 1.4,\n    scales: {\n      x: {\n        grid: {\n          tickColor: \"transparent\",\n        },\n      },\n      y: {\n        grid: {\n          tickColor: \"transparent\",\n        },\n        beginAtZero: false,\n      },\n    },\n  };\n\n  return <Line data={data} options={options} />;\n};\n\nexport const SalesValueChartphone = () => {\n  const data = {\n    labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n    series: [[1, 2, 2, 3, 3, 4, 3]],\n  };\n\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: false,\n    axisX: {\n      position: \"end\",\n      showGrid: true,\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: (value) => `$${value / 1}k`,\n    },\n  };\n\n  const plugins = [ChartistTooltip()];\n\n  return (\n    <Chartist\n      data={data}\n      options={{ ...options, plugins }}\n      type=\"Line\"\n      className=\"ct-series-g ct-major-tenth\"\n    />\n  );\n};\n\nexport const CircleChart = (props) => {\n  const { series = [], donutWidth = 20 } = props;\n  const sum = (a, b) => a + b;\n\n  const options = {\n    low: 0,\n    high: 8,\n    donutWidth,\n    donut: true,\n    donutSolid: true,\n    fullWidth: false,\n    showLabel: false,\n    labelInterpolationFnc: (value) =>\n      `${Math.round((value / series.reduce(sum)) * 100)}%`,\n  };\n\n  const plugins = [ChartistTooltip()];\n\n  return (\n    <Chartist\n      data={{ series }}\n      options={{ ...options, plugins }}\n      type=\"Pie\"\n      className=\"ct-golden-section\"\n    />\n  );\n};\n\nexport const BarChart = (props) => {\n  const data = {\n    labels: props.labels,\n    datasets: [\n      {\n        label: \"\",\n        data: props.series,\n        backgroundColor: \"rgba(7,113,171, 1)\",\n        borderColor: \"rgba(7,113,171, 0.2)\",\n      },\n    ],\n  };\n\n  const options = {\n    plugins: {\n      tooltip: {\n        displayColors: false,\n      },\n      legend: {\n        display: false,\n      },\n    },\n    aspectRatio: 1.4,\n    autoSkip: false,\n    scales: {\n      x: {\n        ticks: {\n          callback: function (label, index) {\n            return props.labels[label]\n              .split(\" \")\n              .reduce((a, b) => a + \" \" + b.substring(0, 3) + \".\", \"\");\n          },\n        },\n        grid: {\n          color: \"transparent\",\n          tickColor: \"transparent\",\n        },\n      },\n    },\n  };\n\n  return (\n    // <div style={{ height: \"500px\" }}>\n    <Bar width={\"100%\"} data={data} options={options} />\n    // </div>\n  );\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDown,\n  faAngleUp,\n  faChartArea,\n  faChartBar,\n  faChartLine,\n  faFlagUsa,\n  faFolderOpen,\n  faGlobeEurope,\n  faPaperclip,\n  faUserPlus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  faAngular,\n  faBootstrap,\n  faReact,\n  faVuejs,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  Col,\n  Row,\n  Card,\n  Image,\n  Button,\n  ListGroup,\n  ProgressBar,\n} from \"@themesberg/react-bootstrap\";\nimport {\n  CircleChart,\n  BarChart,\n  SalesValueChart,\n  SalesValueChartphone,\n  SalesValueChart2,\n} from \"./Charts\";\n\nimport Profile1 from \"../assets/img/team/profile-picture-1.jpg\";\nimport ProfileCover from \"../assets/img/profile-cover.jpg\";\n\nexport const ProfileCardWidget = () => {\n  return (\n    <Card border=\"light\" className=\"text-center p-0 mb-4\">\n      <div\n        style={{ backgroundImage: `url(${ProfileCover})` }}\n        className=\"profile-cover rounded-top\"\n      />\n      <Card.Body className=\"pb-5\">\n        <Card.Img\n          src={Profile1}\n          alt=\"Neil Portrait\"\n          className=\"user-avatar large-avatar rounded-circle mx-auto mt-n7 mb-4\"\n        />\n        <Card.Title>Neil Sims</Card.Title>\n        <Card.Subtitle className=\"fw-normal\">\n          Senior Software Engineer\n        </Card.Subtitle>\n        <Card.Text className=\"text-gray mb-4\">New York, USA</Card.Text>\n\n        <Button variant=\"primary\" size=\"sm\" className=\"me-2\">\n          <FontAwesomeIcon icon={faUserPlus} className=\"me-1\" /> Connect\n        </Button>\n        <Button variant=\"secondary\" size=\"sm\">\n          Send Message\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport const ChoosePhotoWidget = (props) => {\n  const { title, photo } = props;\n\n  return (\n    <Card border=\"light\" className=\"bg-white shadow-sm mb-4\">\n      <Card.Body>\n        <h5 className=\"mb-4\">{title}</h5>\n        <div className=\"d-xl-flex align-items-center\">\n          <div className=\"user-avatar xl-avatar\">\n            <Image fluid rounded src={photo} />\n          </div>\n          <div className=\"file-field\">\n            <div className=\"d-flex justify-content-xl-center ms-xl-3\">\n              <div className=\"d-flex\">\n                <span className=\"icon icon-md\">\n                  <FontAwesomeIcon icon={faPaperclip} className=\"me-3\" />\n                </span>\n                <input type=\"file\" />\n                <div className=\"d-md-block text-start\">\n                  <div className=\"fw-normal text-dark mb-1\">Choose Image</div>\n                  <div className=\"text-gray small\">\n                    JPG, GIF or PNG. Max size of 800K\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport const CounterWidget = (props) => {\n  const {\n    icon,\n    iconColor,\n    category,\n    title,\n    period,\n    percentage,\n    className = \"\",\n    previousPeriod = \"last month\",\n  } = props;\n  const percentageIcon = percentage < 0 ? faAngleDown : faAngleUp;\n  const percentageColor = percentage < 0 ? \"text-danger\" : \"text-success\";\n\n  return (\n    <Card border=\"light\" className={className + \" shadow-sm h-100\"}>\n      <Card.Body className=\"d-flex justify-content-center\">\n        <Row className=\"d-flex flex-wrap align-items-center w-100\">\n          <Col\n            xs={12}\n            // xl={3}\n            className=\"text-xl-center d-flex flex-wrap align-items-center justify-content-center mb-3 mb-xl-0\"\n          >\n            <div\n              className={`icon icon-shape icon-md icon-${iconColor} col-6 col-sm-5 rounded me-4 me-sm-0`}\n            >\n              <FontAwesomeIcon icon={icon} />\n            </div>\n            <div className=\"col-6 col-sm-7\">\n              <h5>{category}</h5>\n              <h3 className=\"mb-1\">{title}</h3>\n            </div>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport const CircleChartWidget = (props) => {\n  const { title, data = [] } = props;\n  const series = data.map((d) => d.value);\n\n  return (\n    <Card border=\"light\" className=\"shadow-sm\">\n      <Card.Body>\n        <Row className=\"d-block d-xl-flex align-items-center\">\n          <Col\n            xs={12}\n            xl={5}\n            className=\"text-xl-center d-flex align-items-center justify-content-xl-center mb-3 mb-xl-0\"\n          >\n            <CircleChart series={series} />\n          </Col>\n          <Col xs={12} xl={7} className=\"px-xl-0\">\n            <h5 className=\"mb-3\">{title}</h5>\n\n            {data.map((d) => (\n              <h6\n                key={`circle-element-${d.id}`}\n                className=\"fw-normal text-gray\"\n              >\n                <FontAwesomeIcon\n                  icon={d.icon}\n                  className={`icon icon-xs text-${d.color} w-20 me-1`}\n                />\n                {` ${d.label} `}\n                {`${d.value}%`}\n              </h6>\n            ))}\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport const BarChartWidget = (props) => {\n  const { title, value = \" \", percentage, labels = [], series = [] } = props;\n\n  return (\n    <Card border=\"light\" className=\"card-dark\">\n      <Card.Header className=\"border border-0 p-0\">\n        <div style={{ padding: \"0.55rem 0.75rem\" }}>\n          <h5> {title} </h5>\n        </div>\n      </Card.Header>\n      <Card.Body className=\"p-2\">\n        <BarChart series={series} labels={labels} />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport const ProgressTrackWidget = () => {\n  const Progress = (props) => {\n    const { title, percentage, icon, color, last = false } = props;\n    const extraClassName = last ? \"\" : \"mb-2\";\n\n    return (\n      <Row className={`align-items-center ${extraClassName}`}>\n        <Col xs=\"auto\">\n          <span className={`icon icon-md text-${color}`}>\n            <FontAwesomeIcon icon={icon} className=\"me-1\" />\n          </span>\n        </Col>\n        <Col>\n          <div className=\"progress-wrapper\">\n            <div className=\"progress-info\">\n              <h6 className=\"mb-0\">{title}</h6>\n              <small className=\"fw-bold text-dark\">\n                <span>{percentage} %</span>\n              </small>\n            </div>\n            <ProgressBar variant={color} now={percentage} min={0} max={100} />\n          </div>\n        </Col>\n      </Row>\n    );\n  };\n\n  return (\n    <Card border=\"light\" className=\"shadow-sm\">\n      <Card.Header className=\"border-bottom border-light\">\n        <h5 className=\"mb-0\">Progress track</h5>\n      </Card.Header>\n      <Card.Body>\n        <Progress\n          title=\"Rocket - SaaS Template\"\n          color=\"purple\"\n          icon={faBootstrap}\n          percentage={34}\n        />\n        <Progress\n          title=\"Pixel - Design System\"\n          color=\"danger\"\n          icon={faAngular}\n          percentage={60}\n        />\n        <Progress\n          title=\"Spaces - Listings Template\"\n          color=\"tertiary\"\n          icon={faVuejs}\n          percentage={45}\n        />\n        <Progress\n          title=\"Stellar - Dashboard\"\n          color=\"info\"\n          icon={faReact}\n          percentage={35}\n        />\n        <Progress\n          last\n          title=\"Volt - Dashboard\"\n          color=\"purple\"\n          icon={faBootstrap}\n          percentage={34}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport const RankingWidget = () => {\n  return (\n    <Card border=\"light\" className=\"shadow-sm\">\n      <Card.Body>\n        <div className=\"d-flex align-items-center justify-content-between border-bottom border-light pb-3\">\n          <div>\n            <h6>\n              <FontAwesomeIcon\n                icon={faGlobeEurope}\n                className=\"icon icon-xs me-3\"\n              />{\" \"}\n              Global Rank\n            </h6>\n          </div>\n          <div>\n            <Card.Link href=\"#\" className=\"text-primary fw-bold\">\n              #755 <FontAwesomeIcon icon={faChartLine} className=\"ms-2\" />\n            </Card.Link>\n          </div>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-between border-bottom border-light py-3\">\n          <div>\n            <h6 className=\"mb-0\">\n              <FontAwesomeIcon icon={faFlagUsa} className=\"icon icon-xs me-3\" />\n              Country Rank\n            </h6>\n            <div className=\"small card-stats\">\n              United States{\" \"}\n              <FontAwesomeIcon\n                icon={faAngleUp}\n                className=\"icon icon-xs text-success ms-2\"\n              />\n            </div>\n          </div>\n          <div>\n            <Card.Link href=\"#top\" className=\"text-primary fw-bold\">\n              #32 <FontAwesomeIcon icon={faChartLine} className=\"ms-2\" />\n            </Card.Link>\n          </div>\n        </div>\n        <div className=\"d-flex align-items-center justify-content-between pt-3\">\n          <div>\n            <h6 className=\"mb-0\">\n              <FontAwesomeIcon\n                icon={faFolderOpen}\n                className=\"icon icon-xs me-3\"\n              />\n              Category Rank\n            </h6>\n            <Card.Link href=\"#top\" className=\"small card-stats\">\n              Travel &gt; Accomodation\n            </Card.Link>\n          </div>\n          <div>\n            <Card.Link href=\"#top\" className=\"text-primary fw-bold\">\n              #16 <FontAwesomeIcon icon={faChartLine} className=\"ms-2\" />\n            </Card.Link>\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport const SalesValueWidget = (props) => {\n  const { title, value, percentage, series = [], labels = [] } = props;\n\n  return (\n    <Card className=\"card-dark\">\n      <Card.Header className=\"border border-0 p-0\">\n        <div style={{ padding: \"0.55rem 0.75rem\" }}>\n          <h5> {title} </h5>\n        </div>\n      </Card.Header>\n      <Card.Body className=\"p-2\">\n        <SalesValueChart series={series} labels={labels} />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport const SalesValueWidgetPhone = (props) => {\n  const { title, value, percentage } = props;\n  const percentageIcon = percentage < 0 ? faAngleDown : faAngleUp;\n  const percentageColor = percentage < 0 ? \"text-danger\" : \"text-success\";\n\n  return (\n    <Card className=\"bg-secondary-alt shadow-sm\">\n      <Card.Header className=\"d-md-flex flex-row align-items-center flex-0\">\n        <div className=\"d-block mb-3 mb-md-0\">\n          <h5 className=\"fw-normal mb-2\">{title}</h5>\n          <h3>${value}</h3>\n          <small className=\"fw-bold mt-2\">\n            <span className=\"me-2\">Yesterday</span>\n            <FontAwesomeIcon\n              icon={percentageIcon}\n              className={`${percentageColor} me-1`}\n            />\n            <span className={percentageColor}>{percentage}%</span>\n          </small>\n        </div>\n        <div className=\"d-flex ms-auto\">\n          <Button variant=\"secondary\" size=\"sm\" className=\"me-2\">\n            Month\n          </Button>\n          <Button variant=\"primary\" size=\"sm\" className=\"me-3\">\n            Week\n          </Button>\n        </div>\n      </Card.Header>\n      <Card.Body className=\"p-2\">\n        <SalesValueChartphone />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport const AcquisitionWidget = () => {\n  return (\n    <Card border=\"light\" className=\"shadow-sm\">\n      <Card.Body>\n        <h5>Acquisition</h5>\n        <p>\n          Tells you where your visitors originated from, such as search engines,\n          social networks or website referrals.\n        </p>\n        <div className=\"d-block\">\n          <div className=\"d-flex align-items-center pt-3 me-5\">\n            <div className=\"icon icon-shape icon-sm icon-shape-danger rounded me-3\">\n              <FontAwesomeIcon icon={faChartBar} />\n            </div>\n            <div className=\"d-block\">\n              <label className=\"mb-0\">Bounce Rate</label>\n              <h4 className=\"mb-0\">33.50%</h4>\n            </div>\n          </div>\n          <div className=\"d-flex align-items-center pt-3\">\n            <div className=\"icon icon-shape icon-sm icon-shape-quaternary rounded me-3\">\n              <FontAwesomeIcon icon={faChartArea} />\n            </div>\n            <div className=\"d-block\">\n              <label className=\"mb-0\">Sessions</label>\n              <h4 className=\"mb-0\">9,567</h4>\n            </div>\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/profile-picture-1.e783b80f.jpg\";","export default __webpack_public_path__ + \"static/media/profile-cover.4b034f41.jpg\";","import { faChartLine } from \"@fortawesome/free-solid-svg-icons\";\nimport { isEqual } from \"lodash\";\nimport moment from \"moment\";\nimport React, { memo, useCallback, useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useLoadData } from \"../../api/apiMappers\";\nimport { ComponentPreLoader } from \"../../components/ComponentPreLoader\";\nimport { GridTableComponent } from \"../../components/Table/GridComponent\";\nimport {\n  BarChartWidget,\n  CounterWidget,\n  SalesValueWidget,\n} from \"../../components/Widgets\";\nimport { gridTableSlice } from \"../reducers/redux\";\n\nconst useLoader = (stateAPIStatus) => {\n  const navigate = useNavigate();\n  if (stateAPIStatus === \"success\") {\n    return <DashBoardComponent />;\n  } else if (stateAPIStatus === \"error\") {\n    return navigate(\"/500\");\n  } else {\n    return (\n      <div className=\"d-flex h-100 align-items-center\">\n        <ComponentPreLoader show={true} />\n      </div>\n    );\n  }\n};\nexport const DashBoardOverview = () => {\n  const { actions } = gridTableSlice;\n  const stateAPIStatus = useLoadData(\"overviewTable\", actions);\n  return useLoader(stateAPIStatus);\n};\n\nconst DashBoardComponent = memo(() => {\n  const { actions, selectors } = gridTableSlice;\n  const handleCbm = useCallback(\n    (state) => selectors.metaSelector.selectById(state, \"cbm\") || {},\n    [selectors.metaSelector]\n  );\n\n  const {\n    currentMonth: cbmCurrentMonth = 0,\n    lastMonth: cbmLastMonth = 0,\n    byWorkPlant: cbmByWorkPlant,\n    year: cbmYear,\n  } = useSelector(handleCbm);\n  const dateCurrentMonth = moment().format(\"YYYY/MM\");\n  const dateLastMonth = moment().subtract(1, \"months\").format(\"YYYY/MM\");\n\n  const { cbmLabels, cbmSeries } = useMemo(() => {\n    return {\n      cbmLabels: moment.monthsShort(),\n      cbmSeries: moment.months().map((m) => {\n        return cbmYear?.find(\n          (c) => moment(c.date, \"YYYY.MM\").format(\"MMMM\") === m\n        )?.cbm;\n      }),\n    };\n  }, [cbmYear]);\n\n  const { workPlantLabels, workPlantSeries } = useMemo(() => {\n    return {\n      workPlantLabels: cbmByWorkPlant?.map((v) => v.workPlant),\n      workPlantSeries: cbmByWorkPlant?.map((v) => parseInt(v.cbm)),\n    };\n  }, [cbmByWorkPlant]);\n\n  const renderComponent = useCallback(\n    (entityId) => (\n      <GridTableComponent\n        {...{\n          stateAPIStatus: \"success\",\n          actions,\n          selectors,\n          entityId,\n        }}\n      />\n    ),\n    [selectors, actions]\n  );\n\n  return (\n    <>\n      <div className=\"w-100\">\n        <div className=\"w-100 d-flex flex-wrap justify-content-center\">\n          <div className=\"col-12 col-xxl-6 d-flex flex-wrap\">\n            <div className=\"p-2 col-12 col-sm-6\">\n              <CounterWidget\n                category=\"Cbm current month\"\n                title={cbmCurrentMonth + \" cbm\"}\n                period={moment(dateCurrentMonth, \"YYYY/MM\").format(\"MMM.\")}\n                icon={faChartLine}\n                iconColor=\"shape-secondary\"\n              />\n            </div>\n            <div className=\"p-2 col-12 col-lg col-sm-6\">\n              <CounterWidget\n                className=\"w-100\"\n                category=\"Cbm previous month\"\n                title={cbmLastMonth + \" cbm\"}\n                period={moment(dateLastMonth, \"YYYY/MM\").format(\"MMM.\")}\n                icon={faChartLine}\n                iconColor=\"shape-secondary\"\n              />\n            </div>\n            <div className=\"p-2 col-12 col-sm-12  col-xl-12\">\n              {renderComponent(\"pendingVacations\")}\n            </div>\n            <div className=\"p-2 col-12 col-sm-12  col-xl-12\">\n              {renderComponent(\"upcomingAbsent\")}\n            </div>\n          </div>\n          <div className=\"p-2 col\">{renderComponent(\"workHoursByDate\")}</div>\n          <div className=\"d-flex flex-wrap col-xl-8 col-xxl-12 col-xl-12 col-12\">\n            <div className=\"p-2 col-xxl-6 col-xl-6 col-12\">\n              <SalesValueWidget\n                title=\"Year's Cbm\"\n                labels={cbmLabels}\n                series={cbmSeries}\n              />\n            </div>\n            <div className=\"p-2  col-xxl-6 col-xl-6 col-12\">\n              <BarChartWidget\n                title=\"Workplant's Cbm\"\n                labels={workPlantLabels}\n                series={workPlantSeries}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}, isEqual);\n\nexport default DashBoardOverview;\n","import { faClock } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faPlane, faTimes, faTruck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Accordion,\r\n  Button,\r\n  Modal,\r\n  Nav,\r\n  Spinner,\r\n} from \"@themesberg/react-bootstrap\";\r\nimport _ from \"lodash\";\r\nimport isEqual from \"lodash.isequal\";\r\nimport moment from \"moment\";\r\nimport React, { memo, useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { Tab } from \"react-bootstrap\";\r\nimport { DateSelector } from \"../../components/DatePicker\";\r\nimport {\r\n  calcDurationAndFormat,\r\n  durationFormat,\r\n  getGridLabels,\r\n  getGridPrimaryLabels,\r\n} from \"../myComponents/util/labels\";\r\nimport { useServices } from \"../myComponents/util/services\";\r\n\r\nconst NavItem = ({ activeKey, onClick, value, name, icon }) => {\r\n  const handleClick = () => onClick(name);\r\n  const isActive = activeKey === name;\r\n  return (\r\n    <Nav.Item\r\n      className={\r\n        \"col-4 d-flex align-items-center bg-senary rounded-top border-senary border-bottom \" +\r\n        (isActive ? \"text-nonary bg-senary\" : \"text-senary bg-darker-nonary\")\r\n      }\r\n    >\r\n      <Nav.Link\r\n        onClick={handleClick}\r\n        eventKey={name}\r\n        style={{ fontSize: \"14px\" }}\r\n        className={\r\n          \" w-100 text-wrap text-truncate text-center fw-bolder px-1 m-0 \" +\r\n          (isActive ? \"text-nonary bg-senary\" : \"text-senary bg-darker-nonary\")\r\n        }\r\n      >\r\n        {isActive ? value : <FontAwesomeIcon icon={icon} size=\"lg\" />}\r\n      </Nav.Link>\r\n    </Nav.Item>\r\n  );\r\n};\r\n\r\nconst UserOverview = () => {\r\n  const [activeKey, setActiveKey] = useState(\"tab1\");\r\n  return (\r\n    <div\r\n      className={` w-100 h-100 align-items-center justify-content-start d-flex flex-column bg-darker-nonary`}\r\n    >\r\n      <div\r\n        className=\"w-100 h-100 d-flex flex-column pt-3\"\r\n        style={{ maxWidth: \"400px\" }}\r\n      >\r\n        <Tab.Container activeKey={activeKey}>\r\n          <div className=\"w-100\">\r\n            <Nav className=\"nav-tabs d-flex flex-nowrap justify-content-around w-100 border-0 px-4\">\r\n              <NavItem\r\n                name=\"tab1\"\r\n                activeKey={activeKey}\r\n                onClick={setActiveKey}\r\n                value={\"Work Hours\"}\r\n                icon={faClock}\r\n              />\r\n              <NavItem\r\n                name=\"tab2\"\r\n                activeKey={activeKey}\r\n                onClick={setActiveKey}\r\n                value=\"Tours\"\r\n                icon={faTruck}\r\n              />\r\n              <NavItem\r\n                name=\"tab3\"\r\n                activeKey={activeKey}\r\n                onClick={setActiveKey}\r\n                value=\"Vacations\"\r\n                icon={faPlane}\r\n              />\r\n            </Nav>\r\n          </div>\r\n          <div className=\"w-100 h-100\">\r\n            <Tab.Content className=\"d-flex justify-content-center h-100\">\r\n              <Tab.Pane eventKey=\"tab1\" className=\"py-1\">\r\n                <WorkHoursTab />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"tab2\" className=\"py-1 w-100 h-100\">\r\n                <ToursTab />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"tab3\" className=\"py-1 w-100 h-100\">\r\n                <VacationsTab />\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </div>\r\n        </Tab.Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst VacationsTab = memo(() => {\r\n  const [vacations, setVacations] = useState();\r\n  const { fetchUserConfirmedVacations } = useServices();\r\n  useEffect(() => {\r\n    fetchUserConfirmedVacations().then(({ data }) => {\r\n      setVacations(data.content);\r\n      // setTotalPages(data.totalPages);\r\n    });\r\n  }, [fetchUserConfirmedVacations]);\r\n  return (\r\n    <div className=\"date-picker-overview w-100 d-flex flex-column h-100 pt-2\">\r\n      <div style={{ overflow: \"hidden\", position: \"relative\", flexGrow: 1 }}>\r\n        <div\r\n          className=\"d-flex flex-column w-100 px-3\"\r\n          style={{ position: \"absolute\", top: 0, bottom: 0, overflow: \"auto\" }}\r\n        >\r\n          {vacations?.map((v) => (\r\n            <div\r\n              key={v.id}\r\n              className=\"d-flex justify-content-center py-2 fw-bold w-100\"\r\n            >\r\n              <Button variant=\"nonary\" className=\"w-100 d-flex flex-wrap\">\r\n                <div className=\"col-6 pe-3 flex-fill d-flex flex-column align-items-center\">\r\n                  <div className=\"fw-bolder\">{v.dateFrom}</div>\r\n                </div>\r\n                <div className=\"col-6 ps-3 flex-fill d-flex flex-column align-items-center\">\r\n                  <span className=\"fw-bolder\">{v.dateTo}</span>\r\n                </div>\r\n                <div\r\n                  className={\"col-12 fw-bolder text-center \"}\r\n                  style={{ fontSize: \"18px\" }}\r\n                >\r\n                  {v.days} days\r\n                </div>\r\n              </Button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}, isEqual);\r\n\r\nconst ToursTab = () => {\r\n  const [tours, setTours] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const loadEnabled = page + 1 < totalPages;\r\n  const { fetchUserTours } = useServices();\r\n  useEffect(() => {\r\n    fetchUserTours().then(({ data }) => {\r\n      setTours(data.content);\r\n      setTotalPages(data.totalPages);\r\n    });\r\n  }, [fetchUserTours]);\r\n\r\n  const loadNextPage = useCallback(() => {\r\n    loadEnabled &&\r\n      fetchUserTours(page + 1).then(({ data }) => {\r\n        setPage(page + 1);\r\n        setTours((old) => [...old, ...data.content]);\r\n        setTotalPages(data.totalPages);\r\n      });\r\n  }, [page, fetchUserTours, loadEnabled]);\r\n\r\n  return (\r\n    <div className=\"date-picker-overview w-100 d-flex flex-column h-100 pt-2\">\r\n      <div style={{ overflow: \"hidden\", position: \"relative\", flexGrow: 1 }}>\r\n        {tours && (\r\n          <TourList\r\n            tours={tours}\r\n            spinner={loadEnabled}\r\n            onScroll={loadNextPage}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TourList = ({ tours, spinner = false, onScroll }) => {\r\n  const [modalProps, setModalProps] = useState(false);\r\n  const handleClose = () => setModalProps({ show: false });\r\n  const handleShow = useCallback((tour) => {\r\n    return setModalProps({ ...tour, show: true });\r\n  }, []);\r\n\r\n  const dates = [...new Set(tours.map((c) => c.date))];\r\n  const mObject = dates.reduce(\r\n    (a, b) => ({ ...a, [b]: tours.filter((t) => t.date === b) }),\r\n    {}\r\n  );\r\n  const handleScroll = useCallback(\r\n    (e) => {\r\n      const cc =\r\n        e.target.scrollHeight - (e.target.scrollTop + e.target.offsetHeight);\r\n      if (cc < 50) {\r\n        onScroll && onScroll();\r\n      }\r\n    },\r\n    [onScroll]\r\n  );\r\n  const handleEndScroll = useMemo(\r\n    () => _.debounce(handleScroll, 1000),\r\n    [handleScroll]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className=\"d-flex flex-column w-100 px-3\"\r\n      style={{ position: \"absolute\", top: 0, bottom: 0, overflow: \"auto\" }}\r\n      onScroll={handleEndScroll}\r\n    >\r\n      <TourModal onClose={handleClose} {...modalProps} />\r\n      {dates?.map((date) => (\r\n        <React.Fragment key={date}>\r\n          <div className=\"d-flex justify-content-center py-2 fw-bold\">\r\n            <span\r\n              className=\"border-senary border-bottom flex-grow-1\"\r\n              style={{ marginBottom: \"12px\" }}\r\n            />\r\n            <span className=\"text-center text-senary px-2\">{form(date)}</span>\r\n            <span\r\n              className=\"border-senary border-bottom flex-grow-1\"\r\n              style={{ marginBottom: \"12px\" }}\r\n            />\r\n          </div>\r\n          {mObject[date].map((t) => (\r\n            <Tour tour={t} key={t.id} onClick={handleShow} />\r\n          ))}\r\n          <div className=\"pt-4\"></div>\r\n        </React.Fragment>\r\n      ))}\r\n      {spinner && (\r\n        <div className=\"text-center\">\r\n          <Spinner animation=\"border\" variant=\"senary\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst Tour = ({ tour, onClick }) => {\r\n  const handleClick = useCallback(() => {\r\n    onClick && onClick(tour);\r\n  }, [tour, onClick]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"p-1 w-100 h-100 d-flex\">\r\n        <Button\r\n          onClick={handleClick}\r\n          variant=\"nonary\"\r\n          className=\"w-100  d-flex justify-content-between\"\r\n        >\r\n          <span className=\"ps-3 pe-3 text-truncate text-break\">\r\n            {tour.buildingSite}\r\n          </span>\r\n          <span className=\"pe-3\">{tour.arrival}</span>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TourModal = ({ show, onClose, ...tour }) => {\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onClose}\r\n      centered\r\n      className={\"dark-modal\"}\r\n      scrollable\r\n    >\r\n      <Modal.Header className=\"p-0 d-flex justify-content-end\">\r\n        <div className=\"p-2\">\r\n          <Button\r\n            variant=\"transparent\"\r\n            className=\"p-0 text-senary d-flex justify-content-center align-items-center\"\r\n            style={{ height: \"30px\", width: \"30px\" }}\r\n            onClick={onClose}\r\n          >\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </Button>\r\n        </div>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"pt-1\">\r\n        {getGridPrimaryLabels(\"tours\").map((key) => (\r\n          <div\r\n            key={key}\r\n            className=\"d-flex flex-wrap justify-content-between border-bottom border-senary text-senary fw-bolder\"\r\n          >\r\n            <div\r\n              className=\"text-start text-break text-wrap pe-2\"\r\n              style={{ minWidth: \"60px\" }}\r\n            >\r\n              {getGridLabels(\"tours\")[key]?.text}\r\n            </div>\r\n            <div className=\"flex-fill text-end text-break text-wrap ps-2 fw-bold\">\r\n              {tour &&\r\n                (tour[key] || \"\") +\r\n                  (getGridLabels(\"tours\")[key]?.measurement || \"\")}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nfunction form(date) {\r\n  const d = moment(date, \"YYYY.MM.DD\");\r\n  const today = moment();\r\n  return d === today\r\n    ? \"Today\"\r\n    : d === today.subtract(1, \"day\")\r\n    ? \"Yesterday\"\r\n    : d.format(\"YYYY\") === today.format(\"YYYY\")\r\n    ? d.format(\"DD MMMM\")\r\n    : date;\r\n}\r\n\r\nconst WorkHoursTab = () => {\r\n  const [date, setDate] = useState(moment());\r\n  const [workHours, setWorkHours] = useState();\r\n  const [day, setDay] = useState();\r\n  const workDays = workHours && Object.keys(workHours);\r\n\r\n  const to = useMemo(() => date.format(\"YYYY.MM\") + \".31\", [date]);\r\n  const from = useMemo(\r\n    () => date.subtract(1, \"y\").format(\"YYYY.MM\") + \".01\",\r\n    [date]\r\n  );\r\n  const workHour = day && workHours[day];\r\n  const { fetchUserWorkHours } = useServices();\r\n  useEffect(() => {\r\n    fetchUserWorkHours(from, to).then(({ data }) => {\r\n      const workHours = data?.content?.reduce(\r\n        (a, { date, begin, end, pause }) => ({\r\n          ...a,\r\n          [date]: { begin, end, pause, date },\r\n        }),\r\n        {}\r\n      );\r\n      setWorkHours(workHours);\r\n    });\r\n  }, [fetchUserWorkHours, from, to]);\r\n\r\n  const handleMonthYearChange = (v) => {\r\n    setDay();\r\n  };\r\n\r\n  const handleClick = (day) => setDay(day);\r\n  return (\r\n    <div className=\"date-picker-overview\">\r\n      <div>\r\n        <DateSelector\r\n          variant=\"darker\"\r\n          carousel\r\n          disableMonthSwap\r\n          onMonthChange={handleMonthYearChange}\r\n          from={\"2022.02.01\"}\r\n          max={moment().add(1, \"day\").format(\"YYYY.MM.DD\")}\r\n          highlightedDays={workDays}\r\n          onChange={handleClick}\r\n          singleDate\r\n        />\r\n      </div>\r\n\r\n      {workHour && <WorkHour {...workHour} />}\r\n    </div>\r\n  );\r\n};\r\nconst WorkHour = ({ begin, end, pause, date }) => {\r\n  return (\r\n    <>\r\n      <Accordion defaultActiveKey=\"0\" className=\"px-2 accordion-dark\">\r\n        <Accordion.Item className=\"w-100\" eventKey=\"0\">\r\n          <Accordion.Header>\r\n            <div className=\"w-100 d-flex flex-nowrap justify-content-center fw-bold\">\r\n              <span>{moment(date, \"YYYY.MM.DD\").format(\"dddd\")}</span>\r\n              <span className=\"ps-2\">\r\n                {durationFormat(calcDurationAndFormat([begin, end]))}\r\n              </span>\r\n            </div>\r\n          </Accordion.Header>\r\n          <Accordion.Body className=\"d-flex flex-column\">\r\n            <div className=\"d-flex flex-nowrap  justify-content-between\">\r\n              <span>Begin</span>\r\n              <span>{begin}</span>\r\n            </div>\r\n            <div className=\"d-flex flex-nowrap  justify-content-between py-1\">\r\n              <span>End</span>\r\n              <span>{end}</span>\r\n            </div>\r\n            <div className=\"d-flex flex-nowrap  justify-content-between\">\r\n              <span>Pause</span>\r\n              <span>{pause}</span>\r\n            </div>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\nexport default UserOverview;\r\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, Card, Col, Nav, Row, Tab } from \"@themesberg/react-bootstrap\";\nimport { isEqual } from \"lodash\";\nimport React, { memo, useCallback, useEffect, useRef, useState } from \"react\";\nimport Scrollbars from \"react-custom-scrollbars-2\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useLoadData } from \"../../api/apiMappers\";\nimport { ComponentPreLoader } from \"../../components/ComponentPreLoader\";\nimport { GridTableComponent } from \"../../components/Table/GridComponent\";\nimport {\n  getGridLabels,\n  getGridPrimaryLabels,\n} from \"../myComponents/util/labels\";\nimport { useServices } from \"../myComponents/util/services\";\nimport { gridTableSlice } from \"../reducers/redux\";\n\nconst useLoader = (stateAPIStatus) => {\n  const navigate = useNavigate();\n  if (stateAPIStatus === \"success\") {\n    return <SettingsComponent />;\n  } else if (stateAPIStatus === \"error\") {\n    return navigate(\"/500\");\n  } else {\n    return (\n      <div className=\"d-flex h-100 align-items-center\">\n        <ComponentPreLoader show={true} />\n      </div>\n    );\n  }\n};\nexport const Settings = () => {\n  const { actions } = gridTableSlice;\n  const stateAPIStatus = useLoadData(\"settingsTable\", actions);\n  return useLoader(stateAPIStatus);\n};\n\nconst SettingsComponent = memo(() => {\n  const { actions, selectors } = gridTableSlice;\n  const { fetchAddToursSettings, postSettings } = useServices();\n  const [addToursSettings, setAddToursSettings] = useState();\n  useEffect(() => {\n    fetchAddToursSettings().then((res) =>\n      setAddToursSettings(JSON.parse(res.data[0].values[0]))\n    );\n  }, [fetchAddToursSettings]);\n\n  const renderComponent = useCallback(\n    (entityId) => (\n      <GridTableComponent\n        {...{\n          stateAPIStatus: \"success\",\n          actions,\n          selectors,\n          entityId,\n        }}\n      />\n    ),\n    [selectors, actions]\n  );\n\n  return (\n    <div className=\"d-flex flex-wrap w-100 align-items-start\">\n      <div className=\"d-flex flex-wrap col-12 col-xxl-6 order-2 order-xxl-1\">\n        <div className=\"col-lg-6 order-1 col-12 p-2\">\n          {renderComponent(\"settingsWorkPlant\")}\n        </div>\n        <div className=\"col-lg-6 order-2 col-12\">\n          <div className=\"col-lg-12 col-12 p-2\">\n            {renderComponent(\"settingsDischargeType\")}\n          </div>\n          <div className=\"col-lg-12 col-12 p-2\">\n            {renderComponent(\"settingsVehicle\")}\n          </div>\n        </div>\n      </div>\n      <div className=\"d-flex flex-wrap order-1 order-xxl-2 col-12 col-xxl-6\">\n        <div className=\"col-12 p-2\">\n          <Card>\n            <Card.Header className=\"p-1 border-0\">\n              <Button variant=\"transparent\">\n                <h5 className=\"m-0 p-3\">User Add Tours Layout</h5>\n              </Button>\n            </Card.Header>\n            <Card.Body className=\"pt-0\">\n              {addToursSettings && (\n                <SettingsCard\n                  settings={addToursSettings}\n                  entityId={\"tours\"}\n                  postSettings={postSettings}\n                ></SettingsCard>\n              )}\n            </Card.Body>\n          </Card>\n        </div>\n        <div className=\"col-12 p-2 order-1 order-xxl-1\">\n          {renderComponent(\"publicHolidays\")}\n        </div>\n      </div>\n    </div>\n  );\n}, isEqual);\n\nconst SettingsCard = ({ settings, entityId, postSettings }) => {\n  const labels = getGridLabels(entityId);\n  const [activeKey, setActiveKey] = useState(\"tab1\");\n  const primarylabels = getGridPrimaryLabels(entityId);\n  const tabs = Object.keys(settings);\n  const [newTabLabels, setNewTabLabels] = useState(\n    tabs.reduce((a, b) => ({ ...a, [b]: settings[b].labels }), {})\n  );\n  const [newTabTitle, setTabTitle] = useState(\n    tabs.reduce((a, b) => ({ ...a, [b]: settings[b].title }), {})\n  );\n  const handleResetClick = useCallback(() => {\n    setNewTabLabels(\n      tabs.reduce((a, b) => ({ ...a, [b]: settings[b].labels }), {})\n    );\n    setTabTitle(tabs.reduce((a, b) => ({ ...a, [b]: settings[b].title }), {}));\n  }, [settings, tabs]);\n  const handleSave = useCallback(() => {\n    // postSettings(newTabLabels);\n    const b = tabs.reduce(\n      (a, b) => ({\n        ...a,\n        [b]: { labels: newTabLabels[b], title: newTabTitle[b] },\n      }),\n      {}\n    );\n    const body = { id: \"add-tours\", value: JSON.stringify(b) };\n    const body2 = {\n      id: \"work-plant\",\n      value: JSON.stringify([\n        \"Dortmund Holcim\",\n        \"Ludenscheid Holcim\",\n        \"Balve Holcim\",\n        \"Plettenberg Holcim\",\n        \"Unna Holcim\",\n        \"Luenen Holcim\",\n        \"Radevormwald Holcim\",\n        \"Wuppertal Holcim\",\n        \"Herne Holcim\",\n        \"Sonstige Holcim\",\n        \"Iserlohn Elskes\",\n        \"Witten Elskes\",\n        \"Dortmund Elskes\",\n        \"Kamen Elskes\",\n        \"Werl Elskes\",\n        \"Sonstige Elskes\",\n        \"Soest Hellwegbeton\",\n        \"Sonstige Hellwegbeton\",\n        \"Sundern TB Westenfeld\",\n        \"Neheim TB Westenfeld\",\n        \"Sprockhoevel TER\",\n        \"Menden Herbrueger\",\n        \"Meschede TB Meschede\",\n        \"Sonstige\",\n      ]),\n    };\n    // postSettings(body);\n    postSettings(body2);\n  }, [postSettings, newTabLabels, newTabTitle, tabs]);\n\n  return (\n    <div className=\"d-flex flex-wrap w-100 justify-content-center\">\n      <UserField\n        className=\"col-xxl-12 col-xl-6 col-12\"\n        tabs={tabs}\n        newTabTitle={newTabTitle}\n        setTabTitle={setTabTitle}\n        primarylabels={primarylabels}\n        newTabLabels={newTabLabels}\n        activeKey={activeKey}\n        setNewTabLabels={setNewTabLabels}\n        labels={labels}\n      />\n      <UserDisplay\n        className=\"col-xxl-12 col-xl-6 col-12\"\n        activeKey={activeKey}\n        settings={settings}\n        newTabLabels={newTabLabels}\n        newTabTitle={newTabTitle}\n        labels={labels}\n        setActiveKey={setActiveKey}\n        tabs={tabs}\n        onReset={handleResetClick}\n        onSave={handleSave}\n      />\n    </div>\n  );\n};\nconst UserField = ({\n  tabs,\n  newTabTitle,\n  setTabTitle,\n  primarylabels,\n  newTabLabels,\n  activeKey,\n  setNewTabLabels,\n  labels,\n  className = \"\",\n}) => {\n  return (\n    <div\n      className={`d-flex flex-column col-6 justify-content-center ${className}`}\n      // style={{ maxWidth: \"520px\" }}\n    >\n      <div className=\"d-flex w-100 flex-wrap justify-content-center align-content-center pb-2 border-bottom\">\n        {tabs.map((t) => (\n          <TitleButton\n            key={t}\n            value={newTabTitle[t]}\n            onChange={(v) => setTabTitle((old) => ({ ...old, [t]: v }))}\n          />\n        ))}\n      </div>\n\n      <div className=\"w-100 pt-2 d-flex flex-wrap justify-content-center align-content-center\">\n        {primarylabels.map((p) => (\n          <div className=\"p-2\" style={{ height: \"50px\" }} key={p}>\n            <Button\n              className=\"w-100 h-100 p-0 px-3\"\n              variant={\n                newTabLabels[activeKey].includes(p)\n                  ? \"light-tertiary\"\n                  : tabs\n                      .filter((t) => t !== activeKey)\n                      .reduce((a, b) => [...a, ...newTabLabels[b]], [])\n                      .includes(p)\n                  ? \"very-light-blue\"\n                  : \"light\"\n              }\n              onClick={() => {\n                setNewTabLabels((old) => {\n                  const alreadyExists = old[activeKey].includes(p);\n                  return {\n                    ...old,\n                    [activeKey]: alreadyExists\n                      ? old[activeKey].filter((l) => l !== p)\n                      : [...old[activeKey], p],\n                  };\n                });\n              }}\n            >\n              {labels[p].text}\n            </Button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\nconst UserDisplay = ({\n  activeKey,\n  setActiveKey,\n  settings,\n  labels,\n  tabs,\n  newTabLabels,\n  onReset,\n  onSave,\n  newTabTitle,\n  className = \"\",\n}) => {\n  return (\n    <div className={`p-2 ${className}`}>\n      <div\n        className={`bg-darker-nonary p-5 rounded `}\n        style={{\n          // minWidth: \"600px\",\n          // transform: \"scale(0.8)\",\n          height: \"fit-content\",\n        }}\n      >\n        <Tab.Container activeKey={activeKey}>\n          <Row>\n            <Col lg={12} className=\"\">\n              <Nav className=\"nav-tabs d-flex flex-nowrap justify-content-around w-100 border-0\">\n                {tabs.map((t) => (\n                  <Nav.Item className=\"col-4\" key={t}>\n                    <Nav.Link\n                      onClick={() => setActiveKey(t)}\n                      eventKey={t}\n                      className={\n                        \"border-bottom  border-senary mb-sm-3 mb-md-0 text-center fw-bolder px-1 \" +\n                        (activeKey === t\n                          ? \"text-nonary bg-senary\"\n                          : \"text-senary bg-darker-nonary\")\n                      }\n                    >\n                      {newTabTitle[t]}\n                    </Nav.Link>\n                  </Nav.Item>\n                ))}\n              </Nav>\n            </Col>\n            <Col lg={12}>\n              <Tab.Content>\n                {tabs.map((t) => (\n                  <Tab.Pane eventKey={t} className=\"py-4\" key={t}>\n                    <Scrollbars\n                      // autoHide={false}\n                      autoHeight\n                      autoHeightMax={300}\n                    >\n                      {newTabLabels[t].map((l) => (\n                        <BCard title={labels[l].text} key={l} />\n                      ))}\n                    </Scrollbars>\n                  </Tab.Pane>\n                ))}\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n        <div className=\"d-flex flex-nowrap w-100 justify-content-center bottom-0\">\n          <div className=\"px-2\">\n            <Button\n              onClick={onReset}\n              className=\"fw-bolder\"\n              variant=\"nonary\"\n              style={{\n                width: \"80px\",\n                fontWeight: \"800\",\n              }}\n            >\n              Reset\n            </Button>\n          </div>\n          <div className=\"px-2\">\n            <Button\n              className=\"fw-bolder\"\n              variant={\"senary\"}\n              style={{\n                width: \"80px\",\n                fontWeight: \"800\",\n              }}\n              onClick={onSave}\n            >\n              Save\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst TitleButton = ({ value: initialValue, onChange }) => {\n  const [editable, setEditable] = useState(false);\n  const [value, setValue] = useState(initialValue);\n  const ref = useRef();\n\n  const handleInputChange = useCallback((e) => setValue(e.target.value), []);\n  const handleBlur = useCallback(\n    (e) => {\n      setEditable(false);\n      onChange(value);\n    },\n    [onChange, value]\n  );\n\n  useEffect(() => {\n    ref.current.focus();\n  }, [editable]);\n\n  return (\n    <div className=\"p-2\" style={{ height: \"50px\" }}>\n      <Button\n        onClick={(e) => {\n          e.preventDefault();\n          setEditable(true);\n        }}\n        className=\"w-100 h-100 p-0 px-3\"\n        variant=\"senary\"\n      >\n        <input\n          ref={ref}\n          disabled={!editable}\n          autoFocus\n          className={`border-0 ${\n            editable ? \"bg-white\" : \"bg-transparent\"\n          } text-center text-dark  opacity-100 fw-bold`}\n          value={value}\n          style={{ maxWidth: \"100px\", outline: \"0\" }}\n          onBlur={handleBlur}\n          onChange={handleInputChange}\n        ></input>\n      </Button>\n    </div>\n  );\n};\nconst BCard = ({ title, titleWidth = \"50px\", contentWidth }) => {\n  return (\n    <div className=\"p-1\">\n      <Button variant=\"nonary\" className={\"w-100 p-0\"}>\n        <Card bg=\"transparent border-0\">\n          <Card.Body className=\"d-flex flex-nowrap justify-content-between align-items-center p-3 border-0 fw-bolder\">\n            <div\n              className={\"text-start text-break text-wrap\"}\n              style={{ fontWeight: \"800\", minWidth: titleWidth }}\n            >\n              {title}\n            </div>\n            <div\n              className=\"d-flex justify-content-end\"\n              style={{ width: contentWidth }}\n            >\n              <div className={\"text-end text-break text-wrap \"}>\n                <div className=\"pe-2\">\n                  <FontAwesomeIcon icon={faPlus} size=\"xs\" />\n                </div>\n              </div>\n            </div>\n          </Card.Body>\n        </Card>\n      </Button>\n    </div>\n  );\n};\n\nexport default Settings;\n","import { isEqual } from \"lodash\";\nimport React, { memo, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useLoadData } from \"../../api/apiMappers\";\nimport { ComponentPreLoader } from \"../../components/ComponentPreLoader\";\nimport { GridTableComponent } from \"../../components/Table/GridComponent\";\nimport { gridTableSlice } from \"../reducers/redux\";\n\nconst useLoader = (stateAPIStatus) => {\n  const navigate = useNavigate();\n  if (stateAPIStatus === \"success\") {\n    return <UsersComponent />;\n  } else if (stateAPIStatus === \"error\") {\n    return navigate(\"/500\");\n  } else {\n    return (\n      <div className=\"d-flex h-100 align-items-center\">\n        <ComponentPreLoader show={true} />\n      </div>\n    );\n  }\n};\nexport const Users = () => {\n  const { actions } = gridTableSlice;\n  const stateAPIStatus = useLoadData(\"usersTable\", actions);\n  return useLoader(stateAPIStatus);\n};\n\nconst UsersComponent = memo(() => {\n  const { actions, selectors } = gridTableSlice;\n  const renderComponent = useCallback(\n    (entityId) => (\n      <GridTableComponent\n        {...{\n          stateAPIStatus: \"success\",\n          actions,\n          selectors,\n          entityId,\n        }}\n      />\n    ),\n    [selectors, actions]\n  );\n\n  return (\n    <div className=\"d-flex flex-wrap w-100\">\n      <div className=\"col-12\">{renderComponent(\"users\")}</div>\n    </div>\n  );\n}, isEqual);\n\nexport default Users;\n","import {\r\n  faAt,\r\n  faCamera,\r\n  faLocationArrow,\r\n  faPen,\r\n  faTruck,\r\n  faUser,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Image,\r\n  Modal,\r\n  Spinner,\r\n} from \"@themesberg/react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nconst UserSettings = () => {\r\n  const { currentUser, updateUser, updatePhone, claims } = useAuth();\r\n  const [customClaims, setCustomClaims] = useState();\r\n  useEffect(() => claims().then((r) => setCustomClaims(r)), [claims]);\r\n\r\n  const hiddenFileInput = useRef();\r\n  const [show, setShow] = useState();\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleNameChange = (value) =>\r\n    updateUser({ displayName: value }).then(() => setShow(false));\r\n  const handlePhoneChange = (value) =>\r\n    updatePhone(value).then(() => setShow(false));\r\n  const handleClick = useCallback(() => hiddenFileInput.current.click(), []);\r\n  const uploadPhoto = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file.type === \"image/jpeg\" || file.type === \"image/png\") {\r\n      setShow(true);\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"upload_preset\", \"aewhjhan\");\r\n      formData.append(\r\n        \"public_id\",\r\n        \"bt/users/\" + currentUser.uid + \"/\" + moment().toISOString()\r\n      );\r\n      const options = { method: \"POST\", body: formData };\r\n      fetch(\"https://api.cloudinary.com/v1_1/duvwxquad/upload\", options).then(\r\n        (res) =>\r\n          res.json().then(({ secure_url, ...rest }) => {\r\n            const newUrl = secure_url.replace(\r\n              \"/upload/\",\r\n              \"/upload/w_300,c_fill,ar_1:1,g_auto,r_max,b_rgb:262c35/\"\r\n            );\r\n            updateUser({ photoURL: newUrl }).then((rk) => {\r\n              setShow(false);\r\n            });\r\n          })\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className={` w-100 h-100 align-items-start justify-content-start d-flex flex-column bg-darker-nonary`}\r\n    >\r\n      <div className=\"w-100 h-100 d-flex flex-column pt-3  user-settings\">\r\n        <Card className=\"text-center p-0 mb-4 border-0 text-senary\">\r\n          <Card.Header className=\"pb-1 bg-darker-nonary d-flex justify-content-center flex-column border-0\">\r\n            <div className=\"d-flex justify-content-center\">\r\n              <div>\r\n                {currentUser.photoURL ? (\r\n                  <Image\r\n                    src={currentUser.photoURL}\r\n                    className=\"user-avatar large-avatar rounded-circle border-0\"\r\n                    resize=\"contain\"\r\n                  />\r\n                ) : (\r\n                  <div\r\n                    className=\"bg-nonary text-senary rounded-circle fw-bolder user-avatar large-avatar rounded-circle border-0\"\r\n                    style={{\r\n                      height: \"30px\",\r\n                      width: \"30px\",\r\n                      lineHeight: \"30px\",\r\n                      textAlign: \"center\",\r\n                      fontSize: \"40px\",\r\n                    }}\r\n                  >\r\n                    {(currentUser.displayName || currentUser.email).substring(\r\n                      0,\r\n                      2\r\n                    )}\r\n                  </div>\r\n                )}\r\n\r\n                <div\r\n                  style={{\r\n                    position: \"relative\",\r\n                    height: \"40px\",\r\n                    width: \"40px\",\r\n                    bottom: \"40px\",\r\n                    right: \"-100px\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    className=\"w-100 h-100 rounded-circle p-0 d-flex justify-content-center align-items-center\"\r\n                    variant=\"senary\"\r\n                    onClick={handleClick}\r\n                  >\r\n                    <FontAwesomeIcon size=\"lg\" icon={faCamera} />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <input\r\n              type=\"file\"\r\n              ref={hiddenFileInput}\r\n              onChange={uploadPhoto}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </Card.Header>\r\n          <Card.Body className=\"bg-darker-nonary px-2 py-0\">\r\n            <div className=\"d-flex flex-column justify-content-center\">\r\n              <EditableField\r\n                value={currentUser.displayName}\r\n                title=\"Name\"\r\n                icon={faUser}\r\n                editable\r\n                onChange={handleNameChange}\r\n              />\r\n              <EditableField\r\n                icon={faAt}\r\n                value={currentUser.email}\r\n                title=\"E-mail\"\r\n              />\r\n              {customClaims?.vehicle && (\r\n                <EditableField\r\n                  icon={faTruck}\r\n                  title=\"Vehicle\"\r\n                  value={customClaims.vehicle}\r\n                />\r\n              )}\r\n              {customClaims?.workPlant && (\r\n                <EditableField\r\n                  icon={faLocationArrow}\r\n                  title=\"Work Plant\"\r\n                  value={customClaims.workPlant}\r\n                />\r\n              )}\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        centered\r\n        contentClassName=\"bg-transparent text-center\"\r\n      >\r\n        <Modal.Body>\r\n          <Spinner animation=\"border\" className=\"text-white\" />\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nconst EditableField = ({\r\n  editable,\r\n  onChange,\r\n  value,\r\n  placeholder,\r\n  title,\r\n  icon,\r\n}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const handleClick = () => setEditMode((old) => !old);\r\n  const handleClose = () => setEditMode(false);\r\n  const handleSave = (v) => onChange(v).then(() => setEditMode(false));\r\n  const handleCancel = () => {\r\n    setEditMode(false);\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className={`d-flex ps-1 pe-4 py-2 w-100 flex-nowrap justify-content-around align-items-center `}\r\n        style={{\r\n          paddingBottom: editMode && \"1px\",\r\n        }}\r\n      >\r\n        <div className=\"text-darker-senary pb-2\" style={{ width: \"30px\" }}>\r\n          <FontAwesomeIcon icon={icon}></FontAwesomeIcon>\r\n        </div>\r\n        <div\r\n          className=\"flex-fill ms-3 d-flex pb-2\"\r\n          style={{\r\n            borderBottom: \"0.0625rem solid rgb(252 111 91 / 48%)\",\r\n          }}\r\n        >\r\n          <div className=\"pe-3 flex-fill flex-column fw-bold w-100 d-flex justify-content-start align-items-start\">\r\n            <span className=\"text-darker-senary\">{title}</span>\r\n            <span>{value}</span>\r\n          </div>\r\n          {editable && (\r\n            <>\r\n              <div\r\n                className=\"text-darker-senary d-flex justify-content-center align-items-center\"\r\n                style={{ width: \"30px\" }}\r\n              >\r\n                <Button\r\n                  variant=\"transparent\"\r\n                  className=\"text-darker-senary p-0 border-0 shadow-none \"\r\n                  size=\"sm\"\r\n                  onClick={handleClick}\r\n                >\r\n                  <FontAwesomeIcon icon={faPen} />\r\n                </Button>\r\n              </div>\r\n              <EditModal\r\n                show={editMode}\r\n                onClose={handleClose}\r\n                onSave={handleSave}\r\n                onCancel={handleCancel}\r\n                title={title}\r\n                value={value}\r\n                placeholder={placeholder}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst EditModal = ({\r\n  show,\r\n  onClose,\r\n  title,\r\n  value: initialValue,\r\n  placeholder,\r\n  onSave,\r\n  onCancel,\r\n}) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const handleInputChange = (e) => setValue(e.target.value);\r\n  const handleCancel = () => {\r\n    setValue(initialValue);\r\n    onCancel();\r\n  };\r\n  const handleSave = () => {\r\n    onSave(value);\r\n  };\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onClose}\r\n      centered\r\n      fullscreen\r\n      contentClassName=\"bg-transparent text-center\"\r\n      dialogClassName=\"dark-modal\"\r\n    >\r\n      <Modal.Body className=\"d-flex align-items-end w-100\">\r\n        <>\r\n          <Card className=\"bg-darker-nonary w-100\">\r\n            <Card.Header className=\"pb-1\">\r\n              <div className=\"d-flex fw-bolder text-senary\">Insert {title}</div>\r\n            </Card.Header>\r\n            <Card.Body className=\"py-1 d-flex justify-content-start flex-column text-senary\">\r\n              <input\r\n                value={value}\r\n                spellCheck={false}\r\n                placeholder={placeholder}\r\n                className=\"w-100 col-10 border-0 shadow-none fw-bold p-0 border-bottom border-senary text-senary\"\r\n                style={{ backgroundColor: \"transparent\", outline: \"none\" }}\r\n                autoFocus\r\n                onChange={handleInputChange}\r\n              />\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <div className=\"w-100 d-flex justify-content-end\">\r\n                <Button\r\n                  variant=\"nonary\"\r\n                  className=\"me-2\"\r\n                  onClick={handleCancel}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  variant=\"senary\"\r\n                  className=\"fw-bold\"\r\n                  onClick={handleSave}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </Card.Footer>\r\n          </Card>\r\n        </>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\nexport default UserSettings;\r\n","import { faEdit, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Accordion, Button, Card } from \"@themesberg/react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { ButtonGroup, Modal } from \"react-bootstrap\";\r\nimport { DatePickerModal } from \"../../components/DatePicker\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { useServices } from \"../myComponents/util/services\";\r\n\r\nconst UserVacations = () => {\r\n  const { currentUser } = useAuth();\r\n  const { fetchUpComingVacations, deleteVacation, postVacations } =\r\n    useServices();\r\n  const [vacations, setVacations] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const [currentId, setCurrentId] = useState();\r\n  const handleCloseModal = () => setShow(false);\r\n\r\n  const handleShowModal = useCallback((id) => {\r\n    setCurrentId(id);\r\n    setShow(true);\r\n  }, []);\r\n  const handleDateChange = useCallback(\r\n    (id, v) => {\r\n      const data = {\r\n        driver: currentUser.uid,\r\n        dateFrom: v[0],\r\n        dateTo: v[1],\r\n        reason: \"vacations\",\r\n        verified: 0,\r\n      };\r\n      postVacations([id ? { ...data, id } : data]).then(() =>\r\n        fetchUpComingVacations(currentUser.uid).then(({ data }) => {\r\n          const content = [...data.content].sort((a, b) =>\r\n            a.dateFrom > b.dateFrom ? -1 : 1\r\n          );\r\n          setVacations(content);\r\n          setShow(false);\r\n        })\r\n      );\r\n    },\r\n    [currentUser.uid, fetchUpComingVacations, postVacations]\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchUpComingVacations(currentUser?.uid).then(({ data }) => {\r\n      const content = [...data.content].sort((a, b) =>\r\n        a.dateFrom > b.dateFrom ? -1 : 1\r\n      );\r\n      setVacations(content);\r\n    });\r\n  }, [fetchUpComingVacations, currentUser.uid]);\r\n  const handleDelete = useCallback(() => {\r\n    deleteVacation(currentId).then((r) => {\r\n      fetchUpComingVacations(currentUser.uid).then(({ data }) => {\r\n        const content = [...data.content].sort((a, b) =>\r\n          a.dateFrom > b.dateFrom ? -1 : 1\r\n        );\r\n        setVacations(content);\r\n        setShow(false);\r\n      });\r\n    });\r\n  }, [currentId, deleteVacation, fetchUpComingVacations, currentUser.uid]);\r\n\r\n  return (\r\n    <div\r\n      className={` w-100 h-100 align-items-center justify-content-start d-flex flex-column bg-darker-nonary`}\r\n    >\r\n      <div className=\"p-3 w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <div className=\"text-center text-senary border-bottom border-senary fw-bold py-3\">\r\n          Upcoming Vacations\r\n        </div>\r\n        <div className=\"py-4\">\r\n          <div className=\"w-100 d-flex justify-content-center p-1\">\r\n            <DatePickerModal\r\n              carousel\r\n              variant=\"darker\"\r\n              disableMonthSwap\r\n              min={moment().format(\"YYYY.MM.DD\")}\r\n              buttonVariant={\"senary\"}\r\n              singleDate={false}\r\n              buttonText={<FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>}\r\n              onChange={(v) => handleDateChange(null, v)}\r\n            />\r\n          </div>\r\n          <Accordion>\r\n            {vacations?.map((t, index) => (\r\n              <AccordionCard\r\n                key={t.id}\r\n                itemClassName=\"bg-nonary\"\r\n                index={index}\r\n                value={\r\n                  <>\r\n                    <CCard\r\n                      variant=\"nonary\"\r\n                      middle={t.days}\r\n                      left={t.dateFrom}\r\n                      right={t.dateTo}\r\n                      verified={t.verified}\r\n                    />\r\n                  </>\r\n                }\r\n              >\r\n                <div className=\"w-100 d-flex justify-content-around py-1\">\r\n                  {t.verified !== 1 && (\r\n                    <div>\r\n                      <DatePickerModal\r\n                        // size=\"sm\"\r\n                        variant=\"darker\"\r\n                        carousel\r\n                        disableMonthSwap\r\n                        min={moment().format(\"YYYY.MM.DD\")}\r\n                        from={t.dateFrom}\r\n                        to={t.dateTo}\r\n                        buttonVariant={\"senary shadow-none\"}\r\n                        singleDate={false}\r\n                        buttonText={\r\n                          <FontAwesomeIcon icon={faEdit}></FontAwesomeIcon>\r\n                        }\r\n                        onChange={(v) => handleDateChange(t.id, v)}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  <Button\r\n                    className=\"shadow-none\"\r\n                    variant=\"senary\"\r\n                    // size=\"sm\"\r\n                    onClick={(e) => handleShowModal(t.id)}\r\n                  >\r\n                    <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\r\n                  </Button>\r\n                </div>\r\n              </AccordionCard>\r\n            ))}\r\n          </Accordion>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        className=\"user-modal bg-transparent\"\r\n        show={show}\r\n        onHide={handleCloseModal}\r\n        centered\r\n      >\r\n        <Modal.Header closeButton closeVariant=\"white\">\r\n          <Modal.Title>Delete Work Hour</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure you want to delete this work hour?</Modal.Body>\r\n        <Modal.Footer>\r\n          <ButtonGroup className=\"w-100\">\r\n            <Button\r\n              className=\"col-6\"\r\n              variant=\"nonary\"\r\n              onClick={handleCloseModal}\r\n            >\r\n              Close\r\n            </Button>\r\n            <Button\r\n              className=\"col-6\"\r\n              variant=\"senary text-darker-nonary fw-bolder\"\r\n              onClick={handleDelete}\r\n            >\r\n              Delete <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CCard = ({ left, right, verified }) => {\r\n  return (\r\n    <Card bg=\"transparent border-0\" className={\"w-100 p-0\"}>\r\n      <Card.Body\r\n        className=\"d-flex flex-wrap justify-content-between align-items-top py-1 px-0 border-0\"\r\n        style={{ minHeight: \"70px\" }}\r\n      >\r\n        <div className=\"col-6 pe-3 flex-fill d-flex flex-column align-items-center text-nonary\">\r\n          <div className=\"fw-bolder text-senary\">{left}</div>\r\n        </div>\r\n        <div className=\"col-6 ps-3 flex-fill d-flex flex-column align-items-center text-nonary\">\r\n          <div className=\"fw-bolder text-senary\">{right}</div>\r\n        </div>\r\n        <div\r\n          className={\r\n            \"col-12 text-senary fw-bolder text-center \" +\r\n            (verified === 1\r\n              ? \"text-confirmed\"\r\n              : verified === 0\r\n              ? \"text-pending\"\r\n              : \"text-declined\")\r\n          }\r\n          style={{ fontSize: \"18px\" }}\r\n        >\r\n          {verified === 1\r\n            ? \"Confirmed\"\r\n            : verified === 0\r\n            ? \"Pending\"\r\n            : \"Declined\"}\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst AccordionCard = ({\r\n  value,\r\n  children,\r\n  className = \"\",\r\n  itemClassName,\r\n  index,\r\n}) => {\r\n  return (\r\n    <div className={\"p-1 border-0 h-100 w-100 user-card \" + className}>\r\n      <Accordion.Item className={itemClassName} eventKey={index}>\r\n        <Accordion.Header>{value}</Accordion.Header>\r\n        <Accordion.Body className=\"p-0 py-3 border-top px-2 border-darker-senary\">\r\n          {children}\r\n        </Accordion.Body>\r\n      </Accordion.Item>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserVacations;\r\n","import { isEqual } from \"lodash\";\r\nimport * as React from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useState, memo, useEffect } from \"react\";\r\nexport const OutlinedSelect = memo(({ onChange, value, values }) => {\r\n  const [selectedValue, setSelectedValue] = useState(value);\r\n  useEffect(() => setSelectedValue(value), [value]);\r\n\r\n  function handleChange(e) {\r\n    setSelectedValue(e);\r\n    onChange(e.value);\r\n  }\r\n\r\n  return (\r\n    <div style={{ minWidth: \"250px\" }}>\r\n      <Select\r\n        className=\"basic-select\"\r\n        classNamePrefix=\"select_user\"\r\n        value={selectedValue}\r\n        onChange={handleChange}\r\n        options={values}\r\n        theme={(theme) => ({\r\n          ...theme,\r\n          colors: {\r\n            ...theme.colors,\r\n            primary25: \"#F1F8FE\",\r\n          },\r\n        })}\r\n      />\r\n    </div>\r\n  );\r\n}, isEqual);\r\n","import { isEqual } from \"lodash\";\r\nimport React, { memo, useCallback, useMemo, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useLoadData } from \"../../api/apiMappers\";\r\nimport { ComponentPreLoader } from \"../../components/ComponentPreLoader\";\r\nimport { OutlinedSelect } from \"../../components/MuiSelect\";\r\nimport { GridTableComponent } from \"../../components/Table/GridComponent\";\r\nimport { gridTableSlice } from \"../reducers/redux\";\r\n\r\nconst useLoader = (stateAPIStatus, setDriver, slice) => {\r\n  const navigate = useNavigate();\r\n  if (stateAPIStatus === \"success\") {\r\n    return (\r\n      <div className=\"col-12\">\r\n        <DriverPicker setDriver={setDriver} selectors={slice.selectors} />\r\n        <DashBoardComponent {...slice} />\r\n      </div>\r\n    );\r\n  } else if (stateAPIStatus === \"error\") {\r\n    return navigate(\"/500\");\r\n  } else {\r\n    return (\r\n      <div className=\"d-flex h-100 align-items-center\">\r\n        <ComponentPreLoader show={true} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport const DashboardWorkHours = () => {\r\n  const slice = gridTableSlice;\r\n  const [driver, setDriver] = useState();\r\n  const stateAPIStatus = useLoadData(\"workHoursTable\", slice.actions, driver);\r\n  return useLoader(stateAPIStatus, setDriver, slice);\r\n};\r\n\r\nconst DriverPicker = memo(({ setDriver, selectors }) => {\r\n  const selectCurrentDriver = useCallback(\r\n    (state) => selectors.metaSelector.selectById(state, \"driver\")?.value,\r\n    [selectors]\r\n  );\r\n  const selectDrivers = useCallback(\r\n    (state) => selectors.metaSelector.selectById(state, \"drivers\")?.drivers,\r\n    [selectors]\r\n  );\r\n\r\n  const currentDriver = useSelector(selectCurrentDriver);\r\n  const drivers = useSelector(selectDrivers);\r\n\r\n  const currentSelectLabel = useMemo(\r\n    () => ({\r\n      value: currentDriver?.uid,\r\n      label: currentDriver?.name || currentDriver?.email,\r\n    }),\r\n    [currentDriver]\r\n  );\r\n  const inputSelectLabels = useMemo(\r\n    () => drivers?.map((d) => ({ value: d.uid, label: d.name || d.email })),\r\n    [drivers]\r\n  );\r\n  return (\r\n    <div className=\"d-flex px-sm-0 px-2 py-3\">\r\n      <OutlinedSelect\r\n        onChange={setDriver}\r\n        value={currentSelectLabel}\r\n        values={inputSelectLabels}\r\n      ></OutlinedSelect>\r\n    </div>\r\n  );\r\n}, isEqual);\r\n\r\nconst DashBoardComponent = memo(({ actions, selectors }) => {\r\n  const renderComponent = useCallback(\r\n    (entityId) => (\r\n      <GridTableComponent\r\n        {...{\r\n          stateAPIStatus: \"success\",\r\n          actions,\r\n          selectors,\r\n          entityId,\r\n        }}\r\n      />\r\n    ),\r\n    [selectors, actions]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"col-12 pb-2 d-flex flex-wrap\">\r\n        <div className=\"col-12 col-xxl-7 px-sm-0 px-2 pt-0 pe-sm-2\">\r\n          {renderComponent(\"workHours\")}\r\n        </div>\r\n        <div className=\"col-12 col-xxl-5 px-sm-0 px-2 py-0\">\r\n          <div className=\"col-12 pt-3 pt-xxl-0\">\r\n            {renderComponent(\"vacationsOverview\")}\r\n          </div>\r\n          <div className=\"col-12  pt-3\">{renderComponent(\"vacations\")}</div>\r\n          <div className=\"col-12  pt-3\">{renderComponent(\"workHoursBank\")}</div>\r\n          <div className=\"col-12  pt-3 \">{renderComponent(\"absent\")}</div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}, isEqual);\r\n\r\nDashboardWorkHours.displayName = \"DashboardWorkHours\";\r\n\r\nexport default DashboardWorkHours;\r\n","import { faEdit, faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Accordion, Button, Card } from \"@themesberg/react-bootstrap\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { ButtonGroup, Modal } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { MyRoutes } from \"../../routes\";\r\nimport {\r\n  calcDurationAndFormat,\r\n  durationFormat,\r\n} from \"../myComponents/util/labels\";\r\nimport { useServices } from \"../myComponents/util/services\";\r\n\r\nconst UserWorkHours = () => {\r\n  const { currentUser } = useAuth();\r\n  const { fetchTodaysWorkHours, deleteWorkHour } = useServices();\r\n  const [workHours, setWorkHours] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const [currentId, setCurrentId] = useState();\r\n  const handleCloseModal = () => setShow(false);\r\n\r\n  const handleShowModal = (id) => {\r\n    setCurrentId(id);\r\n    setShow(true);\r\n  };\r\n  useEffect(() => {\r\n    fetchTodaysWorkHours(currentUser.uid).then(({ data }) =>\r\n      setWorkHours(\r\n        [...data.content].sort((a, b) => (a.begin > b.begin ? -1 : 1))\r\n      )\r\n    );\r\n  }, [fetchTodaysWorkHours, currentUser.uid]);\r\n  const handleDelete = useCallback(() => {\r\n    deleteWorkHour(currentId).then((r) =>\r\n      fetchTodaysWorkHours(currentUser.uid).then(({ data }) => {\r\n        const content = [...data.content].sort((a, b) =>\r\n          a.arrival > b.arrival ? -1 : 1\r\n        );\r\n        setWorkHours(content);\r\n        setShow(false);\r\n      })\r\n    );\r\n  }, [currentId, deleteWorkHour, fetchTodaysWorkHours, currentUser.uid]);\r\n\r\n  return (\r\n    <div\r\n      className={` w-100 h-100 align-items-center justify-content-start d-flex flex-column bg-darker-nonary`}\r\n    >\r\n      <div className=\"p-3 w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <div className=\"text-center text-senary border-bottom border-senary fw-bold py-3\">\r\n          Today's Work Hours\r\n        </div>\r\n        <div className=\"py-4\">\r\n          <div className=\"w-100 d-flex justify-content-center p-1\">\r\n            <Button\r\n              as={Link}\r\n              to={MyRoutes.AddWorkHours.path}\r\n              variant=\"senary\"\r\n              className=\"w-100\"\r\n            >\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </Button>\r\n          </div>\r\n          {workHours?.map((t) => (\r\n            <AccordionCard\r\n              className=\"normal-selector-dropdown\"\r\n              value={\r\n                <>\r\n                  <CCard\r\n                    leftTitle=\"Start\"\r\n                    rightTitle=\"End\"\r\n                    left={t.begin}\r\n                    right={t.end}\r\n                    footer={durationFormat(\r\n                      calcDurationAndFormat([null, t.begin, t.end])\r\n                    )}\r\n                  />\r\n                </>\r\n              }\r\n            >\r\n              <div className=\"w-100 d-flex justify-content-around\">\r\n                <Button\r\n                  className=\"text-nonary\"\r\n                  variant=\"senary\"\r\n                  as={Link}\r\n                  to={MyRoutes.AddWorkHours.path}\r\n                  state={{ workHour: t }}\r\n                >\r\n                  <FontAwesomeIcon icon={faEdit}></FontAwesomeIcon>\r\n                </Button>\r\n\r\n                <Button\r\n                  className=\"text-nonary\"\r\n                  variant=\"senary\"\r\n                  onClick={(e) => handleShowModal(t.id)}\r\n                >\r\n                  <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\r\n                </Button>\r\n              </div>\r\n            </AccordionCard>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleCloseModal}\r\n        contentClassName=\"user-modal\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton closeVariant=\"white\">\r\n          <Modal.Title>Delete Work Hour</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure you want to delete this work hour?</Modal.Body>\r\n        <Modal.Footer>\r\n          <ButtonGroup className=\"w-100\">\r\n            <Button\r\n              className=\"col-6\"\r\n              variant=\"septenary\"\r\n              onClick={handleCloseModal}\r\n            >\r\n              Close\r\n            </Button>\r\n            <Button\r\n              className=\"col-6\"\r\n              variant=\"senary text-darker-nonary fw-bolder\"\r\n              onClick={handleDelete}\r\n            >\r\n              Delete <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CCard = ({ left, right, leftTitle, rightTitle, footer }) => {\r\n  return (\r\n    <Card bg=\"transparent border-0\" className=\"w-100 p-0\">\r\n      <Card.Body\r\n        className=\"d-flex flex-wrap justify-content-between align-items-top py-1 px-0 border-0\"\r\n        style={{ minHeight: \"70px\" }}\r\n      >\r\n        <div className=\"col-4 pe-3 flex-fill d-flex flex-column align-items-center text-senary\">\r\n          <div className=\"fw-bolder\">{left}</div>\r\n        </div>\r\n        <div className=\"col-4 ps-3 flex-fill d-flex flex-column align-items-center text-senary\">\r\n          <div className=\"fw-bolder\">{right}</div>\r\n        </div>\r\n        <div\r\n          className=\"col-12 text-senary fw-bolder text-center\"\r\n          style={{ fontSize: \"18px\" }}\r\n        >\r\n          {footer}\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst AccordionCard = ({ value, children }) => {\r\n  return (\r\n    <div className=\"p-1 h-100 w-100 border-0 user-card\">\r\n      <Accordion>\r\n        <Accordion.Item className=\"bg-nonary \" eventKey=\"0\">\r\n          <Accordion.Header>{value}</Accordion.Header>\r\n          <Accordion.Body className=\"p-0 py-3 border-top px-2 border-darker-senary\">\r\n            {children}\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserWorkHours;\r\n","import { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Nav,\r\n  Row,\r\n  Tab,\r\n} from \"@themesberg/react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { ButtonGroup, Dropdown, Modal } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport { CustomDropdown } from \"../../components/Filters/CustomDropdown\";\r\nimport { TimePickerModal } from \"../../components/TimePicker\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { MyRoutes } from \"../../routes\";\r\nimport {\r\n  getGridLabelDefaultValue,\r\n  getGridLabelIsNotRequired,\r\n  getGridLabels,\r\n  getGridLabelUserType,\r\n  getGridPrimaryLabels,\r\n} from \"../myComponents/util/labels\";\r\nimport { useGeoAddresses, useServices } from \"../myComponents/util/services\";\r\n\r\nconst AddTours = () => {\r\n  const location = useLocation();\r\n  const state = location.state;\r\n  const [availableValues, setAvailableValues] = useState();\r\n  const [tabs, setTabs] = useState();\r\n\r\n  const { currentUser, claims } = useAuth();\r\n  const { postTour, fetchSettings } = useServices();\r\n  const navigate = useNavigate();\r\n  const { register, handleSubmit, setValue, getValues, watch } = useForm();\r\n  const [activeKey, setActiveKey] = useState(\"tab1\");\r\n  const tabNumber = activeKey.match(/\\d+/g)[0];\r\n  const onSubmit = useCallback(\r\n    (data) => {\r\n      postTour([{ ...data, driver: currentUser.uid }])\r\n        .then(() => navigate(MyRoutes.UserTours.path))\r\n        .catch((er) => {\r\n          console.log(er);\r\n        });\r\n    },\r\n    [postTour]\r\n  );\r\n  const notRequired = (label) => getGridLabelIsNotRequired(\"tours\", label);\r\n  const isFilled = (tab) =>\r\n    tabs &&\r\n    tabs[tab].labels.reduce((a, b) => a && (notRequired(b) || watch(b)), true);\r\n  const tab1Filled = isFilled(\"tab1\");\r\n  const tab2Filled = isFilled(\"tab2\");\r\n  const tab3Filled = isFilled(\"tab3\");\r\n  const nextEnabled =\r\n    (tabNumber === \"1\" && tab1Filled) ||\r\n    (tabNumber === \"2\" && tab2Filled) ||\r\n    (tab1Filled && tab2Filled && tab3Filled);\r\n\r\n  useEffect(() => {\r\n    fetchSettings([\"dischargeType\", \"vehicle\", \"workPlant\", \"add-tours\"]).then(\r\n      ({ data }) => {\r\n        const content = data.reduce(\r\n          (a, b) => ({\r\n            ...a,\r\n            [b.id]: [\"dischargeType\", \"vehicle\", \"workPlant\"].includes(b.id)\r\n              ? JSON.parse(b.values)\r\n              : b.values,\r\n          }),\r\n          {}\r\n        );\r\n        setAvailableValues(content);\r\n        setTabs(JSON.parse(content[\"add-tours\"]));\r\n      }\r\n    );\r\n    register(\"waitTime\", { required: false });\r\n    register(\"dischargeBegin\", { required: false });\r\n    register(\"dischargeType\", { required: false });\r\n    register(\"dischargeEnd\", { required: false });\r\n    register(\"other\", { required: false });\r\n\r\n    if (state?.tour) {\r\n      setValue(\"id\", state.tour.id);\r\n      setValue(\"driver\", state.tour.driver);\r\n      setValue(\"date\", state.tour.date);\r\n      setValue(\"vehicle\", state.tour.vehicle + \"\");\r\n      setValue(\"workPlant\", state.tour.workPlant);\r\n      setValue(\"deliveryNr\", state.tour.deliveryNr + \"\");\r\n      setValue(\"buildingSite\", state.tour.buildingSite);\r\n      setValue(\"cbm\", state.tour.cbm + \"\");\r\n      setValue(\"arrival\", state.tour.arrival);\r\n      setValue(\"kmArrival\", state.tour.kmArrival + \"\");\r\n      setValue(\"dischargeBegin\", state.tour.dischargeBegin);\r\n\r\n      setValue(\"dischargeType\", state.tour.dischargeType);\r\n      setValue(\"dischargeEnd\", state.tour.dischargeEnd);\r\n      setValue(\"waitTime\", state.tour.waitTime);\r\n      setValue(\"departure\", state.tour.departure);\r\n      setValue(\"kmDeparture\", state.tour.kmDeparture + \"\");\r\n      setValue(\"other\", state.tour.other);\r\n    } else {\r\n      // getUpdatedUser();\r\n      currentUser.reload();\r\n      claims().then(({ claims: { workPlant, vehicle } }) => {\r\n        workPlant && setValue(\"workPlant\", workPlant);\r\n        vehicle && setValue(\"vehicle\", vehicle);\r\n      });\r\n      setValue(\"date\", moment().format(\"YYYY.MM.DD\"));\r\n      setValue(\"driver\", currentUser.displayName || currentUser.email);\r\n    }\r\n  }, [currentUser, claims, state]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={` w-100 h-100 align-items-center justify-content-center d-flex flex-column bg-darker-nonary`}\r\n      >\r\n        <form>\r\n          <div className=\"p-3 w-100\" style={{ maxWidth: \"400px\" }}>\r\n            <Tab.Container activeKey={activeKey}>\r\n              <Row>\r\n                <Col lg={12} className=\"\">\r\n                  <Nav className=\"nav-tabs d-flex flex-nowrap justify-content-around w-100 border-0\">\r\n                    {tabs &&\r\n                      Object.keys(tabs).map((t) => (\r\n                        <Nav.Item className=\"col-4\">\r\n                          <Nav.Link\r\n                            onClick={() => setActiveKey(t)}\r\n                            eventKey={t}\r\n                            className={\r\n                              \"border-bottom  border-senary mb-sm-3 mb-md-0 text-center fw-bolder px-1 \" +\r\n                              (activeKey === t\r\n                                ? \"text-nonary bg-senary\"\r\n                                : \"text-senary bg-darker-nonary\")\r\n                            }\r\n                          >\r\n                            {tabs[t].title}\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                      ))}\r\n                  </Nav>\r\n                </Col>\r\n                <Col lg={12}>\r\n                  <Tab.Content>\r\n                    {tabs &&\r\n                      Object.keys(tabs).map((t) => (\r\n                        <Tab.Pane eventKey={t} className=\"py-4\">\r\n                          {tabs[t].labels.map((l) => (\r\n                            <InputComponent\r\n                              type={getGridLabelUserType(\"tours\", l)}\r\n                              title={getGridLabels(\"tours\")[l]?.text}\r\n                              value={watch(l)}\r\n                              availableValues={availableValues[l]}\r\n                              onChange={(e) => setValue(l, e)}\r\n                              contentWidth={\"100px\"}\r\n                              defaultValue={getGridLabelDefaultValue(\r\n                                \"tours\",\r\n                                l\r\n                              )}\r\n                            />\r\n                          ))}\r\n                        </Tab.Pane>\r\n                      ))}\r\n\r\n                    <Tab.Pane eventKey=\"tab4\" className=\"py-4\">\r\n                      {tab1Filled && tab2Filled && tab3Filled && (\r\n                        <SubmitList\r\n                          values={{\r\n                            ...getValues(),\r\n                            cbm: parseFloat(getValues().cbm),\r\n                            kmDeparture: parseInt(getValues().kmDeparture),\r\n                            kmArrival: parseInt(getValues().kmArrival),\r\n                            deliveryNr: parseInt(getValues().deliveryNr),\r\n                            waitTime: parseInt(getValues().waitTime || 0),\r\n                          }}\r\n                        ></SubmitList>\r\n                      )}\r\n                    </Tab.Pane>\r\n                  </Tab.Content>\r\n                </Col>\r\n              </Row>\r\n            </Tab.Container>\r\n            <div className=\"d-flex flex-nowrap w-100 justify-content-center bottom-0\">\r\n              <div className=\"px-2\">\r\n                <Button\r\n                  className=\"fw-bolder\"\r\n                  variant=\"nonary\"\r\n                  style={{\r\n                    width: \"80px\",\r\n                    fontWeight: \"800\",\r\n                  }}\r\n                  onClick={() => navigate(MyRoutes.UserTours.path)}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n              <div className=\"px-2\">\r\n                {activeKey === \"tab4\" ? (\r\n                  <Button\r\n                    className=\"fw-bolder\"\r\n                    variant={nextEnabled ? \"senary\" : \"nonary\"}\r\n                    disabled={!nextEnabled}\r\n                    style={{\r\n                      width: \"80px\",\r\n                      fontWeight: \"800\",\r\n                    }}\r\n                    onClick={handleSubmit(onSubmit)}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    className=\"fw-bolder\"\r\n                    variant={\"senary\"}\r\n                    disabled={!nextEnabled}\r\n                    style={{\r\n                      width: \"80px\",\r\n                      fontWeight: \"800\",\r\n                    }}\r\n                    onClick={() =>\r\n                      setActiveKey(\"tab\" + (parseInt(tabNumber) + 1))\r\n                    }\r\n                  >\r\n                    Next\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst InputComponent = ({\r\n  type,\r\n  title,\r\n  value,\r\n  onChange,\r\n  availableValues,\r\n  contentWidth,\r\n  defaultValue,\r\n}) => {\r\n  switch (type) {\r\n    case \"time\":\r\n      return <TimePicker title={title} value={value} onChange={onChange} />;\r\n    case \"modal\":\r\n      return (\r\n        <NormaModal\r\n          availableValues={availableValues}\r\n          title={title}\r\n          value={value}\r\n          onClick={onChange}\r\n        />\r\n      );\r\n    case \"input-number\":\r\n      return (\r\n        <InputCard\r\n          contentWidth={contentWidth}\r\n          title={title}\r\n          value={value}\r\n          onChange={onChange}\r\n          defaultValue={defaultValue}\r\n          type=\"number\"\r\n          min={0}\r\n        />\r\n      );\r\n    case \"textarea\":\r\n      return (\r\n        <InputCard\r\n          contentWidth={contentWidth}\r\n          textarea={true}\r\n          title={title}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      );\r\n    case \"disabled\":\r\n      return <Disabled value={value} title={title} />;\r\n    case \"navi\":\r\n      return <Navi value={value} onChange={onChange} title={title} />;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nconst NormaModal = ({ value, availableValues, onClick, title }) => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const handleClick = (value) => {\r\n    onClick(value);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-1 w-100\">\r\n        <Button\r\n          variant={value ? \"senary\" : \"nonary\"}\r\n          onClick={handleShow}\r\n          className={\"w-100 p-0\"}\r\n        >\r\n          <BCard title={title}>\r\n            {value || (\r\n              <div className=\"pe-2\">\r\n                <FontAwesomeIcon icon={faPlus} size=\"xs\" />\r\n              </div>\r\n            )}\r\n          </BCard>\r\n        </Button>\r\n      </div>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        centered\r\n        className={\"dark-modal px-3 d-flex justify-content-center\"}\r\n        contentWidth={{ width: \"fit-content\" }}\r\n        scrollable\r\n      >\r\n        <Modal.Header className=\"p-0 d-flex justify-content-end\">\r\n          <div className=\"p-2\">\r\n            <Button\r\n              variant=\"transparent\"\r\n              className=\"p-0 text-senary d-flex justify-content-center align-items-center\"\r\n              style={{ height: \"30px\", width: \"30px\" }}\r\n              onClick={handleClose}\r\n            >\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </Button>\r\n          </div>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"pt-1\">\r\n          {availableValues?.map((v) => (\r\n            <div\r\n              onClick={() => handleClick(v)}\r\n              key={v}\r\n              style={{ minWidth: \"150px\" }}\r\n              className={\r\n                \"py-2 d-flex flex-wrap justify-content-between border-bottom border-senary text-senary fw-bolder\"\r\n              }\r\n            >\r\n              <div className=\"text-start text-break text-wrap ps-2 pe-2\">\r\n                {v}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"py-1\"></Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nconst Navi = ({ title, value, onChange }) => {\r\n  const { places, onChange: handlePlaceChange } = useGeoAddresses();\r\n  const handlePlaceInputChange = useCallback(\r\n    (e) => {\r\n      handlePlaceChange(e.target.value);\r\n      // setValue(\"buildingSite\", e.target.value);\r\n      onChange(e.target.value);\r\n    },\r\n    [onChange, handlePlaceChange]\r\n  );\r\n  return (\r\n    <DropdownCard\r\n      title={title}\r\n      className=\"custom-selector-dropdown w-100\"\r\n      titleWidth=\"75px\"\r\n      input={(props) => (\r\n        <>\r\n          <div style={{ maxWidth: \"160px\" }}>\r\n            <TextareaAutosize\r\n              value={value || \"\"}\r\n              minRows={1}\r\n              autoFocus\r\n              className=\"form-control p-0 border-0 text-center text-nonary text-break text-wrap user-card-input w-100 fw-bolder\"\r\n              onChange={handlePlaceInputChange}\r\n              {...props}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n      value={value}\r\n    >\r\n      <div className=\"\">\r\n        {places?.map((p) => (\r\n          <Dropdown.Item\r\n            className={\r\n              \"text-break text-wrap w-100 dropdown-item\" +\r\n              (p === value ? \" active\" : \" non-active\")\r\n            }\r\n            key={p}\r\n            onClick={(e) => {\r\n              handlePlaceChange(p);\r\n              onChange(p);\r\n              e.target.blur();\r\n            }}\r\n          >\r\n            {p}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </div>\r\n    </DropdownCard>\r\n  );\r\n};\r\nconst Disabled = ({ title, value }) => {\r\n  return (\r\n    <div className=\"p-1\">\r\n      <Button variant={value ? \"senary\" : \"nonary\"} className={\"w-100 p-0\"}>\r\n        <BCard title={title}>\r\n          {value || (\r\n            <div className=\"pe-2\">\r\n              <FontAwesomeIcon icon={faPlus} size=\"xs\" />\r\n            </div>\r\n          )}\r\n        </BCard>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\nconst TimePicker = ({ title, value, onChange }) => {\r\n  return (\r\n    <div className=\"p-1\">\r\n      <TimePickerModal\r\n        buttonVariant={value ? \"senary\" : \"nonary\"}\r\n        timeVariant=\"nonary\"\r\n        timeActiveVariant=\"senary\"\r\n        buttonClassName=\"w-100 p-0\"\r\n        buttonText={\r\n          <BCard title={title}>\r\n            {value || (\r\n              <div className=\"pe-2\">\r\n                <FontAwesomeIcon icon={faPlus} size=\"xs\" />\r\n              </div>\r\n            )}\r\n          </BCard>\r\n        }\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst DropdownCard = ({\r\n  title,\r\n  value,\r\n  availableValues = [],\r\n  onChange,\r\n  children,\r\n  className,\r\n  titleWidth,\r\n  contentWidth,\r\n  input,\r\n}) => {\r\n  const ref = useRef();\r\n  const variant = value ? \"senary\" : \"nonary\";\r\n  const [enabled, setEnabled] = useState(false);\r\n  const handleToggle = (show) => {\r\n    setEnabled(show);\r\n    if (!show) {\r\n      console.log(\"toggle\", show);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"p-1 h-100 w-100 user-card\">\r\n      {children ? (\r\n        <CustomDropdown\r\n          as={ButtonGroup}\r\n          className={`w-100 ${className}`}\r\n          toggleAs=\"custom\"\r\n          toggleClassName=\"p-0\"\r\n          variant={variant}\r\n          portal={false}\r\n          align=\"end\"\r\n          drop=\"down\"\r\n          onToggle={handleToggle}\r\n          value={\r\n            <BCard\r\n              title={title}\r\n              titleWidth={titleWidth}\r\n              contentWidth={contentWidth}\r\n            >\r\n              {(enabled && (input ? input({ ref }) : value)) || value || (\r\n                <div className=\"pe-2\">\r\n                  <FontAwesomeIcon icon={faPlus} size=\"xs\" />\r\n                </div>\r\n              )}\r\n            </BCard>\r\n          }\r\n          ref={ref}\r\n        >\r\n          {children}\r\n        </CustomDropdown>\r\n      ) : (\r\n        <Dropdown as={ButtonGroup} className={`w-100 ${className}`}>\r\n          <Dropdown.Toggle\r\n            variant={variant}\r\n            className=\"shadow-none p-0 text-break text-wrap\"\r\n          >\r\n            <BCard\r\n              title={title}\r\n              titleWidth={titleWidth}\r\n              contentWidth={contentWidth}\r\n            >\r\n              {(enabled && (input ? input({ ref }) : value)) || value || (\r\n                <div className=\"pe-2\">\r\n                  <FontAwesomeIcon icon={faPlus} size=\"xs\" />\r\n                </div>\r\n              )}\r\n            </BCard>\r\n          </Dropdown.Toggle>\r\n\r\n          {availableValues.length !== 0 && (\r\n            <Dropdown.Menu style={{ width: \"fit-content\" }}>\r\n              {availableValues.map((v) => (\r\n                <Dropdown.Item\r\n                  className={\r\n                    \"text-break text-wrap\" + (value === v ? \" active\" : \"\")\r\n                  }\r\n                  key={v}\r\n                  onClick={() => {\r\n                    onChange && onChange(v);\r\n                  }}\r\n                >\r\n                  {v}\r\n                </Dropdown.Item>\r\n              ))}\r\n            </Dropdown.Menu>\r\n          )}\r\n        </Dropdown>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst InputCard = ({\r\n  title,\r\n  value,\r\n  textarea = false,\r\n  onChange,\r\n  defaultValue = \"\",\r\n  type,\r\n  titleWidth,\r\n  contentWidth,\r\n}) => {\r\n  const ref = useRef();\r\n  const variant = value ? \"senary\" : \"nonary\";\r\n  const [enabled, setEnabled] = useState(false);\r\n  const handleChange = (e) => onChange(e.target.value);\r\n  useEffect(() => {\r\n    enabled && ref.current.focus();\r\n  }, [enabled, ref]);\r\n\r\n  return (\r\n    <div className=\"p-1 h-100 w-100 user-card\">\r\n      <Button\r\n        className=\"w-100 p-0\"\r\n        variant={variant}\r\n        onClick={() => {\r\n          ref.current?.focus();\r\n          setEnabled(true);\r\n        }}\r\n      >\r\n        <BCard\r\n          title={title}\r\n          titleWidth={titleWidth}\r\n          contentWidth={contentWidth}\r\n        >\r\n          {!enabled ? (\r\n            value ? (\r\n              <div className=\"text-center text-break text-wrap\">{value}</div>\r\n            ) : (\r\n              <div className=\"pe-2\">\r\n                <FontAwesomeIcon icon={faPlus} size=\"xs\" />\r\n              </div>\r\n            )\r\n          ) : textarea ? (\r\n            <div>\r\n              <TextareaAutosize\r\n                minRows={1}\r\n                ref={ref}\r\n                className=\"form-control p-0 text-center text-nonary text-break text-wrap user-card-input w-100 fw-bolder\"\r\n                value={value || defaultValue}\r\n                onChange={handleChange}\r\n                onBlur={() => setEnabled(false)}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <Form.Control\r\n              type={type}\r\n              ref={ref}\r\n              className=\"p-0 px-1 text-center text-nonary user-card-input fw-bolder text-truncate\"\r\n              value={value || defaultValue}\r\n              onChange={handleChange}\r\n              onBlur={() => setEnabled(false)}\r\n            />\r\n          )}\r\n        </BCard>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\nconst SubmitList = ({ values }) => {\r\n  return (\r\n    <>\r\n      <Card bg=\"nonary\">\r\n        <Card.Body>\r\n          {getGridPrimaryLabels(\"tours\").map((key) => (\r\n            <div\r\n              key={key}\r\n              className=\"d-flex flex-wrap justify-content-between border-bottom border-senary text-senary fw-bolder\"\r\n            >\r\n              <div\r\n                className=\"text-start text-wrap pe-2\"\r\n                style={{ minWidth: \"70px\" }}\r\n              >\r\n                {getGridLabels(\"tours\")[key]?.text}\r\n              </div>\r\n              <div className=\"flex-fill text-end text-break text-wrap ps-2 fw-bold\">\r\n                {values[key] &&\r\n                  values[key] +\r\n                    ((getGridLabels(\"tours\")[key]?.measurement &&\r\n                      \" \" + getGridLabels(\"tours\")[key].measurement) ||\r\n                      \"\")}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\nconst BCard = ({ title, children, titleWidth = \"50px\", contentWidth }) => {\r\n  return (\r\n    <Card bg=\"transparent border-0\">\r\n      <Card.Body className=\"d-flex flex-nowrap justify-content-between align-items-center p-3 border-0 fw-bolder\">\r\n        <div\r\n          className={\"text-start text-break text-wrap\"}\r\n          style={{ fontWeight: \"800\", minWidth: titleWidth }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          className=\"d-flex justify-content-end\"\r\n          style={{ width: contentWidth }}\r\n        >\r\n          <div className={\"text-end text-break text-wrap \"}>{children}</div>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddTours;\r\n","import { isEqual } from \"lodash\";\r\nimport React, { memo, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useLoadData } from \"../../api/apiMappers\";\r\nimport { ComponentPreLoader } from \"../../components/ComponentPreLoader\";\r\nimport { GridTableComponent } from \"../../components/Table/GridComponent\";\r\nimport { gridTableSlice } from \"../reducers/redux\";\r\n\r\nconst useLoader = (stateAPIStatus) => {\r\n  const navigate = useNavigate();\r\n  if (stateAPIStatus === \"success\") {\r\n    return <DashBoardComponent />;\r\n  } else if (stateAPIStatus === \"error\") {\r\n    return navigate(\"/500\");\r\n  } else {\r\n    return (\r\n      <div className=\"d-flex h-100 align-items-center\">\r\n        <ComponentPreLoader show={true} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport const DashboardTours = () => {\r\n  const { actions } = gridTableSlice;\r\n  const stateAPIStatus = useLoadData(\"toursTable\", actions);\r\n  return useLoader(stateAPIStatus);\r\n};\r\n\r\nconst DashBoardComponent = memo(() => {\r\n  const { actions, selectors } = gridTableSlice;\r\n  const renderComponent = useCallback(\r\n    (entityId) => (\r\n      <GridTableComponent\r\n        {...{\r\n          stateAPIStatus: \"success\",\r\n          actions,\r\n          selectors,\r\n          entityId,\r\n        }}\r\n      />\r\n    ),\r\n    [selectors, actions]\r\n  );\r\n\r\n  return <div className=\"col-12\">{renderComponent(\"tours\")}</div>;\r\n}, isEqual);\r\n\r\nDashboardTours.displayName = \"Tours\";\r\nexport default DashboardTours;\r\n","import {\r\n  faEdit,\r\n  faPlus,\r\n  faTimes,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, Card, Modal } from \"@themesberg/react-bootstrap\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MyRoutes } from \"../../routes\";\r\nimport {\r\n  getGridLabels,\r\n  getGridPrimaryLabels,\r\n} from \"../myComponents/util/labels\";\r\nimport { useServices } from \"../myComponents/util/services\";\r\n\r\nconst UserTours = () => {\r\n  const { currentUser, fetchTodaysTours, deleteTour } = useServices();\r\n  const [tours, setTours] = useState();\r\n  useEffect(() => {\r\n    fetchTodaysTours(currentUser.uid).then(({ data }) => {\r\n      const content = [...data.content].sort((a, b) =>\r\n        a.arrival > b.arrival ? -1 : 1\r\n      );\r\n      setTours(content);\r\n    });\r\n  }, [fetchTodaysTours, currentUser.uid]);\r\n  const handleDelete = useCallback(\r\n    (id) => {\r\n      deleteTour(id).then((r) => {\r\n        fetchTodaysTours(currentUser.uid).then(({ data }) => {\r\n          const content = [...data.content].sort((a, b) =>\r\n            a.arrival > b.arrival ? -1 : 1\r\n          );\r\n          setTours(content);\r\n        });\r\n      });\r\n    },\r\n    [deleteTour, fetchTodaysTours, currentUser.uid]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={` w-100 h-100 align-items-center justify-content-start d-flex flex-column bg-darker-nonary`}\r\n    >\r\n      <div className=\"p-3 w-100\" style={{ maxWidth: \"400px\" }}>\r\n        <div className=\"text-center text-senary border-bottom border-senary fw-bold py-3\">\r\n          Today's Tours\r\n        </div>\r\n        <div className=\"py-4\">\r\n          <div className=\"w-100 d-flex justify-content-center p-1\">\r\n            <Button\r\n              as={Link}\r\n              to={MyRoutes.AddTour.path}\r\n              variant=\"senary\"\r\n              className=\"text-nonary w-100\"\r\n            >\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </Button>\r\n          </div>\r\n          {tours?.map((t) => {\r\n            const tour = {\r\n              ...t,\r\n              driver: currentUser.displayName || currentUser.email,\r\n            };\r\n            return (\r\n              <NormaModal values={tour} onDelete={handleDelete}>\r\n                <CCard left={t.buildingSite} right={t.arrival} />\r\n              </NormaModal>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NormaModal = ({ values, children, onDelete }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleDelete = () => {\r\n    handleClose();\r\n    onDelete(values.id);\r\n  };\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-1 w-100\">\r\n        <Button variant=\"nonary\" onClick={handleShow} className={\"w-100\"}>\r\n          {children}\r\n        </Button>\r\n      </div>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        centered\r\n        className={\"dark-modal\"}\r\n        scrollable\r\n      >\r\n        <Modal.Header className=\"p-0 d-flex justify-content-end\">\r\n          <div className=\"p-2\">\r\n            <Button\r\n              variant=\"transparent\"\r\n              className=\"p-0 text-senary d-flex justify-content-center align-items-center\"\r\n              style={{ height: \"30px\", width: \"30px\" }}\r\n              onClick={handleClose}\r\n            >\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </Button>\r\n          </div>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"pt-1\">\r\n          {getGridPrimaryLabels(\"tours\").map((key) => (\r\n            <div\r\n              key={key}\r\n              className=\"d-flex flex-wrap justify-content-between border-bottom border-senary text-senary fw-bolder\"\r\n            >\r\n              <div\r\n                className=\"text-start text-break text-wrap p-1\"\r\n                style={{ minWidth: \"60px\" }}\r\n              >\r\n                {getGridLabels(\"tours\")[key]?.text}\r\n              </div>\r\n              <div className=\"flex-fill text-end text-break text-wrap p-1 fw-bold\">\r\n                {(values[key] || \"\") +\r\n                  (getGridLabels(\"tours\")[key]?.measurement || \"\")}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"\">\r\n          <div className=\"w-100 btn-group-wrapper d-flex justify-content-around\">\r\n            <Button\r\n              variant=\"nonary\"\r\n              onClick={handleDelete}\r\n              style={{ height: \"44px\", width: \"44px\" }}\r\n            >\r\n              <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\r\n            </Button>\r\n            <Button\r\n              variant=\"senary\"\r\n              as={Link}\r\n              to={MyRoutes.AddTour.path}\r\n              state={{ tour: values }}\r\n              style={{ height: \"44px\", width: \"44px\" }}\r\n            >\r\n              <FontAwesomeIcon icon={faEdit}></FontAwesomeIcon>\r\n            </Button>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst CCard = ({ left, right }) => {\r\n  return (\r\n    <Card bg=\"transparent border-0\" className=\"w-100 px-3\">\r\n      <Card.Body\r\n        className=\"d-flex flex-nowrap justify-content-between align-items-top py-1 px-0 border-0 fw-bolder\"\r\n        style={{ minHeight: \"70px\" }}\r\n      >\r\n        <div className=\"d-flex align-items-center text-start text-break text-wrap\">\r\n          {left}\r\n        </div>\r\n        <div className=\"ps-2 pt-4 d-flex align-items-end\">{right}</div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserTours;\r\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, Card, Row } from \"@themesberg/react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { TimePickerModal } from \"../../components/TimePicker\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { MyRoutes } from \"../../routes\";\r\nimport { useServices } from \"../myComponents/util/services\";\r\n\r\nconst AddWorkHours = () => {\r\n  const location = useLocation();\r\n  const state = location.state;\r\n  const { currentUser } = useAuth();\r\n  const { postWorkHour } = useServices();\r\n  const navigate = useNavigate();\r\n  const { register, handleSubmit, setValue, watch } = useForm();\r\n\r\n  const saveEnabled =\r\n    watch(\"begin\") &&\r\n    watch(\"end\") &&\r\n    watch(\"pause\") &&\r\n    watch(\"date\") &&\r\n    watch(\"driver\");\r\n\r\n  const onSubmit = useCallback(\r\n    (data) => {\r\n      postWorkHour([{ ...data, driver: currentUser.uid }])\r\n        .then(() => navigate(MyRoutes.UserWorkHours.path))\r\n        .catch((er) => {\r\n          console.log(er);\r\n        });\r\n    },\r\n    [postWorkHour, currentUser?.uid]\r\n  );\r\n\r\n  useEffect(() => {\r\n    register(\"begin\", { required: true });\r\n    register(\"end\", { required: true });\r\n    register(\"pause\", { required: true });\r\n    register(\"date\", { required: true });\r\n    register(\"driver\", { required: true });\r\n\r\n    if (state?.workHour) {\r\n      setValue(\"id\", state.workHour.id);\r\n      setValue(\"begin\", state.workHour.begin);\r\n      setValue(\"end\", state.workHour.end);\r\n      setValue(\"pause\", state.workHour.pause);\r\n      setValue(\"date\", state.workHour.date);\r\n      setValue(\"driver\", state.workHour.driver + \"\");\r\n    } else {\r\n      setValue(\"date\", moment().format(\"YYYY.MM.DD\"));\r\n      setValue(\"driver\", currentUser.displayName || currentUser.email);\r\n    }\r\n  }, [currentUser, state]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={` w-100 h-100 align-items-center justify-content-center d-flex flex-column bg-darker-nonary`}\r\n      >\r\n        <form className=\"w-100 d-flex justify-content-center\">\r\n          <div className=\"p-3 w-100\" style={{ maxWidth: \"400px\" }}>\r\n            <Row>\r\n              <div className=\"w-100 py-4\">\r\n                <TimePicker\r\n                  value={watch(\"begin\")}\r\n                  title={\"Begin\"}\r\n                  onChange={(e) => setValue(\"begin\", e)}\r\n                />\r\n                <TimePicker\r\n                  value={watch(\"end\")}\r\n                  title={\"End\"}\r\n                  onChange={(e) => setValue(\"end\", e)}\r\n                />\r\n                <TimePicker\r\n                  value={watch(\"pause\")}\r\n                  title={\"Pause\"}\r\n                  onChange={(e) => setValue(\"pause\", e)}\r\n                />\r\n              </div>\r\n            </Row>\r\n            <div className=\"d-flex flex-wrap w-100 justify-content-center bottom-0\">\r\n              <div className=\"px-2\">\r\n                <Button\r\n                  className=\"fw-bolder\"\r\n                  variant=\"nonary\"\r\n                  style={{\r\n                    width: \"80px\",\r\n                    fontWeight: \"800\",\r\n                  }}\r\n                  onClick={() => navigate(MyRoutes.UserWorkHours.path)}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </div>\r\n              <div className=\"px-2\">\r\n                <Button\r\n                  className=\"text-nonary fw-bolder\"\r\n                  variant={saveEnabled ? \"senary\" : \"senary\"}\r\n                  disabled={!saveEnabled}\r\n                  style={{\r\n                    width: \"80px\",\r\n                    fontWeight: \"800\",\r\n                  }}\r\n                  onClick={handleSubmit(onSubmit)}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst TimePicker = ({ title, value, onChange }) => {\r\n  return (\r\n    <div className=\"p-1\">\r\n      <TimePickerModal\r\n        buttonVariant={value ? \"senary\" : \"nonary\"}\r\n        timeVariant=\"nonary\"\r\n        timeActiveVariant=\"senary\"\r\n        buttonClassName=\"w-100 p-0\"\r\n        buttonText={\r\n          <BCard title={title}>\r\n            {value || (\r\n              <div className=\"pe-2\">\r\n                <FontAwesomeIcon icon={faPlus} size=\"xs\" />\r\n              </div>\r\n            )}\r\n          </BCard>\r\n        }\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nconst BCard = ({ title, children, titleWidth = \"50px\", contentWidth }) => {\r\n  return (\r\n    <Card bg=\"transparent border-0\">\r\n      <Card.Body className=\"d-flex flex-nowrap justify-content-between align-items-center p-3 border-0 fw-bolder\">\r\n        <div\r\n          className=\"text-start text-break text-wrap\"\r\n          style={{ fontWeight: \"800\", minWidth: titleWidth }}\r\n        >\r\n          {title}\r\n        </div>\r\n        <div\r\n          className=\"d-flex justify-content-end\"\r\n          style={{ width: contentWidth }}\r\n        >\r\n          <div className=\"text-end text-break text-wrap\">{children}</div>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddWorkHours;\r\n","import React, { useEffect, useState } from \"react\";\n\nimport { Navigate } from \"react-router\";\nimport Preloader from \"../../components/Preloader\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { MyRoutes } from \"../../routes\";\n\nconst Home = () => {\n  const { currentUser, currentRole, findConnection } = useAuth();\n  const [role, setRole] = useState(\"pending\");\n  useEffect(() => {\n    findConnection()\n      .then(() =>\n        currentRole.then((r) => {\n          r.includes(\"ROLE_SUPER\")\n            ? setRole(\"ROLE_SUPER\")\n            : r.includes(\"ROLE_ADMIN\")\n            ? setRole(\"ROLE_ADMIN\")\n            : r.includes(\"ROLE_USER\")\n            ? setRole(\"ROLE_USER\")\n            : setRole(\"error\");\n        })\n      )\n      .catch((er) => {\n        currentUser ? setRole(\"error\") : setRole(\"noUser-error\");\n      });\n  }, [currentRole, role, findConnection]);\n  return (\n    <>\n      {role === \"pending\" ? (\n        <Preloader show={true} />\n      ) : role === \"ROLE_ADMIN\" || role === \"ROLE_SUPER\" ? (\n        <Navigate to={MyRoutes.DashboardOverview.path} />\n      ) : role === \"ROLE_USER\" ? (\n        <Navigate to={MyRoutes.UserHome.path} />\n      ) : role === \"noUser-error\" ? (\n        <Navigate to={MyRoutes.Signin.path} />\n      ) : (\n        <Navigate to={MyRoutes.ServerError.path} />\n      )}\n    </>\n  );\n};\nexport default Home;\n","import { faFacebookMessenger } from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  faClock,\r\n  faCog,\r\n  faPlane,\r\n  faTruck,\r\n  faUserClock,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Nav } from \"@themesberg/react-bootstrap\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { MyRoutes } from \"../../routes\";\r\nimport { useConnectChat, useServices } from \"../myComponents/util/services\";\r\n\r\nconst UserHome = ({ onClick, maxWidth = \"500px\" }) => {\r\n  const { fetchUsers } = useServices();\r\n  const [contacts, setContacts] = useState();\r\n  const [unreadMessages, setUnreadMessages] = useState(0);\r\n  const { findUnreadCount, currentUser } = useAuth();\r\n  const handleUnreadMessagesChange = useCallback((value) => {\r\n    value >= 99 ? setUnreadMessages(\"99+\") : setUnreadMessages(value);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchUsers().then(({ data }) => {\r\n      setContacts(data);\r\n      const contacts = data.map((c) => c.uid);\r\n      findUnreadCount(currentUser.uid, contacts).then(({ data }) => {\r\n        handleUnreadMessagesChange(data);\r\n      });\r\n    });\r\n  }, [\r\n    fetchUsers,\r\n    findUnreadCount,\r\n    currentUser.uid,\r\n    handleUnreadMessagesChange,\r\n  ]);\r\n\r\n  const onMessageReceived = useCallback(() => {\r\n    findUnreadCount(\r\n      currentUser.uid,\r\n      contacts.map((c) => c.uid)\r\n    ).then(({ data, status }) => {\r\n      status === 200 && handleUnreadMessagesChange(data);\r\n    });\r\n  }, [currentUser.uid, findUnreadCount, findUnreadCount, fetchUsers, contacts]);\r\n\r\n  const chat = useConnectChat({ uid: currentUser.uid, onMessageReceived });\r\n  const NavItem = (props) => {\r\n    const { title, link, target, icon, image, className = \"\" } = props;\r\n    // const navItemClassName = link === pathname ? \"active\" : \"\";\r\n    const linkProps = { as: Link, to: link };\r\n    return (\r\n      <Nav.Item\r\n        className=\"col-6 col-md-4 col-sm-4 p-1\"\r\n        style={{ aspectRatio: \"1\" }}\r\n      >\r\n        <div className=\"p-2 w-100 h-100\">\r\n          <Nav.Link\r\n            {...linkProps}\r\n            onClick={onClick}\r\n            target={target}\r\n            className={\r\n              \"w-100 h-100 d-flex flex-column justify-content-center align-items-center p-0 rounded \" +\r\n              className\r\n            }\r\n          >\r\n            {icon && (\r\n              <span className=\"sidebar-icon w-50\" style={{ aspectRatio: \"1\" }}>\r\n                <FontAwesomeIcon icon={icon} className=\"w-100 h-100\" />\r\n              </span>\r\n            )}\r\n            {image && (\r\n              <span\r\n                className=\"sidebar-icon w-50 text-primary\"\r\n                style={{ aspectRatio: \"1\" }}\r\n              >\r\n                {image}\r\n              </span>\r\n            )}\r\n            <span className=\"py-1 fw-bolder  \">{title}</span>\r\n          </Nav.Link>\r\n        </div>\r\n      </Nav.Item>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={` w-100 h-100 align-items-center justify-content-center d-flex flex-column bg-darker-nonary`}\r\n      >\r\n        <div\r\n          className={\"w-100 overflow-none p-3\"}\r\n          style={{ padding: \"0\", maxWidth: maxWidth }}\r\n        >\r\n          <div className=\"d-flex flex-wrap justify-content-center\">\r\n            <NavItem\r\n              className=\"bg-senary text-nonary\"\r\n              title=\"Work Hours\"\r\n              link={MyRoutes.UserWorkHours.path}\r\n              icon={faClock}\r\n            />\r\n\r\n            <NavItem\r\n              className=\"bg-nonary text-senary\"\r\n              title=\"Tours\"\r\n              link={MyRoutes.UserTours.path}\r\n              icon={faTruck}\r\n            />\r\n            <NavItem\r\n              className=\"bg-nonary text-senary\"\r\n              title={\r\n                <div className=\"d-flex flex-row flex-wrap\">\r\n                  <span className=\"d-flex align-items-center\">Messages</span>\r\n                </div>\r\n              }\r\n              link={MyRoutes.UserMessenger.path}\r\n              image={\r\n                <div className=\"d-flex justify-content-center flex-column\">\r\n                  {unreadMessages !== 0 && (\r\n                    <div\r\n                      className=\"d-flex w-100\"\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        justifyContent: \"right\",\r\n                        height: \"100%\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        className=\"bg-nonary text-senary p-1 rounded-2 d-flex text-center border border-3 border-senary\"\r\n                        style={{ height: \"fit-content\", fontSize: \"9px\" }}\r\n                      >\r\n                        {unreadMessages}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  <FontAwesomeIcon\r\n                    icon={faFacebookMessenger}\r\n                    className=\"w-100 h-100 text-senary\"\r\n                  />\r\n                </div>\r\n              }\r\n            />\r\n            <NavItem\r\n              className=\"bg-senary text-nonary\"\r\n              title=\"Overview\"\r\n              link={MyRoutes.UserOverview.path}\r\n              icon={faUserClock}\r\n            />\r\n\r\n            <NavItem\r\n              className=\"bg-senary text-nonary\"\r\n              title=\"Vacations\"\r\n              link={MyRoutes.UserVacations.path}\r\n              icon={faPlane}\r\n            />\r\n            <NavItem\r\n              className=\"bg-nonary text-senary\"\r\n              title=\"Settings\"\r\n              link={MyRoutes.UserSettings.path}\r\n              icon={faCog}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default UserHome;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Navigate, Outlet, Route, Routes } from \"react-router-dom\";\nimport Preloader from \"../../components/Preloader\";\nimport Sidebar from \"../../components/Sidebar\";\nimport {\n  default as Sidebar2,\n  default as Sidebar3,\n} from \"../../components/Sidebar2\";\nimport { AuthProvider, useAuth } from \"../../contexts/AuthContext\";\nimport { MyRoutes } from \"../../routes\";\nimport AddUser from \"../authentication/AddUser\";\nimport NotFound from \"../authentication/NotFound\";\nimport ServerError from \"../authentication/ServerError\";\nimport Signin from \"../authentication/Signin\";\nimport Chat from \"../messages/Chat\";\nimport UserChat from \"../messages/UserChat\";\nimport UserMessenger from \"../messages/UserMessenger\";\nimport DashboardOverview from \"../overview/DashboardOverview\";\nimport UserOverview from \"../overview/UserOverview\";\nimport Settings from \"../settings/Settings\";\nimport Users from \"../settings/Users\";\nimport UserSettings from \"../settings/UserSettings\";\nimport UserVacations from \"../vacations/UserVacations\";\nimport DashboardWorkHours from \"../workHours/DashboardWorkHours\";\nimport UserWorkHours from \"../workHours/UserWorkHours\";\nimport AddTours from \"./../tours/AddTours\";\nimport DashboardTours from \"./../tours/DashboardTours\";\nimport UserTours from \"./../tours/UserTours\";\nimport AddWorkHour from \"./../workHours/AddWorkHours\";\nimport Home from \"./Home\";\nimport UserHome from \"./UserHome\";\n\nconst RouteWithLoader = ({ children }) => {\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setLoaded(true), 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <>\n      <Preloader show={loaded ? false : true} />\n      {children}\n    </>\n  );\n};\nconst RouteWithSidebar = ({ children }) => {\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setLoaded(true), 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const localStorageIsSettingsVisible = () => {\n    return localStorage.getItem(\"settingsVisible\") === \"false\" ? false : true;\n  };\n\n  const [showSettings, setShowSettings] = useState(\n    localStorageIsSettingsVisible\n  );\n\n  const toggleSettings = () => {\n    setShowSettings(!showSettings);\n    localStorage.setItem(\"settingsVisible\", !showSettings);\n  };\n\n  return (\n    <>\n      <Preloader show={loaded ? false : true} />\n\n      <main\n        className=\"content p-0 h-100 d-flex\"\n        style={{ flexDirection: \"column\" }}\n      >\n        <Sidebar />\n        <div className=\"d-flex h-100 justify-content-center p-1 p-sm-3\">\n          {children}\n        </div>\n\n        {/* <Footer toggleSettings={toggleSettings} showSettings={showSettings} /> */}\n      </main>\n    </>\n  );\n};\n\nconst RouteWithSidebarPhone = ({ children }) => {\n  return (\n    <>\n      <main\n        className=\"p-0 h-100 d-flex overflow-auto bg-nonary\"\n        style={{ flexDirection: \"column\" }}\n      >\n        <div className=\"w-100\">\n          <Sidebar3 />\n        </div>\n        <div style={{ flex: \"1 1\" }}>{children}</div>\n      </main>\n    </>\n  );\n};\nconst RouteWithLogoPhone = ({ children }) => {\n  return (\n    <>\n      <main\n        className=\"p-0 h-100 d-flex overflow-auto\"\n        style={{ flexDirection: \"column\" }}\n      >\n        <div className=\"w-100\">\n          <Sidebar2 />\n        </div>\n        <div style={{ flex: \"1 1\" }}>{children}</div>\n      </main>\n    </>\n  );\n};\n\nfunction PrivateOutlet({ role = [] }) {\n  const { currentUser, currentRole, findConnection } = useAuth();\n  const [backendConnection, setBackendConnection] = useState(\"pending\");\n  useEffect(() => {\n    findConnection()\n      .then((res) => {\n        currentRole.then((r) => {\n          const auth = r.reduce(\n            (a, b) => a || role.includes(b) || b === \"ROLE_SUPER\",\n            false\n          );\n          auth ? setBackendConnection(\"loaded\") : setBackendConnection(\"error\");\n        });\n      })\n      .catch((er) => {\n        setBackendConnection(\"error\");\n      });\n  }, [currentRole, role, findConnection]);\n\n  return currentUser ? (\n    backendConnection === \"pending\" ? (\n      <Preloader show={true} />\n    ) : backendConnection === \"loaded\" ? (\n      <Outlet />\n    ) : (\n      <Navigate to={MyRoutes.ServerError.path} />\n    )\n  ) : (\n    <Navigate to={MyRoutes.Signin.path} />\n  );\n}\nconst HomePage = () => (\n  <AuthProvider>\n    <Routes>\n      {/* <Route path=\"*\" element={<NotFound />}></Route> */}\n      <Route exact path={MyRoutes.Home.path} element={<Home />} />\n      <Route exact path={MyRoutes.Signin.path} element={<Signin />} />\n      <Route exact path={MyRoutes.ServerError.path} element={<ServerError />} />\n      <Route exact path={MyRoutes.NotFound.path} element={<NotFound />}>\n        <Route exact element={<NotFound />} />\n      </Route>\n      <Route\n        exact\n        path={MyRoutes.DashboardOverview.path}\n        element={<PrivateOutlet role={[\"ROLE_ADMIN\"]} />}\n      >\n        <Route\n          exact\n          path={MyRoutes.DashboardOverview.path}\n          element={\n            <RouteWithSidebar>\n              <DashboardOverview />\n            </RouteWithSidebar>\n          }\n        />\n      </Route>\n      <Route\n        exact\n        path={MyRoutes.UserHome.path}\n        element={<PrivateOutlet role={[\"ROLE_ADMIN\", \"ROLE_DRIVER\"]} />}\n      >\n        <Route\n          exact\n          path={MyRoutes.UserHome.path}\n          element={\n            <RouteWithLogoPhone>\n              <UserHome />\n            </RouteWithLogoPhone>\n          }\n        />\n      </Route>\n      <Route\n        exact\n        path={MyRoutes.UserTours.path}\n        element={<PrivateOutlet role={[\"ROLE_ADMIN\", \"ROLE_DRIVER\"]} />}\n      >\n        <Route\n          exact\n          path={MyRoutes.UserTours.path}\n          element={\n            <RouteWithSidebarPhone>\n              <UserTours />\n            </RouteWithSidebarPhone>\n          }\n        />\n      </Route>\n      <Route\n        exact\n        path={MyRoutes.UserOverview.path}\n        element={<PrivateOutlet role={[\"ROLE_ADMIN\", \"ROLE_DRIVER\"]} />}\n      >\n        <Route\n          exact\n          path={MyRoutes.UserOverview.path}\n          element={\n            <RouteWithSidebarPhone>\n              <UserOverview />\n            </RouteWithSidebarPhone>\n          }\n        />\n      </Route>\n\n      <Route\n        exact\n        path={MyRoutes.UserSettings.path}\n        element={<PrivateOutlet role={[\"ROLE_ADMIN\", \"ROLE_DRIVER\"]} />}\n      >\n        <Route\n          exact\n          path={MyRoutes.UserSettings.path}\n          element={\n            <RouteWithSidebarPhone>\n              <UserSettings />\n            </RouteWithSidebarPhone>\n          }\n        />\n      </Route>\n      <Route\n        exact\n        path={MyRoutes.AddTour.path}\n        element={<PrivateOutlet role={[\"ROLE_ADMIN\", \"ROLE_DRIVER\"]} />}\n      >\n        <Route\n          exact\n          path={MyRoutes.AddTour.path}\n          element={\n            <RouteWithSidebarPhone>\n              <AddTours />\n            </RouteWithSidebarPhone>\n          }\n        />\n      </Route>\n      <Route\n        exact\n        path={MyRoutes.AddWorkHours.path}\n        element={<PrivateOutlet role={[\"ROLE_ADMIN\", \"ROLE_DRIVER\"]} />}\n      >\n        <Route\n          exact\n          path={MyRoutes.AddWorkHours.path}\n          element={\n            <RouteWithSidebarPhone>\n              <AddWorkHour />\n            </RouteWithSidebarPhone>\n          }\n        />\n      </Route>\n      <Route\n        exact\n        path={MyRoutes.UserVacations.path}\n        element={<PrivateOutlet role={[\"ROLE_ADMIN\", \"ROLE_DRIVER\"]} />}\n      >\n        <Route\n          exact\n          path={MyRoutes.UserVacations.path}\n          element={\n            <RouteWithSidebarPhone>\n              <UserVacations />\n            </RouteWithSidebarPhone>\n          }\n        />\n      </Route>\n      <Route\n        exact\n        path={MyRoutes.UserWorkHours.path}\n        element={<PrivateOutlet role={[\"ROLE_ADMIN\", \"ROLE_DRIVER\"]} />}\n      >\n        <Route\n          exact\n          path={MyRoutes.UserWorkHours.path}\n          element={\n            <RouteWithSidebarPhone>\n              <UserWorkHours />\n            </RouteWithSidebarPhone>\n          }\n        />\n      </Route>\n      <Route\n        exact\n        path={MyRoutes.DashboardTours.path}\n        element={<PrivateOutlet role={[\"ROLE_ADMIN\"]} />}\n      >\n        <Route\n          exact\n          path={MyRoutes.DashboardTours.path}\n          element={\n            <RouteWithSidebar>\n              <DashboardTours />\n            </RouteWithSidebar>\n          }\n        />\n      </Route>\n      <Route\n        exact\n        path={MyRoutes.Users.path}\n        element={<PrivateOutlet role={[\"ROLE_ADMIN\"]} />}\n      >\n        <Route\n          exact\n          path={MyRoutes.Users.path}\n          element={\n            <RouteWithSidebar>\n              <Users />\n            </RouteWithSidebar>\n          }\n        />\n      </Route>\n      <Route\n        exact\n        path={MyRoutes.DashboardWorkHours.path}\n        element={<PrivateOutlet role={[\"ROLE_ADMIN\"]} />}\n      >\n        <Route\n          exact\n          path={MyRoutes.DashboardWorkHours.path}\n          element={\n            <RouteWithSidebar>\n              <DashboardWorkHours />\n            </RouteWithSidebar>\n          }\n        />\n      </Route>\n      <Route\n        exact\n        path={MyRoutes.Chat.path}\n        element={<PrivateOutlet role={[\"ROLE_ADMIN\"]} />}\n      >\n        <Route\n          exact\n          path={MyRoutes.Chat.path}\n          element={\n            <RouteWithSidebar>\n              <Chat />\n            </RouteWithSidebar>\n          }\n        />\n      </Route>\n      <Route\n        exact\n        path={MyRoutes.UserMessenger.path}\n        element={<PrivateOutlet role={[\"ROLE_ADMIN\", \"ROLE_USER\"]} />}\n      >\n        <Route\n          exact\n          path={MyRoutes.UserMessenger.path}\n          element={\n            <RouteWithSidebarPhone>\n              <UserMessenger />\n            </RouteWithSidebarPhone>\n          }\n        />\n      </Route>\n      <Route\n        exact\n        path={MyRoutes.UserChat.path}\n        element={<PrivateOutlet role={[\"ROLE_ADMIN\", \"ROLE_USER\"]} />}\n      >\n        <Route\n          exact\n          path={MyRoutes.UserChat.path}\n          element={\n            <RouteWithSidebarPhone>\n              <UserChat />\n            </RouteWithSidebarPhone>\n          }\n        />\n      </Route>\n      <Route\n        exact\n        path={MyRoutes.AddUser.path}\n        element={<PrivateOutlet role={[\"ROLE_ADMIN\"]} />}\n      >\n        <Route\n          exact\n          path={MyRoutes.AddUser.path}\n          element={<RouteWithSidebar>{<AddUser />}</RouteWithSidebar>}\n        />\n      </Route>\n      <Route\n        exact\n        path={MyRoutes.Settings.path}\n        element={<PrivateOutlet role={[\"ROLE_ADMIN\"]} />}\n      >\n        <Route\n          exact\n          path={MyRoutes.Settings.path}\n          element={\n            <RouteWithSidebar>\n              <Settings />\n            </RouteWithSidebar>\n          }\n        />\n      </Route>\n    </Routes>\n  </AuthProvider>\n);\n\nexport default HomePage;\n","// =========================================================\n// * Volt React Dashboard\n// =========================================================\n\n// * Product Page: https://themesberg.com/product/dashboard/volt-react\n// * Copyright 2021 Themesberg (https://www.themesberg.com)\n// * Official Repository: https://github.com/themesberg/volt-react-dashboard\n// * License: MIT License (https://themesberg.com/licensing)\n\n// * Designed and coded by https://themesberg.com\n\n// =========================================================\n\n// * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. Please contact us to request a removal.\n\n// vendor styles\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n// import AdapterDateFns from \"@mui/lab/AdapterDateFns\";\n// import LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport HomePage from \"./pages/home/HomePage\";\nimport { createReduxStore } from \"./pages/reducers/redux\";\nimport \"./scss/volt.scss\";\n\nReactDOM.render(\n  <Provider store={createReduxStore()}>\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <HashRouter>\n        <RecoilRoot>\n          <ScrollToTop />\n          <HomePage />\n        </RecoilRoot>\n      </HashRouter>\n    </LocalizationProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Image } from \"@themesberg/react-bootstrap\";\r\nimport React from \"react\";\r\nimport ReactLogo from \"../assets/img/technologies/react-logo-transparent.svg\";\r\n\r\nexport const ComponentPreLoader = ({ show = true, logo = true }) => {\r\n  return (\r\n    <div\r\n      className={`component-preloader h-100 flex-column justify-content-center align-items-center ${\r\n        show ? \"\" : \"show\"\r\n      }`}\r\n    >\r\n      <div className=\"loader-element animate__animated animate__jackInTheBox\">\r\n        {logo ? (\r\n          <Image\r\n            className=\"loader-element animate__animated animate__jackInTheBox\"\r\n            src={ReactLogo}\r\n            height={400}\r\n          />\r\n        ) : (\r\n          <FontAwesomeIcon\r\n            className=\" d-flex align-middle\"\r\n            style={{ height: \"20px\", width: \"20px\" }}\r\n            icon={faSpinner}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"sourceRoot":""}